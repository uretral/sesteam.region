var main =
    /******/ (function(modules) { // webpackBootstrap
    /******/ 	function hotDisposeChunk(chunkId) {
        /******/ 		delete installedChunks[chunkId];
        /******/ 	}
    /******/ 	var parentHotUpdateCallback = window["webpackHotUpdate_name_"];
    /******/ 	window["webpackHotUpdate_name_"] = // eslint-disable-next-line no-unused-vars
        /******/ 	function webpackHotUpdateCallback(chunkId, moreModules) {
        /******/ 		hotAddUpdateChunk(chunkId, moreModules);
        /******/ 		if (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
        /******/ 	} ;
    /******/
    /******/ 	// eslint-disable-next-line no-unused-vars
    /******/ 	function hotDownloadUpdateChunk(chunkId) {
        /******/ 		var script = document.createElement("script");
        /******/ 		script.charset = "utf-8";
        /******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
        /******/ 		if (null) script.crossOrigin = null;
        /******/ 		document.head.appendChild(script);
        /******/ 	}
    /******/
    /******/ 	// eslint-disable-next-line no-unused-vars
    /******/ 	function hotDownloadManifest(requestTimeout) {
        /******/ 		requestTimeout = requestTimeout || 10000;
        /******/ 		return new Promise(function(resolve, reject) {
            /******/ 			if (typeof XMLHttpRequest === "undefined") {
                /******/ 				return reject(new Error("No browser support"));
                /******/ 			}
            /******/ 			try {
                /******/ 				var request = new XMLHttpRequest();
                /******/ 				var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
                /******/ 				request.open("GET", requestPath, true);
                /******/ 				request.timeout = requestTimeout;
                /******/ 				request.send(null);
                /******/ 			} catch (err) {
                /******/ 				return reject(err);
                /******/ 			}
            /******/ 			request.onreadystatechange = function() {
                /******/ 				if (request.readyState !== 4) return;
                /******/ 				if (request.status === 0) {
                    /******/ 					// timeout
                    /******/ 					reject(
                        /******/ 						new Error("Manifest request to " + requestPath + " timed out.")
                        /******/ 					);
                    /******/ 				} else if (request.status === 404) {
                    /******/ 					// no update available
                    /******/ 					resolve();
                    /******/ 				} else if (request.status !== 200 && request.status !== 304) {
                    /******/ 					// other failure
                    /******/ 					reject(new Error("Manifest request to " + requestPath + " failed."));
                    /******/ 				} else {
                    /******/ 					// success
                    /******/ 					try {
                        /******/ 						var update = JSON.parse(request.responseText);
                        /******/ 					} catch (e) {
                        /******/ 						reject(e);
                        /******/ 						return;
                        /******/ 					}
                    /******/ 					resolve(update);
                    /******/ 				}
                /******/ 			};
            /******/ 		});
        /******/ 	}
    /******/
    /******/ 	var hotApplyOnUpdate = true;
    /******/ 	// eslint-disable-next-line no-unused-vars
    /******/ 	var hotCurrentHash = "8168011ac8333f86bd07";
    /******/ 	var hotRequestTimeout = 10000;
    /******/ 	var hotCurrentModuleData = {};
    /******/ 	var hotCurrentChildModule;
    /******/ 	// eslint-disable-next-line no-unused-vars
    /******/ 	var hotCurrentParents = [];
    /******/ 	// eslint-disable-next-line no-unused-vars
    /******/ 	var hotCurrentParentsTemp = [];
    /******/
    /******/ 	// eslint-disable-next-line no-unused-vars
    /******/ 	function hotCreateRequire(moduleId) {
        /******/ 		var me = installedModules[moduleId];
        /******/ 		if (!me) return __webpack_require__;
        /******/ 		var fn = function(request) {
            /******/ 			if (me.hot.active) {
                /******/ 				if (installedModules[request]) {
                    /******/ 					if (installedModules[request].parents.indexOf(moduleId) === -1) {
                        /******/ 						installedModules[request].parents.push(moduleId);
                        /******/ 					}
                    /******/ 				} else {
                    /******/ 					hotCurrentParents = [moduleId];
                    /******/ 					hotCurrentChildModule = request;
                    /******/ 				}
                /******/ 				if (me.children.indexOf(request) === -1) {
                    /******/ 					me.children.push(request);
                    /******/ 				}
                /******/ 			} else {
                /******/ 				console.warn(
                    /******/ 					"[HMR] unexpected require(" +
                    /******/ 						request +
                    /******/ 						") from disposed module " +
                    /******/ 						moduleId
                    /******/ 				);
                /******/ 				hotCurrentParents = [];
                /******/ 			}
            /******/ 			return __webpack_require__(request);
            /******/ 		};
        /******/ 		var ObjectFactory = function ObjectFactory(name) {
            /******/ 			return {
                /******/ 				configurable: true,
                /******/ 				enumerable: true,
                /******/ 				get: function() {
                    /******/ 					return __webpack_require__[name];
                    /******/ 				},
                /******/ 				set: function(value) {
                    /******/ 					__webpack_require__[name] = value;
                    /******/ 				}
                /******/ 			};
            /******/ 		};
        /******/ 		for (var name in __webpack_require__) {
            /******/ 			if (
                /******/ 				Object.prototype.hasOwnProperty.call(__webpack_require__, name) &&
                /******/ 				name !== "e" &&
                /******/ 				name !== "t"
            /******/ 			) {
                /******/ 				Object.defineProperty(fn, name, ObjectFactory(name));
                /******/ 			}
            /******/ 		}
        /******/ 		fn.e = function(chunkId) {
            /******/ 			if (hotStatus === "ready") hotSetStatus("prepare");
            /******/ 			hotChunksLoading++;
            /******/ 			return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
                /******/ 				finishChunkLoading();
                /******/ 				throw err;
                /******/ 			});
            /******/
            /******/ 			function finishChunkLoading() {
                /******/ 				hotChunksLoading--;
                /******/ 				if (hotStatus === "prepare") {
                    /******/ 					if (!hotWaitingFilesMap[chunkId]) {
                        /******/ 						hotEnsureUpdateChunk(chunkId);
                        /******/ 					}
                    /******/ 					if (hotChunksLoading === 0 && hotWaitingFiles === 0) {
                        /******/ 						hotUpdateDownloaded();
                        /******/ 					}
                    /******/ 				}
                /******/ 			}
            /******/ 		};
        /******/ 		fn.t = function(value, mode) {
            /******/ 			if (mode & 1) value = fn(value);
            /******/ 			return __webpack_require__.t(value, mode & ~1);
            /******/ 		};
        /******/ 		return fn;
        /******/ 	}
    /******/
    /******/ 	// eslint-disable-next-line no-unused-vars
    /******/ 	function hotCreateModule(moduleId) {
        /******/ 		var hot = {
            /******/ 			// private stuff
            /******/ 			_acceptedDependencies: {},
            /******/ 			_declinedDependencies: {},
            /******/ 			_selfAccepted: false,
            /******/ 			_selfDeclined: false,
            /******/ 			_disposeHandlers: [],
            /******/ 			_main: hotCurrentChildModule !== moduleId,
            /******/
            /******/ 			// Module API
            /******/ 			active: true,
            /******/ 			accept: function(dep, callback) {
                /******/ 				if (dep === undefined) hot._selfAccepted = true;
                /******/ 				else if (typeof dep === "function") hot._selfAccepted = dep;
                /******/ 				else if (typeof dep === "object")
                /******/ 					for (var i = 0; i < dep.length; i++)
                        /******/ 						hot._acceptedDependencies[dep[i]] = callback || function() {};
                /******/ 				else hot._acceptedDependencies[dep] = callback || function() {};
                /******/ 			},
            /******/ 			decline: function(dep) {
                /******/ 				if (dep === undefined) hot._selfDeclined = true;
                /******/ 				else if (typeof dep === "object")
                /******/ 					for (var i = 0; i < dep.length; i++)
                        /******/ 						hot._declinedDependencies[dep[i]] = true;
                /******/ 				else hot._declinedDependencies[dep] = true;
                /******/ 			},
            /******/ 			dispose: function(callback) {
                /******/ 				hot._disposeHandlers.push(callback);
                /******/ 			},
            /******/ 			addDisposeHandler: function(callback) {
                /******/ 				hot._disposeHandlers.push(callback);
                /******/ 			},
            /******/ 			removeDisposeHandler: function(callback) {
                /******/ 				var idx = hot._disposeHandlers.indexOf(callback);
                /******/ 				if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
                /******/ 			},
            /******/
            /******/ 			// Management API
            /******/ 			check: hotCheck,
            /******/ 			apply: hotApply,
            /******/ 			status: function(l) {
                /******/ 				if (!l) return hotStatus;
                /******/ 				hotStatusHandlers.push(l);
                /******/ 			},
            /******/ 			addStatusHandler: function(l) {
                /******/ 				hotStatusHandlers.push(l);
                /******/ 			},
            /******/ 			removeStatusHandler: function(l) {
                /******/ 				var idx = hotStatusHandlers.indexOf(l);
                /******/ 				if (idx >= 0) hotStatusHandlers.splice(idx, 1);
                /******/ 			},
            /******/
            /******/ 			//inherit from previous dispose call
            /******/ 			data: hotCurrentModuleData[moduleId]
            /******/ 		};
        /******/ 		hotCurrentChildModule = undefined;
        /******/ 		return hot;
        /******/ 	}
    /******/
    /******/ 	var hotStatusHandlers = [];
    /******/ 	var hotStatus = "idle";
    /******/
    /******/ 	function hotSetStatus(newStatus) {
        /******/ 		hotStatus = newStatus;
        /******/ 		for (var i = 0; i < hotStatusHandlers.length; i++)
            /******/ 			hotStatusHandlers[i].call(null, newStatus);
        /******/ 	}
    /******/
    /******/ 	// while downloading
    /******/ 	var hotWaitingFiles = 0;
    /******/ 	var hotChunksLoading = 0;
    /******/ 	var hotWaitingFilesMap = {};
    /******/ 	var hotRequestedFilesMap = {};
    /******/ 	var hotAvailableFilesMap = {};
    /******/ 	var hotDeferred;
    /******/
    /******/ 	// The update info
    /******/ 	var hotUpdate, hotUpdateNewHash;
    /******/
    /******/ 	function toModuleId(id) {
        /******/ 		var isNumber = +id + "" === id;
        /******/ 		return isNumber ? +id : id;
        /******/ 	}
    /******/
    /******/ 	function hotCheck(apply) {
        /******/ 		if (hotStatus !== "idle") {
            /******/ 			throw new Error("check() is only allowed in idle status");
            /******/ 		}
        /******/ 		hotApplyOnUpdate = apply;
        /******/ 		hotSetStatus("check");
        /******/ 		return hotDownloadManifest(hotRequestTimeout).then(function(update) {
            /******/ 			if (!update) {
                /******/ 				hotSetStatus("idle");
                /******/ 				return null;
                /******/ 			}
            /******/ 			hotRequestedFilesMap = {};
            /******/ 			hotWaitingFilesMap = {};
            /******/ 			hotAvailableFilesMap = update.c;
            /******/ 			hotUpdateNewHash = update.h;
            /******/
            /******/ 			hotSetStatus("prepare");
            /******/ 			var promise = new Promise(function(resolve, reject) {
                /******/ 				hotDeferred = {
                    /******/ 					resolve: resolve,
                    /******/ 					reject: reject
                    /******/ 				};
                /******/ 			});
            /******/ 			hotUpdate = {};
            /******/ 			var chunkId = "main";
            /******/ 			// eslint-disable-next-line no-lone-blocks
            /******/ 			{
                /******/ 				/*globals chunkId */
                /******/ 				hotEnsureUpdateChunk(chunkId);
                /******/ 			}
            /******/ 			if (
                /******/ 				hotStatus === "prepare" &&
                /******/ 				hotChunksLoading === 0 &&
                /******/ 				hotWaitingFiles === 0
            /******/ 			) {
                /******/ 				hotUpdateDownloaded();
                /******/ 			}
            /******/ 			return promise;
            /******/ 		});
        /******/ 	}
    /******/
    /******/ 	// eslint-disable-next-line no-unused-vars
    /******/ 	function hotAddUpdateChunk(chunkId, moreModules) {
        /******/ 		if (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
        /******/ 			return;
        /******/ 		hotRequestedFilesMap[chunkId] = false;
        /******/ 		for (var moduleId in moreModules) {
            /******/ 			if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
                /******/ 				hotUpdate[moduleId] = moreModules[moduleId];
                /******/ 			}
            /******/ 		}
        /******/ 		if (--hotWaitingFiles === 0 && hotChunksLoading === 0) {
            /******/ 			hotUpdateDownloaded();
            /******/ 		}
        /******/ 	}
    /******/
    /******/ 	function hotEnsureUpdateChunk(chunkId) {
        /******/ 		if (!hotAvailableFilesMap[chunkId]) {
            /******/ 			hotWaitingFilesMap[chunkId] = true;
            /******/ 		} else {
            /******/ 			hotRequestedFilesMap[chunkId] = true;
            /******/ 			hotWaitingFiles++;
            /******/ 			hotDownloadUpdateChunk(chunkId);
            /******/ 		}
        /******/ 	}
    /******/
    /******/ 	function hotUpdateDownloaded() {
        /******/ 		hotSetStatus("ready");
        /******/ 		var deferred = hotDeferred;
        /******/ 		hotDeferred = null;
        /******/ 		if (!deferred) return;
        /******/ 		if (hotApplyOnUpdate) {
            /******/ 			// Wrap deferred object in Promise to mark it as a well-handled Promise to
            /******/ 			// avoid triggering uncaught exception warning in Chrome.
            /******/ 			// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666
            /******/ 			Promise.resolve()
            /******/ 				.then(function() {
                /******/ 					return hotApply(hotApplyOnUpdate);
                /******/ 				})
            /******/ 				.then(
                /******/ 					function(result) {
                    /******/ 						deferred.resolve(result);
                    /******/ 					},
                /******/ 					function(err) {
                    /******/ 						deferred.reject(err);
                    /******/ 					}
                /******/ 				);
            /******/ 		} else {
            /******/ 			var outdatedModules = [];
            /******/ 			for (var id in hotUpdate) {
                /******/ 				if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
                    /******/ 					outdatedModules.push(toModuleId(id));
                    /******/ 				}
                /******/ 			}
            /******/ 			deferred.resolve(outdatedModules);
            /******/ 		}
        /******/ 	}
    /******/
    /******/ 	function hotApply(options) {
        /******/ 		if (hotStatus !== "ready")
        /******/ 			throw new Error("apply() is only allowed in ready status");
        /******/ 		options = options || {};
        /******/
        /******/ 		var cb;
        /******/ 		var i;
        /******/ 		var j;
        /******/ 		var module;
        /******/ 		var moduleId;
        /******/
        /******/ 		function getAffectedStuff(updateModuleId) {
            /******/ 			var outdatedModules = [updateModuleId];
            /******/ 			var outdatedDependencies = {};
            /******/
            /******/ 			var queue = outdatedModules.slice().map(function(id) {
                /******/ 				return {
                    /******/ 					chain: [id],
                    /******/ 					id: id
                    /******/ 				};
                /******/ 			});
            /******/ 			while (queue.length > 0) {
                /******/ 				var queueItem = queue.pop();
                /******/ 				var moduleId = queueItem.id;
                /******/ 				var chain = queueItem.chain;
                /******/ 				module = installedModules[moduleId];
                /******/ 				if (!module || module.hot._selfAccepted) continue;
                /******/ 				if (module.hot._selfDeclined) {
                    /******/ 					return {
                        /******/ 						type: "self-declined",
                        /******/ 						chain: chain,
                        /******/ 						moduleId: moduleId
                        /******/ 					};
                    /******/ 				}
                /******/ 				if (module.hot._main) {
                    /******/ 					return {
                        /******/ 						type: "unaccepted",
                        /******/ 						chain: chain,
                        /******/ 						moduleId: moduleId
                        /******/ 					};
                    /******/ 				}
                /******/ 				for (var i = 0; i < module.parents.length; i++) {
                    /******/ 					var parentId = module.parents[i];
                    /******/ 					var parent = installedModules[parentId];
                    /******/ 					if (!parent) continue;
                    /******/ 					if (parent.hot._declinedDependencies[moduleId]) {
                        /******/ 						return {
                            /******/ 							type: "declined",
                            /******/ 							chain: chain.concat([parentId]),
                            /******/ 							moduleId: moduleId,
                            /******/ 							parentId: parentId
                            /******/ 						};
                        /******/ 					}
                    /******/ 					if (outdatedModules.indexOf(parentId) !== -1) continue;
                    /******/ 					if (parent.hot._acceptedDependencies[moduleId]) {
                        /******/ 						if (!outdatedDependencies[parentId])
                        /******/ 							outdatedDependencies[parentId] = [];
                        /******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
                        /******/ 						continue;
                        /******/ 					}
                    /******/ 					delete outdatedDependencies[parentId];
                    /******/ 					outdatedModules.push(parentId);
                    /******/ 					queue.push({
                        /******/ 						chain: chain.concat([parentId]),
                        /******/ 						id: parentId
                        /******/ 					});
                    /******/ 				}
                /******/ 			}
            /******/
            /******/ 			return {
                /******/ 				type: "accepted",
                /******/ 				moduleId: updateModuleId,
                /******/ 				outdatedModules: outdatedModules,
                /******/ 				outdatedDependencies: outdatedDependencies
                /******/ 			};
            /******/ 		}
        /******/
        /******/ 		function addAllToSet(a, b) {
            /******/ 			for (var i = 0; i < b.length; i++) {
                /******/ 				var item = b[i];
                /******/ 				if (a.indexOf(item) === -1) a.push(item);
                /******/ 			}
            /******/ 		}
        /******/
        /******/ 		// at begin all updates modules are outdated
        /******/ 		// the "outdated" status can propagate to parents if they don't accept the children
        /******/ 		var outdatedDependencies = {};
        /******/ 		var outdatedModules = [];
        /******/ 		var appliedUpdate = {};
        /******/
        /******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire() {
            /******/ 			console.warn(
                /******/ 				"[HMR] unexpected require(" + result.moduleId + ") to disposed module"
                /******/ 			);
            /******/ 		};
        /******/
        /******/ 		for (var id in hotUpdate) {
            /******/ 			if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
                /******/ 				moduleId = toModuleId(id);
                /******/ 				/** @type {TODO} */
                /******/ 				var result;
                /******/ 				if (hotUpdate[id]) {
                    /******/ 					result = getAffectedStuff(moduleId);
                    /******/ 				} else {
                    /******/ 					result = {
                        /******/ 						type: "disposed",
                        /******/ 						moduleId: id
                        /******/ 					};
                    /******/ 				}
                /******/ 				/** @type {Error|false} */
                /******/ 				var abortError = false;
                /******/ 				var doApply = false;
                /******/ 				var doDispose = false;
                /******/ 				var chainInfo = "";
                /******/ 				if (result.chain) {
                    /******/ 					chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
                    /******/ 				}
                /******/ 				switch (result.type) {
                    /******/ 					case "self-declined":
                        /******/ 						if (options.onDeclined) options.onDeclined(result);
                        /******/ 						if (!options.ignoreDeclined)
                        /******/ 							abortError = new Error(
                                /******/ 								"Aborted because of self decline: " +
                                /******/ 									result.moduleId +
                                /******/ 									chainInfo
                                /******/ 							);
                        /******/ 						break;
                    /******/ 					case "declined":
                        /******/ 						if (options.onDeclined) options.onDeclined(result);
                        /******/ 						if (!options.ignoreDeclined)
                        /******/ 							abortError = new Error(
                                /******/ 								"Aborted because of declined dependency: " +
                                /******/ 									result.moduleId +
                                /******/ 									" in " +
                                /******/ 									result.parentId +
                                /******/ 									chainInfo
                                /******/ 							);
                        /******/ 						break;
                    /******/ 					case "unaccepted":
                        /******/ 						if (options.onUnaccepted) options.onUnaccepted(result);
                        /******/ 						if (!options.ignoreUnaccepted)
                        /******/ 							abortError = new Error(
                                /******/ 								"Aborted because " + moduleId + " is not accepted" + chainInfo
                                /******/ 							);
                        /******/ 						break;
                    /******/ 					case "accepted":
                        /******/ 						if (options.onAccepted) options.onAccepted(result);
                        /******/ 						doApply = true;
                        /******/ 						break;
                    /******/ 					case "disposed":
                        /******/ 						if (options.onDisposed) options.onDisposed(result);
                        /******/ 						doDispose = true;
                        /******/ 						break;
                    /******/ 					default:
                        /******/ 						throw new Error("Unexception type " + result.type);
                    /******/ 				}
                /******/ 				if (abortError) {
                    /******/ 					hotSetStatus("abort");
                    /******/ 					return Promise.reject(abortError);
                    /******/ 				}
                /******/ 				if (doApply) {
                    /******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId];
                    /******/ 					addAllToSet(outdatedModules, result.outdatedModules);
                    /******/ 					for (moduleId in result.outdatedDependencies) {
                        /******/ 						if (
                            /******/ 							Object.prototype.hasOwnProperty.call(
                            /******/ 								result.outdatedDependencies,
                            /******/ 								moduleId
                            /******/ 							)
                        /******/ 						) {
                            /******/ 							if (!outdatedDependencies[moduleId])
                            /******/ 								outdatedDependencies[moduleId] = [];
                            /******/ 							addAllToSet(
                                /******/ 								outdatedDependencies[moduleId],
                                /******/ 								result.outdatedDependencies[moduleId]
                                /******/ 							);
                            /******/ 						}
                        /******/ 					}
                    /******/ 				}
                /******/ 				if (doDispose) {
                    /******/ 					addAllToSet(outdatedModules, [result.moduleId]);
                    /******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire;
                    /******/ 				}
                /******/ 			}
            /******/ 		}
        /******/
        /******/ 		// Store self accepted outdated modules to require them later by the module system
        /******/ 		var outdatedSelfAcceptedModules = [];
        /******/ 		for (i = 0; i < outdatedModules.length; i++) {
            /******/ 			moduleId = outdatedModules[i];
            /******/ 			if (
                /******/ 				installedModules[moduleId] &&
                /******/ 				installedModules[moduleId].hot._selfAccepted
            /******/ 			)
            /******/ 				outdatedSelfAcceptedModules.push({
                    /******/ 					module: moduleId,
                    /******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
                    /******/ 				});
            /******/ 		}
        /******/
        /******/ 		// Now in "dispose" phase
        /******/ 		hotSetStatus("dispose");
        /******/ 		Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
            /******/ 			if (hotAvailableFilesMap[chunkId] === false) {
                /******/ 				hotDisposeChunk(chunkId);
                /******/ 			}
            /******/ 		});
        /******/
        /******/ 		var idx;
        /******/ 		var queue = outdatedModules.slice();
        /******/ 		while (queue.length > 0) {
            /******/ 			moduleId = queue.pop();
            /******/ 			module = installedModules[moduleId];
            /******/ 			if (!module) continue;
            /******/
            /******/ 			var data = {};
            /******/
            /******/ 			// Call dispose handlers
            /******/ 			var disposeHandlers = module.hot._disposeHandlers;
            /******/ 			for (j = 0; j < disposeHandlers.length; j++) {
                /******/ 				cb = disposeHandlers[j];
                /******/ 				cb(data);
                /******/ 			}
            /******/ 			hotCurrentModuleData[moduleId] = data;
            /******/
            /******/ 			// disable module (this disables requires from this module)
            /******/ 			module.hot.active = false;
            /******/
            /******/ 			// remove module from cache
            /******/ 			delete installedModules[moduleId];
            /******/
            /******/ 			// when disposing there is no need to call dispose handler
            /******/ 			delete outdatedDependencies[moduleId];
            /******/
            /******/ 			// remove "parents" references from all children
            /******/ 			for (j = 0; j < module.children.length; j++) {
                /******/ 				var child = installedModules[module.children[j]];
                /******/ 				if (!child) continue;
                /******/ 				idx = child.parents.indexOf(moduleId);
                /******/ 				if (idx >= 0) {
                    /******/ 					child.parents.splice(idx, 1);
                    /******/ 				}
                /******/ 			}
            /******/ 		}
        /******/
        /******/ 		// remove outdated dependency from module children
        /******/ 		var dependency;
        /******/ 		var moduleOutdatedDependencies;
        /******/ 		for (moduleId in outdatedDependencies) {
            /******/ 			if (
                /******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
            /******/ 			) {
                /******/ 				module = installedModules[moduleId];
                /******/ 				if (module) {
                    /******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
                    /******/ 					for (j = 0; j < moduleOutdatedDependencies.length; j++) {
                        /******/ 						dependency = moduleOutdatedDependencies[j];
                        /******/ 						idx = module.children.indexOf(dependency);
                        /******/ 						if (idx >= 0) module.children.splice(idx, 1);
                        /******/ 					}
                    /******/ 				}
                /******/ 			}
            /******/ 		}
        /******/
        /******/ 		// Not in "apply" phase
        /******/ 		hotSetStatus("apply");
        /******/
        /******/ 		hotCurrentHash = hotUpdateNewHash;
        /******/
        /******/ 		// insert new code
        /******/ 		for (moduleId in appliedUpdate) {
            /******/ 			if (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
                /******/ 				modules[moduleId] = appliedUpdate[moduleId];
                /******/ 			}
            /******/ 		}
        /******/
        /******/ 		// call accept handlers
        /******/ 		var error = null;
        /******/ 		for (moduleId in outdatedDependencies) {
            /******/ 			if (
                /******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
            /******/ 			) {
                /******/ 				module = installedModules[moduleId];
                /******/ 				if (module) {
                    /******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
                    /******/ 					var callbacks = [];
                    /******/ 					for (i = 0; i < moduleOutdatedDependencies.length; i++) {
                        /******/ 						dependency = moduleOutdatedDependencies[i];
                        /******/ 						cb = module.hot._acceptedDependencies[dependency];
                        /******/ 						if (cb) {
                            /******/ 							if (callbacks.indexOf(cb) !== -1) continue;
                            /******/ 							callbacks.push(cb);
                            /******/ 						}
                        /******/ 					}
                    /******/ 					for (i = 0; i < callbacks.length; i++) {
                        /******/ 						cb = callbacks[i];
                        /******/ 						try {
                            /******/ 							cb(moduleOutdatedDependencies);
                            /******/ 						} catch (err) {
                            /******/ 							if (options.onErrored) {
                                /******/ 								options.onErrored({
                                    /******/ 									type: "accept-errored",
                                    /******/ 									moduleId: moduleId,
                                    /******/ 									dependencyId: moduleOutdatedDependencies[i],
                                    /******/ 									error: err
                                    /******/ 								});
                                /******/ 							}
                            /******/ 							if (!options.ignoreErrored) {
                                /******/ 								if (!error) error = err;
                                /******/ 							}
                            /******/ 						}
                        /******/ 					}
                    /******/ 				}
                /******/ 			}
            /******/ 		}
        /******/
        /******/ 		// Load self accepted modules
        /******/ 		for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {
            /******/ 			var item = outdatedSelfAcceptedModules[i];
            /******/ 			moduleId = item.module;
            /******/ 			hotCurrentParents = [moduleId];
            /******/ 			try {
                /******/ 				__webpack_require__(moduleId);
                /******/ 			} catch (err) {
                /******/ 				if (typeof item.errorHandler === "function") {
                    /******/ 					try {
                        /******/ 						item.errorHandler(err);
                        /******/ 					} catch (err2) {
                        /******/ 						if (options.onErrored) {
                            /******/ 							options.onErrored({
                                /******/ 								type: "self-accept-error-handler-errored",
                                /******/ 								moduleId: moduleId,
                                /******/ 								error: err2,
                                /******/ 								originalError: err
                                /******/ 							});
                            /******/ 						}
                        /******/ 						if (!options.ignoreErrored) {
                            /******/ 							if (!error) error = err2;
                            /******/ 						}
                        /******/ 						if (!error) error = err;
                        /******/ 					}
                    /******/ 				} else {
                    /******/ 					if (options.onErrored) {
                        /******/ 						options.onErrored({
                            /******/ 							type: "self-accept-errored",
                            /******/ 							moduleId: moduleId,
                            /******/ 							error: err
                            /******/ 						});
                        /******/ 					}
                    /******/ 					if (!options.ignoreErrored) {
                        /******/ 						if (!error) error = err;
                        /******/ 					}
                    /******/ 				}
                /******/ 			}
            /******/ 		}
        /******/
        /******/ 		// handle errors in accept handlers and self accepted module load
        /******/ 		if (error) {
            /******/ 			hotSetStatus("fail");
            /******/ 			return Promise.reject(error);
            /******/ 		}
        /******/
        /******/ 		hotSetStatus("idle");
        /******/ 		return new Promise(function(resolve) {
            /******/ 			resolve(outdatedModules);
            /******/ 		});
        /******/ 	}
    /******/
    /******/ 	// The module cache
    /******/ 	var installedModules = {};
    /******/
    /******/ 	// The require function
    /******/ 	function __webpack_require__(moduleId) {
        /******/
        /******/ 		// Check if module is in cache
        /******/ 		if(installedModules[moduleId]) {
            /******/ 			return installedModules[moduleId].exports;
            /******/ 		}
        /******/ 		// Create a new module (and put it into the cache)
        /******/ 		var module = installedModules[moduleId] = {
            /******/ 			i: moduleId,
            /******/ 			l: false,
            /******/ 			exports: {},
            /******/ 			hot: hotCreateModule(moduleId),
            /******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
            /******/ 			children: []
            /******/ 		};
        /******/
        /******/ 		// Execute the module function
        /******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
        /******/
        /******/ 		// Flag the module as loaded
        /******/ 		module.l = true;
        /******/
        /******/ 		// Return the exports of the module
        /******/ 		return module.exports;
        /******/ 	}
    /******/
    /******/
    /******/ 	// expose the modules object (__webpack_modules__)
    /******/ 	__webpack_require__.m = modules;
    /******/
    /******/ 	// expose the module cache
    /******/ 	__webpack_require__.c = installedModules;
    /******/
    /******/ 	// define getter function for harmony exports
    /******/ 	__webpack_require__.d = function(exports, name, getter) {
        /******/ 		if(!__webpack_require__.o(exports, name)) {
            /******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
            /******/ 		}
        /******/ 	};
    /******/
    /******/ 	// define __esModule on exports
    /******/ 	__webpack_require__.r = function(exports) {
        /******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
            /******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
            /******/ 		}
        /******/ 		Object.defineProperty(exports, '__esModule', { value: true });
        /******/ 	};
    /******/
    /******/ 	// create a fake namespace object
    /******/ 	// mode & 1: value is a module id, require it
    /******/ 	// mode & 2: merge all properties of value into the ns
    /******/ 	// mode & 4: return value when already ns object
    /******/ 	// mode & 8|1: behave like require
    /******/ 	__webpack_require__.t = function(value, mode) {
        /******/ 		if(mode & 1) value = __webpack_require__(value);
        /******/ 		if(mode & 8) return value;
        /******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
        /******/ 		var ns = Object.create(null);
        /******/ 		__webpack_require__.r(ns);
        /******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
        /******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
        /******/ 		return ns;
        /******/ 	};
    /******/
    /******/ 	// getDefaultExport function for compatibility with non-harmony modules
    /******/ 	__webpack_require__.n = function(module) {
        /******/ 		var getter = module && module.__esModule ?
            /******/ 			function getDefault() { return module['default']; } :
            /******/ 			function getModuleExports() { return module; };
        /******/ 		__webpack_require__.d(getter, 'a', getter);
        /******/ 		return getter;
        /******/ 	};
    /******/
    /******/ 	// Object.prototype.hasOwnProperty.call
    /******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
    /******/
    /******/ 	// __webpack_public_path__
    /******/ 	__webpack_require__.p = "";
    /******/
    /******/ 	// __webpack_hash__
    /******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
    /******/
    /******/
    /******/ 	// Load entry module and return exports
    /******/ 	return hotCreateRequire(0)(__webpack_require__.s = 0);
    /******/ })
/************************************************************************/
/******/ ({

    /***/ "./_doc/screenshots/detail.png":
    /*!*************************************!*\
  !*** ./_doc/screenshots/detail.png ***!
  \*************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/detail.png";

        /***/ }),

    /***/ "./node_modules/ansi-html/index.js":
    /*!*****************************************!*\
  !*** ./node_modules/ansi-html/index.js ***!
  \*****************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        module.exports = ansiHTML

// Reference to https://github.com/sindresorhus/ansi-regex
        var _regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/

        var _defColors = {
            reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]
            black: '000',
            red: 'ff0000',
            green: '209805',
            yellow: 'e8bf03',
            blue: '0000ff',
            magenta: 'ff00ff',
            cyan: '00ffee',
            lightgrey: 'f0f0f0',
            darkgrey: '888'
        }
        var _styles = {
            30: 'black',
            31: 'red',
            32: 'green',
            33: 'yellow',
            34: 'blue',
            35: 'magenta',
            36: 'cyan',
            37: 'lightgrey'
        }
        var _openTags = {
            '1': 'font-weight:bold', // bold
            '2': 'opacity:0.5', // dim
            '3': '<i>', // italic
            '4': '<u>', // underscore
            '8': 'display:none', // hidden
            '9': '<del>' // delete
        }
        var _closeTags = {
                '23': '</i>', // reset italic
                '24': '</u>', // reset underscore
                '29': '</del>' // reset delete
            }

        ;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {
            _closeTags[n] = '</span>'
        })

        /**
         * Converts text with ANSI color codes to HTML markup.
         * @param {String} text
         * @returns {*}
         */
        function ansiHTML (text) {
            // Returns the text if the string has no ANSI escape code.
            if (!_regANSI.test(text)) {
                return text
            }

            // Cache opened sequence.
            var ansiCodes = []
            // Replace with markup.
            var ret = text.replace(/\033\[(\d+)*m/g, function (match, seq) {
                var ot = _openTags[seq]
                if (ot) {
                    // If current sequence has been opened, close it.
                    if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast
                        ansiCodes.pop()
                        return '</span>'
                    }
                    // Open tag.
                    ansiCodes.push(seq)
                    return ot[0] === '<' ? ot : '<span style="' + ot + ';">'
                }

                var ct = _closeTags[seq]
                if (ct) {
                    // Pop sequence
                    ansiCodes.pop()
                    return ct
                }
                return ''
            })

            // Make sure tags are closed.
            var l = ansiCodes.length
            ;(l > 0) && (ret += Array(l + 1).join('</span>'))

            return ret
        }

        /**
         * Customize colors.
         * @param {Object} colors reference to _defColors
         */
        ansiHTML.setColors = function (colors) {
            if (typeof colors !== 'object') {
                throw new Error('`colors` parameter must be an Object.')
            }

            var _finalColors = {}
            for (var key in _defColors) {
                var hex = colors.hasOwnProperty(key) ? colors[key] : null
                if (!hex) {
                    _finalColors[key] = _defColors[key]
                    continue
                }
                if ('reset' === key) {
                    if (typeof hex === 'string') {
                        hex = [hex]
                    }
                    if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {
                        return typeof h !== 'string'
                    })) {
                        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')
                    }
                    var defHexColor = _defColors[key]
                    if (!hex[0]) {
                        hex[0] = defHexColor[0]
                    }
                    if (hex.length === 1 || !hex[1]) {
                        hex = [hex[0]]
                        hex.push(defHexColor[1])
                    }

                    hex = hex.slice(0, 2)
                } else if (typeof hex !== 'string') {
                    throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')
                }
                _finalColors[key] = hex
            }
            _setTags(_finalColors)
        }

        /**
         * Reset colors.
         */
        ansiHTML.reset = function () {
            _setTags(_defColors)
        }

        /**
         * Expose tags, including open and close.
         * @type {Object}
         */
        ansiHTML.tags = {}

        if (Object.defineProperty) {
            Object.defineProperty(ansiHTML.tags, 'open', {
                get: function () { return _openTags }
            })
            Object.defineProperty(ansiHTML.tags, 'close', {
                get: function () { return _closeTags }
            })
        } else {
            ansiHTML.tags.open = _openTags
            ansiHTML.tags.close = _closeTags
        }

        function _setTags (colors) {
            // reset all
            _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]
            // inverse
            _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]
            // dark grey
            _openTags['90'] = 'color:#' + colors.darkgrey

            for (var code in _styles) {
                var color = _styles[code]
                var oriColor = colors[color] || '000'
                _openTags[code] = 'color:#' + oriColor
                code = parseInt(code)
                _openTags[(code + 10).toString()] = 'background:#' + oriColor
            }
        }

        ansiHTML.reset()


        /***/ }),

    /***/ "./node_modules/ansi-regex/index.js":
    /*!******************************************!*\
  !*** ./node_modules/ansi-regex/index.js ***!
  \******************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        module.exports = function () {
            return /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g;
        };


        /***/ }),

    /***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/PestsCarousel.vue":
    /*!****************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/PestsCarousel.vue ***!
  \****************************************************************************************************************************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _pestsSlider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pestsSlider */ "./src/vue/common/pestsSlider.js");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

        /* harmony default export */ __webpack_exports__["default"] = ({
            name: "PestsCarousel",
            data: function data() {
                return {
                    slides: 123,
                    active: 0,
                    windowWidth: 0,
                    keys: [],
                    items: 5,
                    responsive: [{
                        width: 5000,
                        items: 5
                    }, {
                        width: 1220,
                        items: 3
                    }, {
                        width: 780,
                        items: 2
                    }, {
                        width: 560,
                        items: 1
                    }]
                };
            },
            watch: {
                items: function items() {
                    this.grouper();
                    this.active = 0;
                }
            },
            methods: {
                slideLeft: function slideLeft() {
                    this.active === 0 ? this.active = this.keys.length - 1 : this.active--;
                },
                slideRight: function slideRight() {
                    // this.active === this.items - 1 ? this.active = 0 : this.active++;
                    this.active === this.keys.length - 1 ? this.active = 0 : this.active++;
                },
                setItem: function setItem(k) {
                    this.active = k;
                },
                grouper: function grouper() {
                    var i,
                        j,
                        temparray = [],
                        chunk = this.items;
                    var k = 0;
                    var arrKeys = [];

                    for (i = 0, j = _pestsSlider__WEBPACK_IMPORTED_MODULE_0__["default"].length; i < j; i += chunk) {
                        temparray[k] = _pestsSlider__WEBPACK_IMPORTED_MODULE_0__["default"].slice(i, i + chunk);
                        arrKeys.push(k);
                        k++;
                    }

                    this.slides = temparray;
                    this.keys = arrKeys;
                },
                getWindowWidth: function getWindowWidth(event) {
                    for (var i in this.responsive) {
                        if (document.documentElement.clientWidth < this.responsive[i].width) {
                            this.items = this.responsive[i].items;
                        }
                    }

                    this.windowWidth = document.documentElement.clientWidth;
                }
            },
            beforeDestroy: function beforeDestroy() {
                window.removeEventListener('resize', this.getWindowWidth);
            },
            mounted: function mounted() {
                this.$nextTick(function () {
                    window.addEventListener('resize', this.getWindowWidth); //Init

                    this.getWindowWidth();
                    this.grouper();
                });
            }
        });

        /***/ }),

    /***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/Select.vue":
    /*!*********************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/Select.vue ***!
  \*********************************************************************************************************************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var vue_click_outside__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue-click-outside */ "./node_modules/vue-click-outside/index.js");
        /* harmony import */ var vue_click_outside__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue_click_outside__WEBPACK_IMPORTED_MODULE_0__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

        /* harmony default export */ __webpack_exports__["default"] = ({
            name: "Select",
            data: function data() {
                return {
                    items: [{
                        name: 'FOOD & BEVERAGE PROCESSING'
                    }, {
                        name: 'Food service'
                    }, {
                        name: 'Retail'
                    }, {
                        name: 'FOOD & BEVERAGE PROCESSING'
                    }, {
                        name: 'Food service'
                    }, {
                        name: 'Retail'
                    }, {
                        name: 'FOOD & BEVERAGE PROCESSING'
                    }, {
                        name: 'Food service'
                    }, {
                        name: 'Retail'
                    }, {
                        name: 'FOOD & BEVERAGE PROCESSING'
                    }, {
                        name: 'Food service'
                    }, {
                        name: 'Retail'
                    }],
                    active: false,
                    isActive: false
                };
            },
            methods: {
                open: function open() {
                    // this.active ? this.active = false : this.active = true;
                    var ul = event.target.parentNode;
                    var ulWidth = ul.offsetWidth; // ul.parentNode.offsetWidth = ulWidth;

                    ul.parentNode.style.width = ulWidth + 'px'; // console.log(ulWidth);

                    this.isActive = !this.isActive;
                },
                hide: function hide() {
                    this.isActive = false;
                }
            },
            mounted: function mounted() {
                this.popupItem = this.$el;
            },
            directives: {
                ClickOutside: vue_click_outside__WEBPACK_IMPORTED_MODULE_0___default.a
            }
        });

        /***/ }),

    /***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/SelectLinks.vue":
    /*!**************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/SelectLinks.vue ***!
  \**************************************************************************************************************************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var vue_click_outside__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue-click-outside */ "./node_modules/vue-click-outside/index.js");
        /* harmony import */ var vue_click_outside__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue_click_outside__WEBPACK_IMPORTED_MODULE_0__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//

        /* harmony default export */ __webpack_exports__["default"] = ({
            name: "Select",
            data: function data() {
                return {
                    items: [{
                        name: 'FOOD & BEVERAGE PROCESSING'
                    }, {
                        name: 'Food service'
                    }, {
                        name: 'Retail'
                    }, {
                        name: 'FOOD & BEVERAGE PROCESSING'
                    }, {
                        name: 'Food service'
                    }, {
                        name: 'Retail'
                    }, {
                        name: 'FOOD & BEVERAGE PROCESSING'
                    }, {
                        name: 'Food service'
                    }, {
                        name: 'Retail'
                    }, {
                        name: 'FOOD & BEVERAGE PROCESSING'
                    }, {
                        name: 'Food service'
                    }, {
                        name: 'Retail'
                    }],
                    active: false,
                    isActive: false
                };
            },
            methods: {
                open: function open() {
                    var box = event.target.parentNode;
                    var boxWidth = box.offsetWidth;
                    box.style.width = boxWidth + 'px';
                    this.isActive = !this.isActive;
                },
                hide: function hide() {
                    this.isActive = false;
                }
            },
            mounted: function mounted() {
                this.popupItem = this.$el;
            },
            directives: {
                ClickOutside: vue_click_outside__WEBPACK_IMPORTED_MODULE_0___default.a
            }
        });

        /***/ }),

    /***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/Zip.vue":
    /*!******************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/Zip.vue ***!
  \******************************************************************************************************************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _objects_regions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../objects/regions */ "./src/objects/regions.js");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

        /* harmony default export */ __webpack_exports__["default"] = ({
            name: "Zip",
            data: function data() {
                return {
                    region: '',
                    code: '',
                    res: '',
                    active: false
                };
            },
            computed: {
                filteredList: function filteredList() {
                    var f = this.region.toLowerCase();
                    var filtered = _objects_regions__WEBPACK_IMPORTED_MODULE_0__["default"].filter(function (elem) {
                        if (f === '') {
                            return [];
                        } else {
                            return elem.name.toLowerCase().indexOf(f) > -1;
                        }
                    });

                    if (filtered && filtered[0].name !== this.region && f.length > 1) {
                        this.active = true;
                        return filtered;
                    } else {
                        this.active = false;
                        return [];
                    }
                }
            },
            methods: {
                regionSbt: function regionSbt(r) {
                    this.filteredList = [];
                    this.code = r.code;
                    this.region = r.name;
                }
            }
        });

        /***/ }),

    /***/ "./node_modules/babel-polyfill/lib/index.js":
    /*!**************************************************!*\
  !*** ./node_modules/babel-polyfill/lib/index.js ***!
  \**************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */(function(global) {

            __webpack_require__(/*! core-js/shim */ "./node_modules/core-js/shim.js");

            __webpack_require__(/*! regenerator-runtime/runtime */ "./node_modules/regenerator-runtime/runtime.js");

            __webpack_require__(/*! core-js/fn/regexp/escape */ "./node_modules/core-js/fn/regexp/escape.js");

            if (global._babelPolyfill) {
                throw new Error("only one instance of babel-polyfill is allowed");
            }
            global._babelPolyfill = true;

            var DEFINE_PROPERTY = "defineProperty";
            function define(O, key, value) {
                O[key] || Object[DEFINE_PROPERTY](O, key, {
                    writable: true,
                    configurable: true,
                    value: value
                });
            }

            define(String.prototype, "padLeft", "".padStart);
            define(String.prototype, "padRight", "".padEnd);

            "pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
                [][key] && define(Array, key, Function.call.bind([][key]));
            });
            /* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

        /***/ }),

    /***/ "./node_modules/core-js/fn/regexp/escape.js":
    /*!**************************************************!*\
  !*** ./node_modules/core-js/fn/regexp/escape.js ***!
  \**************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ../../modules/core.regexp.escape */ "./node_modules/core-js/modules/core.regexp.escape.js");
        module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").RegExp.escape;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_a-function.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_a-function.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = function (it) {
            if (typeof it != 'function') throw TypeError(it + ' is not a function!');
            return it;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_a-number-value.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_a-number-value.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
        module.exports = function (it, msg) {
            if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
            return +it;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_add-to-unscopables.js":
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_add-to-unscopables.js ***!
  \*************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
        var UNSCOPABLES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('unscopables');
        var ArrayProto = Array.prototype;
        if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(ArrayProto, UNSCOPABLES, {});
        module.exports = function (key) {
            ArrayProto[UNSCOPABLES][key] = true;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_advance-string-index.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_advance-string-index.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/modules/_string-at.js")(true);

        // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
        module.exports = function (S, index, unicode) {
            return index + (unicode ? at(S, index).length : 1);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_an-instance.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_an-instance.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = function (it, Constructor, name, forbiddenField) {
            if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
                throw TypeError(name + ': incorrect invocation!');
            } return it;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_an-object.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_an-object.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        module.exports = function (it) {
            if (!isObject(it)) throw TypeError(it + ' is not an object!');
            return it;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_array-copy-within.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-copy-within.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)

        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");

        module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
            var O = toObject(this);
            var len = toLength(O.length);
            var to = toAbsoluteIndex(target, len);
            var from = toAbsoluteIndex(start, len);
            var end = arguments.length > 2 ? arguments[2] : undefined;
            var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
            var inc = 1;
            if (from < to && to < from + count) {
                inc = -1;
                from += count - 1;
                to += count - 1;
            }
            while (count-- > 0) {
                if (from in O) O[to] = O[from];
                else delete O[to];
                to += inc;
                from += inc;
            } return O;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_array-fill.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_array-fill.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)

        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        module.exports = function fill(value /* , start = 0, end = @length */) {
            var O = toObject(this);
            var length = toLength(O.length);
            var aLen = arguments.length;
            var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
            var end = aLen > 2 ? arguments[2] : undefined;
            var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
            while (endPos > index) O[index++] = value;
            return O;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_array-from-iterable.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-from-iterable.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");

        module.exports = function (iter, ITERATOR) {
            var result = [];
            forOf(iter, false, result.push, result, ITERATOR);
            return result;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_array-includes.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-includes.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
        module.exports = function (IS_INCLUDES) {
            return function ($this, el, fromIndex) {
                var O = toIObject($this);
                var length = toLength(O.length);
                var index = toAbsoluteIndex(fromIndex, length);
                var value;
                // Array#includes uses SameValueZero equality algorithm
                // eslint-disable-next-line no-self-compare
                if (IS_INCLUDES && el != el) while (length > index) {
                    value = O[index++];
                    // eslint-disable-next-line no-self-compare
                    if (value != value) return true;
                    // Array#indexOf ignores holes, Array#includes - not
                } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
                    if (O[index] === el) return IS_INCLUDES || index || 0;
                } return !IS_INCLUDES && -1;
            };
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_array-methods.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-methods.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
        var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
        var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var asc = __webpack_require__(/*! ./_array-species-create */ "./node_modules/core-js/modules/_array-species-create.js");
        module.exports = function (TYPE, $create) {
            var IS_MAP = TYPE == 1;
            var IS_FILTER = TYPE == 2;
            var IS_SOME = TYPE == 3;
            var IS_EVERY = TYPE == 4;
            var IS_FIND_INDEX = TYPE == 6;
            var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
            var create = $create || asc;
            return function ($this, callbackfn, that) {
                var O = toObject($this);
                var self = IObject(O);
                var f = ctx(callbackfn, that, 3);
                var length = toLength(self.length);
                var index = 0;
                var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
                var val, res;
                for (;length > index; index++) if (NO_HOLES || index in self) {
                    val = self[index];
                    res = f(val, index, O);
                    if (TYPE) {
                        if (IS_MAP) result[index] = res;   // map
                        else if (res) switch (TYPE) {
                            case 3: return true;             // some
                            case 5: return val;              // find
                            case 6: return index;            // findIndex
                            case 2: result.push(val);        // filter
                        } else if (IS_EVERY) return false; // every
                    }
                }
                return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
            };
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_array-reduce.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_array-reduce.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");

        module.exports = function (that, callbackfn, aLen, memo, isRight) {
            aFunction(callbackfn);
            var O = toObject(that);
            var self = IObject(O);
            var length = toLength(O.length);
            var index = isRight ? length - 1 : 0;
            var i = isRight ? -1 : 1;
            if (aLen < 2) for (;;) {
                if (index in self) {
                    memo = self[index];
                    index += i;
                    break;
                }
                index += i;
                if (isRight ? index < 0 : length <= index) {
                    throw TypeError('Reduce of empty array with no initial value');
                }
            }
            for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
                memo = callbackfn(memo, self[index], index, O);
            }
            return memo;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_array-species-constructor.js":
    /*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-constructor.js ***!
  \********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js");
        var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');

        module.exports = function (original) {
            var C;
            if (isArray(original)) {
                C = original.constructor;
                // cross-realm fallback
                if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
                if (isObject(C)) {
                    C = C[SPECIES];
                    if (C === null) C = undefined;
                }
            } return C === undefined ? Array : C;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_array-species-create.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-create.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
        var speciesConstructor = __webpack_require__(/*! ./_array-species-constructor */ "./node_modules/core-js/modules/_array-species-constructor.js");

        module.exports = function (original, length) {
            return new (speciesConstructor(original))(length);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_bind.js":
    /*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_bind.js ***!
  \***********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/core-js/modules/_invoke.js");
        var arraySlice = [].slice;
        var factories = {};

        var construct = function (F, len, args) {
            if (!(len in factories)) {
                for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
                // eslint-disable-next-line no-new-func
                factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
            } return factories[len](F, args);
        };

        module.exports = Function.bind || function bind(that /* , ...args */) {
            var fn = aFunction(this);
            var partArgs = arraySlice.call(arguments, 1);
            var bound = function (/* args... */) {
                var args = partArgs.concat(arraySlice.call(arguments));
                return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
            };
            if (isObject(fn.prototype)) bound.prototype = fn.prototype;
            return bound;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_classof.js":
    /*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_classof.js ***!
  \**************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
        var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
        var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toStringTag');
// ES3 wrong here
        var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
        var tryGet = function (it, key) {
            try {
                return it[key];
            } catch (e) { /* empty */ }
        };

        module.exports = function (it) {
            var O, T, B;
            return it === undefined ? 'Undefined' : it === null ? 'Null'
                // @@toStringTag case
                : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
                    // builtinTag case
                    : ARG ? cof(O)
                        // ES3 arguments fallback
                        : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_cof.js":
    /*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_cof.js ***!
  \**********************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        var toString = {}.toString;

        module.exports = function (it) {
            return toString.call(it).slice(8, -1);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_collection-strong.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_collection-strong.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
        var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
        var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
        var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
        var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
        var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
        var $iterDefine = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/modules/_iter-define.js");
        var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/modules/_iter-step.js");
        var setSpecies = __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js");
        var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
        var fastKey = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").fastKey;
        var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
        var SIZE = DESCRIPTORS ? '_s' : 'size';

        var getEntry = function (that, key) {
            // fast case
            var index = fastKey(key);
            var entry;
            if (index !== 'F') return that._i[index];
            // frozen object case
            for (entry = that._f; entry; entry = entry.n) {
                if (entry.k == key) return entry;
            }
        };

        module.exports = {
            getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
                var C = wrapper(function (that, iterable) {
                    anInstance(that, C, NAME, '_i');
                    that._t = NAME;         // collection type
                    that._i = create(null); // index
                    that._f = undefined;    // first entry
                    that._l = undefined;    // last entry
                    that[SIZE] = 0;         // size
                    if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
                });
                redefineAll(C.prototype, {
                    // 23.1.3.1 Map.prototype.clear()
                    // 23.2.3.2 Set.prototype.clear()
                    clear: function clear() {
                        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
                            entry.r = true;
                            if (entry.p) entry.p = entry.p.n = undefined;
                            delete data[entry.i];
                        }
                        that._f = that._l = undefined;
                        that[SIZE] = 0;
                    },
                    // 23.1.3.3 Map.prototype.delete(key)
                    // 23.2.3.4 Set.prototype.delete(value)
                    'delete': function (key) {
                        var that = validate(this, NAME);
                        var entry = getEntry(that, key);
                        if (entry) {
                            var next = entry.n;
                            var prev = entry.p;
                            delete that._i[entry.i];
                            entry.r = true;
                            if (prev) prev.n = next;
                            if (next) next.p = prev;
                            if (that._f == entry) that._f = next;
                            if (that._l == entry) that._l = prev;
                            that[SIZE]--;
                        } return !!entry;
                    },
                    // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
                    // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
                    forEach: function forEach(callbackfn /* , that = undefined */) {
                        validate(this, NAME);
                        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
                        var entry;
                        while (entry = entry ? entry.n : this._f) {
                            f(entry.v, entry.k, this);
                            // revert to the last existing entry
                            while (entry && entry.r) entry = entry.p;
                        }
                    },
                    // 23.1.3.7 Map.prototype.has(key)
                    // 23.2.3.7 Set.prototype.has(value)
                    has: function has(key) {
                        return !!getEntry(validate(this, NAME), key);
                    }
                });
                if (DESCRIPTORS) dP(C.prototype, 'size', {
                    get: function () {
                        return validate(this, NAME)[SIZE];
                    }
                });
                return C;
            },
            def: function (that, key, value) {
                var entry = getEntry(that, key);
                var prev, index;
                // change existing entry
                if (entry) {
                    entry.v = value;
                    // create new entry
                } else {
                    that._l = entry = {
                        i: index = fastKey(key, true), // <- index
                        k: key,                        // <- key
                        v: value,                      // <- value
                        p: prev = that._l,             // <- previous entry
                        n: undefined,                  // <- next entry
                        r: false                       // <- removed
                    };
                    if (!that._f) that._f = entry;
                    if (prev) prev.n = entry;
                    that[SIZE]++;
                    // add to index
                    if (index !== 'F') that._i[index] = entry;
                } return that;
            },
            getEntry: getEntry,
            setStrong: function (C, NAME, IS_MAP) {
                // add .keys, .values, .entries, [@@iterator]
                // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
                $iterDefine(C, NAME, function (iterated, kind) {
                    this._t = validate(iterated, NAME); // target
                    this._k = kind;                     // kind
                    this._l = undefined;                // previous
                }, function () {
                    var that = this;
                    var kind = that._k;
                    var entry = that._l;
                    // revert to the last existing entry
                    while (entry && entry.r) entry = entry.p;
                    // get next entry
                    if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
                        // or finish the iteration
                        that._t = undefined;
                        return step(1);
                    }
                    // return step by kind
                    if (kind == 'keys') return step(0, entry.k);
                    if (kind == 'values') return step(0, entry.v);
                    return step(0, [entry.k, entry.v]);
                }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

                // add [@@species], 23.1.2.2, 23.2.2.2
                setSpecies(NAME);
            }
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_collection-to-json.js":
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_collection-to-json.js ***!
  \*************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
        var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
        var from = __webpack_require__(/*! ./_array-from-iterable */ "./node_modules/core-js/modules/_array-from-iterable.js");
        module.exports = function (NAME) {
            return function toJSON() {
                if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
                return from(this);
            };
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_collection-weak.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_collection-weak.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
        var getWeak = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").getWeak;
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
        var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
        var createArrayMethod = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js");
        var $has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
        var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
        var arrayFind = createArrayMethod(5);
        var arrayFindIndex = createArrayMethod(6);
        var id = 0;

// fallback for uncaught frozen keys
        var uncaughtFrozenStore = function (that) {
            return that._l || (that._l = new UncaughtFrozenStore());
        };
        var UncaughtFrozenStore = function () {
            this.a = [];
        };
        var findUncaughtFrozen = function (store, key) {
            return arrayFind(store.a, function (it) {
                return it[0] === key;
            });
        };
        UncaughtFrozenStore.prototype = {
            get: function (key) {
                var entry = findUncaughtFrozen(this, key);
                if (entry) return entry[1];
            },
            has: function (key) {
                return !!findUncaughtFrozen(this, key);
            },
            set: function (key, value) {
                var entry = findUncaughtFrozen(this, key);
                if (entry) entry[1] = value;
                else this.a.push([key, value]);
            },
            'delete': function (key) {
                var index = arrayFindIndex(this.a, function (it) {
                    return it[0] === key;
                });
                if (~index) this.a.splice(index, 1);
                return !!~index;
            }
        };

        module.exports = {
            getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
                var C = wrapper(function (that, iterable) {
                    anInstance(that, C, NAME, '_i');
                    that._t = NAME;      // collection type
                    that._i = id++;      // collection id
                    that._l = undefined; // leak store for uncaught frozen objects
                    if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
                });
                redefineAll(C.prototype, {
                    // 23.3.3.2 WeakMap.prototype.delete(key)
                    // 23.4.3.3 WeakSet.prototype.delete(value)
                    'delete': function (key) {
                        if (!isObject(key)) return false;
                        var data = getWeak(key);
                        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
                        return data && $has(data, this._i) && delete data[this._i];
                    },
                    // 23.3.3.4 WeakMap.prototype.has(key)
                    // 23.4.3.4 WeakSet.prototype.has(value)
                    has: function has(key) {
                        if (!isObject(key)) return false;
                        var data = getWeak(key);
                        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
                        return data && $has(data, this._i);
                    }
                });
                return C;
            },
            def: function (that, key, value) {
                var data = getWeak(anObject(key), true);
                if (data === true) uncaughtFrozenStore(that).set(key, value);
                else data[that._i] = value;
                return that;
            },
            ufstore: uncaughtFrozenStore
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_collection.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_collection.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
        var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
        var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js");
        var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
        var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var $iterDetect = __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js");
        var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
        var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "./node_modules/core-js/modules/_inherit-if-required.js");

        module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
            var Base = global[NAME];
            var C = Base;
            var ADDER = IS_MAP ? 'set' : 'add';
            var proto = C && C.prototype;
            var O = {};
            var fixMethod = function (KEY) {
                var fn = proto[KEY];
                redefine(proto, KEY,
                    KEY == 'delete' ? function (a) {
                        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
                    } : KEY == 'has' ? function has(a) {
                        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
                    } : KEY == 'get' ? function get(a) {
                        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
                    } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
                        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
                );
            };
            if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
                new C().entries().next();
            }))) {
                // create collection constructor
                C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
                redefineAll(C.prototype, methods);
                meta.NEED = true;
            } else {
                var instance = new C();
                // early implementations not supports chaining
                var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
                // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
                var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
                // most early implementations doesn't supports iterables, most modern - not close it correctly
                var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
                // for early implementations -0 and +0 not the same
                var BUGGY_ZERO = !IS_WEAK && fails(function () {
                    // V8 ~ Chromium 42- fails only with 5+ elements
                    var $instance = new C();
                    var index = 5;
                    while (index--) $instance[ADDER](index, index);
                    return !$instance.has(-0);
                });
                if (!ACCEPT_ITERABLES) {
                    C = wrapper(function (target, iterable) {
                        anInstance(target, C, NAME);
                        var that = inheritIfRequired(new Base(), target, C);
                        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
                        return that;
                    });
                    C.prototype = proto;
                    proto.constructor = C;
                }
                if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
                    fixMethod('delete');
                    fixMethod('has');
                    IS_MAP && fixMethod('get');
                }
                if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
                // weak collections should not contains .clear method
                if (IS_WEAK && proto.clear) delete proto.clear;
            }

            setToStringTag(C, NAME);

            O[NAME] = C;
            $export($export.G + $export.W + $export.F * (C != Base), O);

            if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

            return C;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_core.js":
    /*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_core.js ***!
  \***********************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        var core = module.exports = { version: '2.6.5' };
        if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


        /***/ }),

    /***/ "./node_modules/core-js/modules/_create-property.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_create-property.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
        var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");

        module.exports = function (object, index, value) {
            if (index in object) $defineProperty.f(object, index, createDesc(0, value));
            else object[index] = value;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_ctx.js":
    /*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_ctx.js ***!
  \**********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        module.exports = function (fn, that, length) {
            aFunction(fn);
            if (that === undefined) return fn;
            switch (length) {
                case 1: return function (a) {
                    return fn.call(that, a);
                };
                case 2: return function (a, b) {
                    return fn.call(that, a, b);
                };
                case 3: return function (a, b, c) {
                    return fn.call(that, a, b, c);
                };
            }
            return function (/* ...args */) {
                return fn.apply(that, arguments);
            };
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_date-to-iso-string.js":
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_date-to-iso-string.js ***!
  \*************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var getTime = Date.prototype.getTime;
        var $toISOString = Date.prototype.toISOString;

        var lz = function (num) {
            return num > 9 ? num : '0' + num;
        };

// PhantomJS / old WebKit has a broken implementations
        module.exports = (fails(function () {
            return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
        }) || !fails(function () {
            $toISOString.call(new Date(NaN));
        })) ? function toISOString() {
            if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
            var d = this;
            var y = d.getUTCFullYear();
            var m = d.getUTCMilliseconds();
            var s = y < 0 ? '-' : y > 9999 ? '+' : '';
            return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
                '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
                'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
                ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
        } : $toISOString;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_date-to-primitive.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_date-to-primitive.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
        var NUMBER = 'number';

        module.exports = function (hint) {
            if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
            return toPrimitive(anObject(this), hint != NUMBER);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_defined.js":
    /*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_defined.js ***!
  \**************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
        module.exports = function (it) {
            if (it == undefined) throw TypeError("Can't call method on  " + it);
            return it;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_descriptors.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_descriptors.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
        module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/_dom-create.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_dom-create.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
        var is = isObject(document) && isObject(document.createElement);
        module.exports = function (it) {
            return is ? document.createElement(it) : {};
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_enum-bug-keys.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_enum-bug-keys.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

// IE 8- don't enum bug keys
        module.exports = (
            'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
        ).split(',');


        /***/ }),

    /***/ "./node_modules/core-js/modules/_enum-keys.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_enum-keys.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
        var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
        var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js");
        var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
        module.exports = function (it) {
            var result = getKeys(it);
            var getSymbols = gOPS.f;
            if (getSymbols) {
                var symbols = getSymbols(it);
                var isEnum = pIE.f;
                var i = 0;
                var key;
                while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
            } return result;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_export.js":
    /*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_export.js ***!
  \*************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
        var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
        var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
        var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
        var PROTOTYPE = 'prototype';

        var $export = function (type, name, source) {
            var IS_FORCED = type & $export.F;
            var IS_GLOBAL = type & $export.G;
            var IS_STATIC = type & $export.S;
            var IS_PROTO = type & $export.P;
            var IS_BIND = type & $export.B;
            var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
            var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
            var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
            var key, own, out, exp;
            if (IS_GLOBAL) source = name;
            for (key in source) {
                // contains in native
                own = !IS_FORCED && target && target[key] !== undefined;
                // export native or passed
                out = (own ? target : source)[key];
                // bind timers to global for call from export context
                exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
                // extend global
                if (target) redefine(target, key, out, type & $export.U);
                // export
                if (exports[key] != out) hide(exports, key, exp);
                if (IS_PROTO && expProto[key] != out) expProto[key] = out;
            }
        };
        global.core = core;
// type bitmap
        $export.F = 1;   // forced
        $export.G = 2;   // global
        $export.S = 4;   // static
        $export.P = 8;   // proto
        $export.B = 16;  // bind
        $export.W = 32;  // wrap
        $export.U = 64;  // safe
        $export.R = 128; // real proto method for `library`
        module.exports = $export;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_fails-is-regexp.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_fails-is-regexp.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var MATCH = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('match');
        module.exports = function (KEY) {
            var re = /./;
            try {
                '/./'[KEY](re);
            } catch (e) {
                try {
                    re[MATCH] = false;
                    return !'/./'[KEY](re);
                } catch (f) { /* empty */ }
            } return true;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_fails.js":
    /*!************************************************!*\
  !*** ./node_modules/core-js/modules/_fails.js ***!
  \************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = function (exec) {
            try {
                return !!exec();
            } catch (e) {
                return true;
            }
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_fix-re-wks.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_fix-re-wks.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        __webpack_require__(/*! ./es6.regexp.exec */ "./node_modules/core-js/modules/es6.regexp.exec.js");
        var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
        var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
        var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
        var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "./node_modules/core-js/modules/_regexp-exec.js");

        var SPECIES = wks('species');

        var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
            // #replace needs built-in support for named groups.
            // #match works fine because it just return the exec results, even if it has
            // a "grops" property.
            var re = /./;
            re.exec = function () {
                var result = [];
                result.groups = { a: '7' };
                return result;
            };
            return ''.replace(re, '$<a>') !== '7';
        });

        var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
            // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
            var re = /(?:)/;
            var originalExec = re.exec;
            re.exec = function () { return originalExec.apply(this, arguments); };
            var result = 'ab'.split(re);
            return result.length === 2 && result[0] === 'a' && result[1] === 'b';
        })();

        module.exports = function (KEY, length, exec) {
            var SYMBOL = wks(KEY);

            var DELEGATES_TO_SYMBOL = !fails(function () {
                // String methods call symbol-named RegEp methods
                var O = {};
                O[SYMBOL] = function () { return 7; };
                return ''[KEY](O) != 7;
            });

            var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
                // Symbol-named RegExp methods call .exec
                var execCalled = false;
                var re = /a/;
                re.exec = function () { execCalled = true; return null; };
                if (KEY === 'split') {
                    // RegExp[@@split] doesn't call the regex's exec method, but first creates
                    // a new one. We need to return the patched regex when creating the new one.
                    re.constructor = {};
                    re.constructor[SPECIES] = function () { return re; };
                }
                re[SYMBOL]('');
                return !execCalled;
            }) : undefined;

            if (
                !DELEGATES_TO_SYMBOL ||
                !DELEGATES_TO_EXEC ||
                (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
                (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
            ) {
                var nativeRegExpMethod = /./[SYMBOL];
                var fns = exec(
                    defined,
                    SYMBOL,
                    ''[KEY],
                    function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
                        if (regexp.exec === regexpExec) {
                            if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
                                // The native String method already delegates to @@method (this
                                // polyfilled function), leasing to infinite recursion.
                                // We avoid it by directly calling the native @@method method.
                                return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
                            }
                            return { done: true, value: nativeMethod.call(str, regexp, arg2) };
                        }
                        return { done: false };
                    }
                );
                var strfn = fns[0];
                var rxfn = fns[1];

                redefine(String.prototype, KEY, strfn);
                hide(RegExp.prototype, SYMBOL, length == 2
                    // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
                    // 21.2.5.11 RegExp.prototype[@@split](string, limit)
                    ? function (string, arg) { return rxfn.call(string, this, arg); }
                    // 21.2.5.6 RegExp.prototype[@@match](string)
                    // 21.2.5.9 RegExp.prototype[@@search](string)
                    : function (string) { return rxfn.call(string, this); }
                );
            }
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_flags.js":
    /*!************************************************!*\
  !*** ./node_modules/core-js/modules/_flags.js ***!
  \************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// 21.2.5.3 get RegExp.prototype.flags
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        module.exports = function () {
            var that = anObject(this);
            var result = '';
            if (that.global) result += 'g';
            if (that.ignoreCase) result += 'i';
            if (that.multiline) result += 'm';
            if (that.unicode) result += 'u';
            if (that.sticky) result += 'y';
            return result;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_flatten-into-array.js":
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_flatten-into-array.js ***!
  \*************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
        var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
        var IS_CONCAT_SPREADABLE = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('isConcatSpreadable');

        function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
            var targetIndex = start;
            var sourceIndex = 0;
            var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
            var element, spreadable;

            while (sourceIndex < sourceLen) {
                if (sourceIndex in source) {
                    element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

                    spreadable = false;
                    if (isObject(element)) {
                        spreadable = element[IS_CONCAT_SPREADABLE];
                        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
                    }

                    if (spreadable && depth > 0) {
                        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
                    } else {
                        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
                        target[targetIndex] = element;
                    }

                    targetIndex++;
                }
                sourceIndex++;
            }
            return targetIndex;
        }

        module.exports = flattenIntoArray;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_for-of.js":
    /*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_for-of.js ***!
  \*************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
        var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/core-js/modules/_iter-call.js");
        var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");
        var BREAK = {};
        var RETURN = {};
        var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
            var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
            var f = ctx(fn, that, entries ? 2 : 1);
            var index = 0;
            var length, step, iterator, result;
            if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
            // fast case for arrays with default iterator
            if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
                result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
                if (result === BREAK || result === RETURN) return result;
            } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
                result = call(iterator, f, step.value, entries);
                if (result === BREAK || result === RETURN) return result;
            }
        };
        exports.BREAK = BREAK;
        exports.RETURN = RETURN;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_function-to-string.js":
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_function-to-string.js ***!
  \*************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('native-function-to-string', Function.toString);


        /***/ }),

    /***/ "./node_modules/core-js/modules/_global.js":
    /*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_global.js ***!
  \*************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
        var global = module.exports = typeof window != 'undefined' && window.Math == Math
            ? window : typeof self != 'undefined' && self.Math == Math ? self
                // eslint-disable-next-line no-new-func
                : Function('return this')();
        if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


        /***/ }),

    /***/ "./node_modules/core-js/modules/_has.js":
    /*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_has.js ***!
  \**********************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        var hasOwnProperty = {}.hasOwnProperty;
        module.exports = function (it, key) {
            return hasOwnProperty.call(it, key);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_hide.js":
    /*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_hide.js ***!
  \***********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
        var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
        module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? function (object, key, value) {
            return dP.f(object, key, createDesc(1, value));
        } : function (object, key, value) {
            object[key] = value;
            return object;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_html.js":
    /*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_html.js ***!
  \***********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").document;
        module.exports = document && document.documentElement;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_ie8-dom-define.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_ie8-dom-define.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/_inherit-if-required.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_inherit-if-required.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var setPrototypeOf = __webpack_require__(/*! ./_set-proto */ "./node_modules/core-js/modules/_set-proto.js").set;
        module.exports = function (that, target, C) {
            var S = target.constructor;
            var P;
            if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
                setPrototypeOf(that, P);
            } return that;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_invoke.js":
    /*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_invoke.js ***!
  \*************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
        module.exports = function (fn, args, that) {
            var un = that === undefined;
            switch (args.length) {
                case 0: return un ? fn()
                    : fn.call(that);
                case 1: return un ? fn(args[0])
                    : fn.call(that, args[0]);
                case 2: return un ? fn(args[0], args[1])
                    : fn.call(that, args[0], args[1]);
                case 3: return un ? fn(args[0], args[1], args[2])
                    : fn.call(that, args[0], args[1], args[2]);
                case 4: return un ? fn(args[0], args[1], args[2], args[3])
                    : fn.call(that, args[0], args[1], args[2], args[3]);
            } return fn.apply(that, args);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_iobject.js":
    /*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_iobject.js ***!
  \**************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
        var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
        module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
            return cof(it) == 'String' ? it.split('') : Object(it);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_is-array-iter.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_is-array-iter.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
        var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
        var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
        var ArrayProto = Array.prototype;

        module.exports = function (it) {
            return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_is-array.js":
    /*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_is-array.js ***!
  \***************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
        var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
        module.exports = Array.isArray || function isArray(arg) {
            return cof(arg) == 'Array';
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_is-integer.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-integer.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var floor = Math.floor;
        module.exports = function isInteger(it) {
            return !isObject(it) && isFinite(it) && floor(it) === it;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_is-object.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-object.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = function (it) {
            return typeof it === 'object' ? it !== null : typeof it === 'function';
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_is-regexp.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-regexp.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
        var MATCH = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('match');
        module.exports = function (it) {
            var isRegExp;
            return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_iter-call.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-call.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        module.exports = function (iterator, fn, value, entries) {
            try {
                return entries ? fn(anObject(value)[0], value[1]) : fn(value);
                // 7.4.6 IteratorClose(iterator, completion)
            } catch (e) {
                var ret = iterator['return'];
                if (ret !== undefined) anObject(ret.call(iterator));
                throw e;
            }
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_iter-create.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-create.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
        var descriptor = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
        var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
        var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
        __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator'), function () { return this; });

        module.exports = function (Constructor, NAME, next) {
            Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
            setToStringTag(Constructor, NAME + ' Iterator');
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_iter-define.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-define.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
        var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
        var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
        var $iterCreate = __webpack_require__(/*! ./_iter-create */ "./node_modules/core-js/modules/_iter-create.js");
        var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
        var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
        var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
        var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
        var FF_ITERATOR = '@@iterator';
        var KEYS = 'keys';
        var VALUES = 'values';

        var returnThis = function () { return this; };

        module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
            $iterCreate(Constructor, NAME, next);
            var getMethod = function (kind) {
                if (!BUGGY && kind in proto) return proto[kind];
                switch (kind) {
                    case KEYS: return function keys() { return new Constructor(this, kind); };
                    case VALUES: return function values() { return new Constructor(this, kind); };
                } return function entries() { return new Constructor(this, kind); };
            };
            var TAG = NAME + ' Iterator';
            var DEF_VALUES = DEFAULT == VALUES;
            var VALUES_BUG = false;
            var proto = Base.prototype;
            var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
            var $default = $native || getMethod(DEFAULT);
            var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
            var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
            var methods, key, IteratorPrototype;
            // Fix native
            if ($anyNative) {
                IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
                if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
                    // Set @@toStringTag to native iterators
                    setToStringTag(IteratorPrototype, TAG, true);
                    // fix for some old engines
                    if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
                }
            }
            // fix Array#{values, @@iterator}.name in V8 / FF
            if (DEF_VALUES && $native && $native.name !== VALUES) {
                VALUES_BUG = true;
                $default = function values() { return $native.call(this); };
            }
            // Define iterator
            if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
                hide(proto, ITERATOR, $default);
            }
            // Plug for library
            Iterators[NAME] = $default;
            Iterators[TAG] = returnThis;
            if (DEFAULT) {
                methods = {
                    values: DEF_VALUES ? $default : getMethod(VALUES),
                    keys: IS_SET ? $default : getMethod(KEYS),
                    entries: $entries
                };
                if (FORCED) for (key in methods) {
                    if (!(key in proto)) redefine(proto, key, methods[key]);
                } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
            }
            return methods;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_iter-detect.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-detect.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
        var SAFE_CLOSING = false;

        try {
            var riter = [7][ITERATOR]();
            riter['return'] = function () { SAFE_CLOSING = true; };
            // eslint-disable-next-line no-throw-literal
            Array.from(riter, function () { throw 2; });
        } catch (e) { /* empty */ }

        module.exports = function (exec, skipClosing) {
            if (!skipClosing && !SAFE_CLOSING) return false;
            var safe = false;
            try {
                var arr = [7];
                var iter = arr[ITERATOR]();
                iter.next = function () { return { done: safe = true }; };
                arr[ITERATOR] = function () { return iter; };
                exec(arr);
            } catch (e) { /* empty */ }
            return safe;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_iter-step.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-step.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = function (done, value) {
            return { value: value, done: !!done };
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_iterators.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iterators.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = {};


        /***/ }),

    /***/ "./node_modules/core-js/modules/_library.js":
    /*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_library.js ***!
  \**************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = false;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_math-expm1.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_math-expm1.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

// 20.2.2.14 Math.expm1(x)
        var $expm1 = Math.expm1;
        module.exports = (!$expm1
            // Old FF bug
            || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
            // Tor Browser bug
            || $expm1(-2e-17) != -2e-17
        ) ? function expm1(x) {
            return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
        } : $expm1;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_math-fround.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_math-fround.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.16 Math.fround(x)
        var sign = __webpack_require__(/*! ./_math-sign */ "./node_modules/core-js/modules/_math-sign.js");
        var pow = Math.pow;
        var EPSILON = pow(2, -52);
        var EPSILON32 = pow(2, -23);
        var MAX32 = pow(2, 127) * (2 - EPSILON32);
        var MIN32 = pow(2, -126);

        var roundTiesToEven = function (n) {
            return n + 1 / EPSILON - 1 / EPSILON;
        };

        module.exports = Math.fround || function fround(x) {
            var $abs = Math.abs(x);
            var $sign = sign(x);
            var a, result;
            if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
            a = (1 + EPSILON32 / EPSILON) * $abs;
            result = a - (a - $abs);
            // eslint-disable-next-line no-self-compare
            if (result > MAX32 || result != result) return $sign * Infinity;
            return $sign * result;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_math-log1p.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_math-log1p.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

// 20.2.2.20 Math.log1p(x)
        module.exports = Math.log1p || function log1p(x) {
            return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_math-scale.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_math-scale.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

// https://rwaldron.github.io/proposal-math-extensions/
        module.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {
            if (
                arguments.length === 0
                // eslint-disable-next-line no-self-compare
                || x != x
                // eslint-disable-next-line no-self-compare
                || inLow != inLow
                // eslint-disable-next-line no-self-compare
                || inHigh != inHigh
                // eslint-disable-next-line no-self-compare
                || outLow != outLow
                // eslint-disable-next-line no-self-compare
                || outHigh != outHigh
            ) return NaN;
            if (x === Infinity || x === -Infinity) return x;
            return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_math-sign.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_math-sign.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

// 20.2.2.28 Math.sign(x)
        module.exports = Math.sign || function sign(x) {
            // eslint-disable-next-line no-self-compare
            return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_meta.js":
    /*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_meta.js ***!
  \***********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var META = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js")('meta');
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
        var setDesc = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
        var id = 0;
        var isExtensible = Object.isExtensible || function () {
            return true;
        };
        var FREEZE = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            return isExtensible(Object.preventExtensions({}));
        });
        var setMeta = function (it) {
            setDesc(it, META, { value: {
                    i: 'O' + ++id, // object ID
                    w: {}          // weak collections IDs
                } });
        };
        var fastKey = function (it, create) {
            // return primitive with prefix
            if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
            if (!has(it, META)) {
                // can't set metadata to uncaught frozen object
                if (!isExtensible(it)) return 'F';
                // not necessary to add metadata
                if (!create) return 'E';
                // add missing metadata
                setMeta(it);
                // return object ID
            } return it[META].i;
        };
        var getWeak = function (it, create) {
            if (!has(it, META)) {
                // can't set metadata to uncaught frozen object
                if (!isExtensible(it)) return true;
                // not necessary to add metadata
                if (!create) return false;
                // add missing metadata
                setMeta(it);
                // return hash weak collections IDs
            } return it[META].w;
        };
// add metadata on freeze-family methods calling
        var onFreeze = function (it) {
            if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
            return it;
        };
        var meta = module.exports = {
            KEY: META,
            NEED: false,
            fastKey: fastKey,
            getWeak: getWeak,
            onFreeze: onFreeze
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_metadata.js":
    /*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_metadata.js ***!
  \***************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var Map = __webpack_require__(/*! ./es6.map */ "./node_modules/core-js/modules/es6.map.js");
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('metadata');
        var store = shared.store || (shared.store = new (__webpack_require__(/*! ./es6.weak-map */ "./node_modules/core-js/modules/es6.weak-map.js"))());

        var getOrCreateMetadataMap = function (target, targetKey, create) {
            var targetMetadata = store.get(target);
            if (!targetMetadata) {
                if (!create) return undefined;
                store.set(target, targetMetadata = new Map());
            }
            var keyMetadata = targetMetadata.get(targetKey);
            if (!keyMetadata) {
                if (!create) return undefined;
                targetMetadata.set(targetKey, keyMetadata = new Map());
            } return keyMetadata;
        };
        var ordinaryHasOwnMetadata = function (MetadataKey, O, P) {
            var metadataMap = getOrCreateMetadataMap(O, P, false);
            return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
        };
        var ordinaryGetOwnMetadata = function (MetadataKey, O, P) {
            var metadataMap = getOrCreateMetadataMap(O, P, false);
            return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
        };
        var ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {
            getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
        };
        var ordinaryOwnMetadataKeys = function (target, targetKey) {
            var metadataMap = getOrCreateMetadataMap(target, targetKey, false);
            var keys = [];
            if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });
            return keys;
        };
        var toMetaKey = function (it) {
            return it === undefined || typeof it == 'symbol' ? it : String(it);
        };
        var exp = function (O) {
            $export($export.S, 'Reflect', O);
        };

        module.exports = {
            store: store,
            map: getOrCreateMetadataMap,
            has: ordinaryHasOwnMetadata,
            get: ordinaryGetOwnMetadata,
            set: ordinaryDefineOwnMetadata,
            keys: ordinaryOwnMetadataKeys,
            key: toMetaKey,
            exp: exp
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_microtask.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_microtask.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var macrotask = __webpack_require__(/*! ./_task */ "./node_modules/core-js/modules/_task.js").set;
        var Observer = global.MutationObserver || global.WebKitMutationObserver;
        var process = global.process;
        var Promise = global.Promise;
        var isNode = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js")(process) == 'process';

        module.exports = function () {
            var head, last, notify;

            var flush = function () {
                var parent, fn;
                if (isNode && (parent = process.domain)) parent.exit();
                while (head) {
                    fn = head.fn;
                    head = head.next;
                    try {
                        fn();
                    } catch (e) {
                        if (head) notify();
                        else last = undefined;
                        throw e;
                    }
                } last = undefined;
                if (parent) parent.enter();
            };

            // Node.js
            if (isNode) {
                notify = function () {
                    process.nextTick(flush);
                };
                // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
            } else if (Observer && !(global.navigator && global.navigator.standalone)) {
                var toggle = true;
                var node = document.createTextNode('');
                new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
                notify = function () {
                    node.data = toggle = !toggle;
                };
                // environments with maybe non-completely correct, but existent Promise
            } else if (Promise && Promise.resolve) {
                // Promise.resolve without an argument throws an error in LG WebOS 2
                var promise = Promise.resolve(undefined);
                notify = function () {
                    promise.then(flush);
                };
                // for other environments - macrotask based on:
                // - setImmediate
                // - MessageChannel
                // - window.postMessag
                // - onreadystatechange
                // - setTimeout
            } else {
                notify = function () {
                    // strange IE + webpack dev server bug - use .call(global)
                    macrotask.call(global, flush);
                };
            }

            return function (fn) {
                var task = { fn: fn, next: undefined };
                if (last) last.next = task;
                if (!head) {
                    head = task;
                    notify();
                } last = task;
            };
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_new-promise-capability.js":
    /*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/_new-promise-capability.js ***!
  \*****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// 25.4.1.5 NewPromiseCapability(C)
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");

        function PromiseCapability(C) {
            var resolve, reject;
            this.promise = new C(function ($$resolve, $$reject) {
                if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
                resolve = $$resolve;
                reject = $$reject;
            });
            this.resolve = aFunction(resolve);
            this.reject = aFunction(reject);
        }

        module.exports.f = function (C) {
            return new PromiseCapability(C);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-assign.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-assign.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// 19.1.2.1 Object.assign(target, source, ...)
        var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
        var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js");
        var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
        var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
        module.exports = !$assign || __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            var A = {};
            var B = {};
            // eslint-disable-next-line no-undef
            var S = Symbol();
            var K = 'abcdefghijklmnopqrst';
            A[S] = 7;
            K.split('').forEach(function (k) { B[k] = k; });
            return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
        }) ? function assign(target, source) { // eslint-disable-line no-unused-vars
            var T = toObject(target);
            var aLen = arguments.length;
            var index = 1;
            var getSymbols = gOPS.f;
            var isEnum = pIE.f;
            while (aLen > index) {
                var S = IObject(arguments[index++]);
                var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
                var length = keys.length;
                var j = 0;
                var key;
                while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
            } return T;
        } : $assign;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-create.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-create.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var dPs = __webpack_require__(/*! ./_object-dps */ "./node_modules/core-js/modules/_object-dps.js");
        var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js");
        var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');
        var Empty = function () { /* empty */ };
        var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
        var createDict = function () {
            // Thrash, waste and sodomy: IE GC bug
            var iframe = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js")('iframe');
            var i = enumBugKeys.length;
            var lt = '<';
            var gt = '>';
            var iframeDocument;
            iframe.style.display = 'none';
            __webpack_require__(/*! ./_html */ "./node_modules/core-js/modules/_html.js").appendChild(iframe);
            iframe.src = 'javascript:'; // eslint-disable-line no-script-url
            // createDict = iframe.contentWindow.Object;
            // html.removeChild(iframe);
            iframeDocument = iframe.contentWindow.document;
            iframeDocument.open();
            iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
            iframeDocument.close();
            createDict = iframeDocument.F;
            while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
            return createDict();
        };

        module.exports = Object.create || function create(O, Properties) {
            var result;
            if (O !== null) {
                Empty[PROTOTYPE] = anObject(O);
                result = new Empty();
                Empty[PROTOTYPE] = null;
                // add "__proto__" for Object.getPrototypeOf polyfill
                result[IE_PROTO] = O;
            } else result = createDict();
            return Properties === undefined ? result : dPs(result, Properties);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-dp.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dp.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/modules/_ie8-dom-define.js");
        var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
        var dP = Object.defineProperty;

        exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
            anObject(O);
            P = toPrimitive(P, true);
            anObject(Attributes);
            if (IE8_DOM_DEFINE) try {
                return dP(O, P, Attributes);
            } catch (e) { /* empty */ }
            if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
            if ('value' in Attributes) O[P] = Attributes.value;
            return O;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-dps.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dps.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");

        module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
            anObject(O);
            var keys = getKeys(Properties);
            var length = keys.length;
            var i = 0;
            var P;
            while (length > i) dP.f(O, P = keys[i++], Properties[P]);
            return O;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-forced-pam.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_object-forced-pam.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// Forced replacement prototype accessors methods
        module.exports = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js") || !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            var K = Math.random();
            // In FF throws only define methods
            // eslint-disable-next-line no-undef, no-useless-call
            __defineSetter__.call(null, K, function () { /* empty */ });
            delete __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js")[K];
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-gopd.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopd.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
        var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
        var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
        var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
        var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/modules/_ie8-dom-define.js");
        var gOPD = Object.getOwnPropertyDescriptor;

        exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {
            O = toIObject(O);
            P = toPrimitive(P, true);
            if (IE8_DOM_DEFINE) try {
                return gOPD(O, P);
            } catch (e) { /* empty */ }
            if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-gopn-ext.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopn-ext.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
        var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
        var toString = {}.toString;

        var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
            ? Object.getOwnPropertyNames(window) : [];

        var getWindowNames = function (it) {
            try {
                return gOPN(it);
            } catch (e) {
                return windowNames.slice();
            }
        };

        module.exports.f = function getOwnPropertyNames(it) {
            return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-gopn.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopn.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
        var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/modules/_object-keys-internal.js");
        var hiddenKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js").concat('length', 'prototype');

        exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
            return $keys(O, hiddenKeys);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-gops.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gops.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        exports.f = Object.getOwnPropertySymbols;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-gpo.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gpo.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
        var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');
        var ObjectProto = Object.prototype;

        module.exports = Object.getPrototypeOf || function (O) {
            O = toObject(O);
            if (has(O, IE_PROTO)) return O[IE_PROTO];
            if (typeof O.constructor == 'function' && O instanceof O.constructor) {
                return O.constructor.prototype;
            } return O instanceof Object ? ObjectProto : null;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-keys-internal.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_object-keys-internal.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
        var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js")(false);
        var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');

        module.exports = function (object, names) {
            var O = toIObject(object);
            var i = 0;
            var result = [];
            var key;
            for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
            // Don't enum bug & hidden keys
            while (names.length > i) if (has(O, key = names[i++])) {
                ~arrayIndexOf(result, key) || result.push(key);
            }
            return result;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-keys.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-keys.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
        var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/modules/_object-keys-internal.js");
        var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js");

        module.exports = Object.keys || function keys(O) {
            return $keys(O, enumBugKeys);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-pie.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-pie.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        exports.f = {}.propertyIsEnumerable;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-sap.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-sap.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        module.exports = function (KEY, exec) {
            var fn = (core.Object || {})[KEY] || Object[KEY];
            var exp = {};
            exp[KEY] = exec(fn);
            $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_object-to-array.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-to-array.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
        var isEnum = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js").f;
        module.exports = function (isEntries) {
            return function (it) {
                var O = toIObject(it);
                var keys = getKeys(O);
                var length = keys.length;
                var i = 0;
                var result = [];
                var key;
                while (length > i) if (isEnum.call(O, key = keys[i++])) {
                    result.push(isEntries ? [key, O[key]] : O[key]);
                } return result;
            };
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_own-keys.js":
    /*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_own-keys.js ***!
  \***************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// all object keys, includes non-enumerable and symbols
        var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js");
        var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var Reflect = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Reflect;
        module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
            var keys = gOPN.f(anObject(it));
            var getSymbols = gOPS.f;
            return getSymbols ? keys.concat(getSymbols(it)) : keys;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_parse-float.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_parse-float.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $parseFloat = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").parseFloat;
        var $trim = __webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js").trim;

        module.exports = 1 / $parseFloat(__webpack_require__(/*! ./_string-ws */ "./node_modules/core-js/modules/_string-ws.js") + '-0') !== -Infinity ? function parseFloat(str) {
            var string = $trim(String(str), 3);
            var result = $parseFloat(string);
            return result === 0 && string.charAt(0) == '-' ? -0 : result;
        } : $parseFloat;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_parse-int.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_parse-int.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $parseInt = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").parseInt;
        var $trim = __webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js").trim;
        var ws = __webpack_require__(/*! ./_string-ws */ "./node_modules/core-js/modules/_string-ws.js");
        var hex = /^[-+]?0[xX]/;

        module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
            var string = $trim(String(str), 3);
            return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
        } : $parseInt;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_perform.js":
    /*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_perform.js ***!
  \**************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = function (exec) {
            try {
                return { e: false, v: exec() };
            } catch (e) {
                return { e: true, v: e };
            }
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_promise-resolve.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_promise-resolve.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/modules/_new-promise-capability.js");

        module.exports = function (C, x) {
            anObject(C);
            if (isObject(x) && x.constructor === C) return x;
            var promiseCapability = newPromiseCapability.f(C);
            var resolve = promiseCapability.resolve;
            resolve(x);
            return promiseCapability.promise;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_property-desc.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_property-desc.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = function (bitmap, value) {
            return {
                enumerable: !(bitmap & 1),
                configurable: !(bitmap & 2),
                writable: !(bitmap & 4),
                value: value
            };
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_redefine-all.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine-all.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
        module.exports = function (target, src, safe) {
            for (var key in src) redefine(target, key, src[key], safe);
            return target;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_redefine.js":
    /*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine.js ***!
  \***************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
        var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
        var SRC = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js")('src');
        var $toString = __webpack_require__(/*! ./_function-to-string */ "./node_modules/core-js/modules/_function-to-string.js");
        var TO_STRING = 'toString';
        var TPL = ('' + $toString).split(TO_STRING);

        __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js").inspectSource = function (it) {
            return $toString.call(it);
        };

        (module.exports = function (O, key, val, safe) {
            var isFunction = typeof val == 'function';
            if (isFunction) has(val, 'name') || hide(val, 'name', key);
            if (O[key] === val) return;
            if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
            if (O === global) {
                O[key] = val;
            } else if (!safe) {
                delete O[key];
                hide(O, key, val);
            } else if (O[key]) {
                O[key] = val;
            } else {
                hide(O, key, val);
            }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
        })(Function.prototype, TO_STRING, function toString() {
            return typeof this == 'function' && this[SRC] || $toString.call(this);
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/_regexp-exec-abstract.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_regexp-exec-abstract.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
        var builtinExec = RegExp.prototype.exec;

        // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
        module.exports = function (R, S) {
            var exec = R.exec;
            if (typeof exec === 'function') {
                var result = exec.call(R, S);
                if (typeof result !== 'object') {
                    throw new TypeError('RegExp exec method returned something other than an Object or null');
                }
                return result;
            }
            if (classof(R) !== 'RegExp') {
                throw new TypeError('RegExp#exec called on incompatible receiver');
            }
            return builtinExec.call(R, S);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_regexp-exec.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_regexp-exec.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        var regexpFlags = __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js");

        var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
        var nativeReplace = String.prototype.replace;

        var patchedExec = nativeExec;

        var LAST_INDEX = 'lastIndex';

        var UPDATES_LAST_INDEX_WRONG = (function () {
            var re1 = /a/,
                re2 = /b*/g;
            nativeExec.call(re1, 'a');
            nativeExec.call(re2, 'a');
            return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
        })();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
        var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

        var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

        if (PATCH) {
            patchedExec = function exec(str) {
                var re = this;
                var lastIndex, reCopy, match, i;

                if (NPCG_INCLUDED) {
                    reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
                }
                if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

                match = nativeExec.call(re, str);

                if (UPDATES_LAST_INDEX_WRONG && match) {
                    re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
                }
                if (NPCG_INCLUDED && match && match.length > 1) {
                    // Fix browsers whose `exec` methods don't consistently return `undefined`
                    // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
                    // eslint-disable-next-line no-loop-func
                    nativeReplace.call(match[0], reCopy, function () {
                        for (i = 1; i < arguments.length - 2; i++) {
                            if (arguments[i] === undefined) match[i] = undefined;
                        }
                    });
                }

                return match;
            };
        }

        module.exports = patchedExec;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_replacer.js":
    /*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_replacer.js ***!
  \***************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = function (regExp, replace) {
            var replacer = replace === Object(replace) ? function (part) {
                return replace[part];
            } : replace;
            return function (it) {
                return String(it).replace(regExp, replacer);
            };
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_same-value.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_same-value.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

// 7.2.9 SameValue(x, y)
        module.exports = Object.is || function is(x, y) {
            // eslint-disable-next-line no-self-compare
            return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_set-collection-from.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_set-collection-from.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://tc39.github.io/proposal-setmap-offrom/
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
        var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");

        module.exports = function (COLLECTION) {
            $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
                    var mapFn = arguments[1];
                    var mapping, A, n, cb;
                    aFunction(this);
                    mapping = mapFn !== undefined;
                    if (mapping) aFunction(mapFn);
                    if (source == undefined) return new this();
                    A = [];
                    if (mapping) {
                        n = 0;
                        cb = ctx(mapFn, arguments[2], 2);
                        forOf(source, false, function (nextItem) {
                            A.push(cb(nextItem, n++));
                        });
                    } else {
                        forOf(source, false, A.push, A);
                    }
                    return new this(A);
                } });
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_set-collection-of.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_set-collection-of.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://tc39.github.io/proposal-setmap-offrom/
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        module.exports = function (COLLECTION) {
            $export($export.S, COLLECTION, { of: function of() {
                    var length = arguments.length;
                    var A = new Array(length);
                    while (length--) A[length] = arguments[length];
                    return new this(A);
                } });
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_set-proto.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_set-proto.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
        /* eslint-disable no-proto */
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var check = function (O, proto) {
            anObject(O);
            if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
        };
        module.exports = {
            set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
                function (test, buggy, set) {
                    try {
                        set = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js")(Function.call, __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f(Object.prototype, '__proto__').set, 2);
                        set(test, []);
                        buggy = !(test instanceof Array);
                    } catch (e) { buggy = true; }
                    return function setPrototypeOf(O, proto) {
                        check(O, proto);
                        if (buggy) O.__proto__ = proto;
                        else set(O, proto);
                        return O;
                    };
                }({}, false) : undefined),
            check: check
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_set-species.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_set-species.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
        var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
        var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');

        module.exports = function (KEY) {
            var C = global[KEY];
            if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
                configurable: true,
                get: function () { return this; }
            });
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_set-to-string-tag.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_set-to-string-tag.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var def = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
        var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
        var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toStringTag');

        module.exports = function (it, tag, stat) {
            if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_shared-key.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_shared-key.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('keys');
        var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
        module.exports = function (key) {
            return shared[key] || (shared[key] = uid(key));
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_shared.js":
    /*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_shared.js ***!
  \*************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var SHARED = '__core-js_shared__';
        var store = global[SHARED] || (global[SHARED] = {});

        (module.exports = function (key, value) {
            return store[key] || (store[key] = value !== undefined ? value : {});
        })('versions', []).push({
            version: core.version,
            mode: __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js") ? 'pure' : 'global',
            copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/_species-constructor.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_species-constructor.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');
        module.exports = function (O, D) {
            var C = anObject(O).constructor;
            var S;
            return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_strict-method.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_strict-method.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");

        module.exports = function (method, arg) {
            return !!method && fails(function () {
                // eslint-disable-next-line no-useless-call
                arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
            });
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_string-at.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-at.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
        var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
        module.exports = function (TO_STRING) {
            return function (that, pos) {
                var s = String(defined(that));
                var i = toInteger(pos);
                var l = s.length;
                var a, b;
                if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
                a = s.charCodeAt(i);
                return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
                    ? TO_STRING ? s.charAt(i) : a
                    : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
            };
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_string-context.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_string-context.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
        var isRegExp = __webpack_require__(/*! ./_is-regexp */ "./node_modules/core-js/modules/_is-regexp.js");
        var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");

        module.exports = function (that, searchString, NAME) {
            if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
            return String(defined(that));
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_string-html.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_string-html.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
        var quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
        var createHTML = function (string, tag, attribute, value) {
            var S = String(defined(string));
            var p1 = '<' + tag;
            if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
            return p1 + '>' + S + '</' + tag + '>';
        };
        module.exports = function (NAME, exec) {
            var O = {};
            O[NAME] = exec(createHTML);
            $export($export.P + $export.F * fails(function () {
                var test = ''[NAME]('"');
                return test !== test.toLowerCase() || test.split('"').length > 3;
            }), 'String', O);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_string-pad.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-pad.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var repeat = __webpack_require__(/*! ./_string-repeat */ "./node_modules/core-js/modules/_string-repeat.js");
        var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");

        module.exports = function (that, maxLength, fillString, left) {
            var S = String(defined(that));
            var stringLength = S.length;
            var fillStr = fillString === undefined ? ' ' : String(fillString);
            var intMaxLength = toLength(maxLength);
            if (intMaxLength <= stringLength || fillStr == '') return S;
            var fillLen = intMaxLength - stringLength;
            var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
            if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
            return left ? stringFiller + S : S + stringFiller;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_string-repeat.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_string-repeat.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
        var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");

        module.exports = function repeat(count) {
            var str = String(defined(this));
            var res = '';
            var n = toInteger(count);
            if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
            for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
            return res;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_string-trim.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_string-trim.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var spaces = __webpack_require__(/*! ./_string-ws */ "./node_modules/core-js/modules/_string-ws.js");
        var space = '[' + spaces + ']';
        var non = '\u200b\u0085';
        var ltrim = RegExp('^' + space + space + '*');
        var rtrim = RegExp(space + space + '*$');

        var exporter = function (KEY, exec, ALIAS) {
            var exp = {};
            var FORCE = fails(function () {
                return !!spaces[KEY]() || non[KEY]() != non;
            });
            var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
            if (ALIAS) exp[ALIAS] = fn;
            $export($export.P + $export.F * FORCE, 'String', exp);
        };

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
        var trim = exporter.trim = function (string, TYPE) {
            string = String(defined(string));
            if (TYPE & 1) string = string.replace(ltrim, '');
            if (TYPE & 2) string = string.replace(rtrim, '');
            return string;
        };

        module.exports = exporter;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_string-ws.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-ws.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
            '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


        /***/ }),

    /***/ "./node_modules/core-js/modules/_task.js":
    /*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_task.js ***!
  \***********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
        var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/core-js/modules/_invoke.js");
        var html = __webpack_require__(/*! ./_html */ "./node_modules/core-js/modules/_html.js");
        var cel = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js");
        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var process = global.process;
        var setTask = global.setImmediate;
        var clearTask = global.clearImmediate;
        var MessageChannel = global.MessageChannel;
        var Dispatch = global.Dispatch;
        var counter = 0;
        var queue = {};
        var ONREADYSTATECHANGE = 'onreadystatechange';
        var defer, channel, port;
        var run = function () {
            var id = +this;
            // eslint-disable-next-line no-prototype-builtins
            if (queue.hasOwnProperty(id)) {
                var fn = queue[id];
                delete queue[id];
                fn();
            }
        };
        var listener = function (event) {
            run.call(event.data);
        };
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
        if (!setTask || !clearTask) {
            setTask = function setImmediate(fn) {
                var args = [];
                var i = 1;
                while (arguments.length > i) args.push(arguments[i++]);
                queue[++counter] = function () {
                    // eslint-disable-next-line no-new-func
                    invoke(typeof fn == 'function' ? fn : Function(fn), args);
                };
                defer(counter);
                return counter;
            };
            clearTask = function clearImmediate(id) {
                delete queue[id];
            };
            // Node.js 0.8-
            if (__webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js")(process) == 'process') {
                defer = function (id) {
                    process.nextTick(ctx(run, id, 1));
                };
                // Sphere (JS game engine) Dispatch API
            } else if (Dispatch && Dispatch.now) {
                defer = function (id) {
                    Dispatch.now(ctx(run, id, 1));
                };
                // Browsers with MessageChannel, includes WebWorkers
            } else if (MessageChannel) {
                channel = new MessageChannel();
                port = channel.port2;
                channel.port1.onmessage = listener;
                defer = ctx(port.postMessage, port, 1);
                // Browsers with postMessage, skip WebWorkers
                // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
            } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
                defer = function (id) {
                    global.postMessage(id + '', '*');
                };
                global.addEventListener('message', listener, false);
                // IE8-
            } else if (ONREADYSTATECHANGE in cel('script')) {
                defer = function (id) {
                    html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
                        html.removeChild(this);
                        run.call(id);
                    };
                };
                // Rest old browsers
            } else {
                defer = function (id) {
                    setTimeout(ctx(run, id, 1), 0);
                };
            }
        }
        module.exports = {
            set: setTask,
            clear: clearTask
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_to-absolute-index.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_to-absolute-index.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
        var max = Math.max;
        var min = Math.min;
        module.exports = function (index, length) {
            index = toInteger(index);
            return index < 0 ? max(index + length, 0) : min(index, length);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_to-index.js":
    /*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_to-index.js ***!
  \***************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/ecma262/#sec-toindex
        var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        module.exports = function (it) {
            if (it === undefined) return 0;
            var number = toInteger(it);
            var length = toLength(number);
            if (number !== length) throw RangeError('Wrong length!');
            return length;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_to-integer.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-integer.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

// 7.1.4 ToInteger
        var ceil = Math.ceil;
        var floor = Math.floor;
        module.exports = function (it) {
            return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_to-iobject.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-iobject.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
        var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
        var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
        module.exports = function (it) {
            return IObject(defined(it));
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_to-length.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-length.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
        var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
        var min = Math.min;
        module.exports = function (it) {
            return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_to-object.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-object.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
        var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
        module.exports = function (it) {
            return Object(defined(it));
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_to-primitive.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_to-primitive.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
        module.exports = function (it, S) {
            if (!isObject(it)) return it;
            var fn, val;
            if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
            if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
            if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
            throw TypeError("Can't convert object to primitive value");
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_typed-array.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_typed-array.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        if (__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js")) {
            var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
            var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
            var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
            var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
            var $typed = __webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js");
            var $buffer = __webpack_require__(/*! ./_typed-buffer */ "./node_modules/core-js/modules/_typed-buffer.js");
            var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
            var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
            var propertyDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
            var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
            var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
            var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
            var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
            var toIndex = __webpack_require__(/*! ./_to-index */ "./node_modules/core-js/modules/_to-index.js");
            var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
            var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
            var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
            var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
            var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
            var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
            var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
            var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
            var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
            var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
            var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");
            var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
            var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
            var createArrayMethod = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js");
            var createArrayIncludes = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js");
            var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
            var ArrayIterators = __webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
            var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
            var $iterDetect = __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js");
            var setSpecies = __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js");
            var arrayFill = __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js");
            var arrayCopyWithin = __webpack_require__(/*! ./_array-copy-within */ "./node_modules/core-js/modules/_array-copy-within.js");
            var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
            var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
            var dP = $DP.f;
            var gOPD = $GOPD.f;
            var RangeError = global.RangeError;
            var TypeError = global.TypeError;
            var Uint8Array = global.Uint8Array;
            var ARRAY_BUFFER = 'ArrayBuffer';
            var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
            var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
            var PROTOTYPE = 'prototype';
            var ArrayProto = Array[PROTOTYPE];
            var $ArrayBuffer = $buffer.ArrayBuffer;
            var $DataView = $buffer.DataView;
            var arrayForEach = createArrayMethod(0);
            var arrayFilter = createArrayMethod(2);
            var arraySome = createArrayMethod(3);
            var arrayEvery = createArrayMethod(4);
            var arrayFind = createArrayMethod(5);
            var arrayFindIndex = createArrayMethod(6);
            var arrayIncludes = createArrayIncludes(true);
            var arrayIndexOf = createArrayIncludes(false);
            var arrayValues = ArrayIterators.values;
            var arrayKeys = ArrayIterators.keys;
            var arrayEntries = ArrayIterators.entries;
            var arrayLastIndexOf = ArrayProto.lastIndexOf;
            var arrayReduce = ArrayProto.reduce;
            var arrayReduceRight = ArrayProto.reduceRight;
            var arrayJoin = ArrayProto.join;
            var arraySort = ArrayProto.sort;
            var arraySlice = ArrayProto.slice;
            var arrayToString = ArrayProto.toString;
            var arrayToLocaleString = ArrayProto.toLocaleString;
            var ITERATOR = wks('iterator');
            var TAG = wks('toStringTag');
            var TYPED_CONSTRUCTOR = uid('typed_constructor');
            var DEF_CONSTRUCTOR = uid('def_constructor');
            var ALL_CONSTRUCTORS = $typed.CONSTR;
            var TYPED_ARRAY = $typed.TYPED;
            var VIEW = $typed.VIEW;
            var WRONG_LENGTH = 'Wrong length!';

            var $map = createArrayMethod(1, function (O, length) {
                return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
            });

            var LITTLE_ENDIAN = fails(function () {
                // eslint-disable-next-line no-undef
                return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
            });

            var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
                new Uint8Array(1).set({});
            });

            var toOffset = function (it, BYTES) {
                var offset = toInteger(it);
                if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
                return offset;
            };

            var validate = function (it) {
                if (isObject(it) && TYPED_ARRAY in it) return it;
                throw TypeError(it + ' is not a typed array!');
            };

            var allocate = function (C, length) {
                if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
                    throw TypeError('It is not a typed array constructor!');
                } return new C(length);
            };

            var speciesFromList = function (O, list) {
                return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
            };

            var fromList = function (C, list) {
                var index = 0;
                var length = list.length;
                var result = allocate(C, length);
                while (length > index) result[index] = list[index++];
                return result;
            };

            var addGetter = function (it, key, internal) {
                dP(it, key, { get: function () { return this._d[internal]; } });
            };

            var $from = function from(source /* , mapfn, thisArg */) {
                var O = toObject(source);
                var aLen = arguments.length;
                var mapfn = aLen > 1 ? arguments[1] : undefined;
                var mapping = mapfn !== undefined;
                var iterFn = getIterFn(O);
                var i, length, values, result, step, iterator;
                if (iterFn != undefined && !isArrayIter(iterFn)) {
                    for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
                        values.push(step.value);
                    } O = values;
                }
                if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
                for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
                    result[i] = mapping ? mapfn(O[i], i) : O[i];
                }
                return result;
            };

            var $of = function of(/* ...items */) {
                var index = 0;
                var length = arguments.length;
                var result = allocate(this, length);
                while (length > index) result[index] = arguments[index++];
                return result;
            };

            // iOS Safari 6.x fails here
            var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

            var $toLocaleString = function toLocaleString() {
                return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
            };

            var proto = {
                copyWithin: function copyWithin(target, start /* , end */) {
                    return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
                },
                every: function every(callbackfn /* , thisArg */) {
                    return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
                    return arrayFill.apply(validate(this), arguments);
                },
                filter: function filter(callbackfn /* , thisArg */) {
                    return speciesFromList(this, arrayFilter(validate(this), callbackfn,
                        arguments.length > 1 ? arguments[1] : undefined));
                },
                find: function find(predicate /* , thisArg */) {
                    return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
                },
                findIndex: function findIndex(predicate /* , thisArg */) {
                    return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
                },
                forEach: function forEach(callbackfn /* , thisArg */) {
                    arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                indexOf: function indexOf(searchElement /* , fromIndex */) {
                    return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
                },
                includes: function includes(searchElement /* , fromIndex */) {
                    return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
                },
                join: function join(separator) { // eslint-disable-line no-unused-vars
                    return arrayJoin.apply(validate(this), arguments);
                },
                lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
                    return arrayLastIndexOf.apply(validate(this), arguments);
                },
                map: function map(mapfn /* , thisArg */) {
                    return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
                    return arrayReduce.apply(validate(this), arguments);
                },
                reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
                    return arrayReduceRight.apply(validate(this), arguments);
                },
                reverse: function reverse() {
                    var that = this;
                    var length = validate(that).length;
                    var middle = Math.floor(length / 2);
                    var index = 0;
                    var value;
                    while (index < middle) {
                        value = that[index];
                        that[index++] = that[--length];
                        that[length] = value;
                    } return that;
                },
                some: function some(callbackfn /* , thisArg */) {
                    return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                sort: function sort(comparefn) {
                    return arraySort.call(validate(this), comparefn);
                },
                subarray: function subarray(begin, end) {
                    var O = validate(this);
                    var length = O.length;
                    var $begin = toAbsoluteIndex(begin, length);
                    return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
                        O.buffer,
                        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
                        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
                    );
                }
            };

            var $slice = function slice(start, end) {
                return speciesFromList(this, arraySlice.call(validate(this), start, end));
            };

            var $set = function set(arrayLike /* , offset */) {
                validate(this);
                var offset = toOffset(arguments[1], 1);
                var length = this.length;
                var src = toObject(arrayLike);
                var len = toLength(src.length);
                var index = 0;
                if (len + offset > length) throw RangeError(WRONG_LENGTH);
                while (index < len) this[offset + index] = src[index++];
            };

            var $iterators = {
                entries: function entries() {
                    return arrayEntries.call(validate(this));
                },
                keys: function keys() {
                    return arrayKeys.call(validate(this));
                },
                values: function values() {
                    return arrayValues.call(validate(this));
                }
            };

            var isTAIndex = function (target, key) {
                return isObject(target)
                    && target[TYPED_ARRAY]
                    && typeof key != 'symbol'
                    && key in target
                    && String(+key) == String(key);
            };
            var $getDesc = function getOwnPropertyDescriptor(target, key) {
                return isTAIndex(target, key = toPrimitive(key, true))
                    ? propertyDesc(2, target[key])
                    : gOPD(target, key);
            };
            var $setDesc = function defineProperty(target, key, desc) {
                if (isTAIndex(target, key = toPrimitive(key, true))
                    && isObject(desc)
                    && has(desc, 'value')
                    && !has(desc, 'get')
                    && !has(desc, 'set')
                    // TODO: add validation descriptor w/o calling accessors
                    && !desc.configurable
                    && (!has(desc, 'writable') || desc.writable)
                    && (!has(desc, 'enumerable') || desc.enumerable)
                ) {
                    target[key] = desc.value;
                    return target;
                } return dP(target, key, desc);
            };

            if (!ALL_CONSTRUCTORS) {
                $GOPD.f = $getDesc;
                $DP.f = $setDesc;
            }

            $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
                getOwnPropertyDescriptor: $getDesc,
                defineProperty: $setDesc
            });

            if (fails(function () { arrayToString.call({}); })) {
                arrayToString = arrayToLocaleString = function toString() {
                    return arrayJoin.call(this);
                };
            }

            var $TypedArrayPrototype$ = redefineAll({}, proto);
            redefineAll($TypedArrayPrototype$, $iterators);
            hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
            redefineAll($TypedArrayPrototype$, {
                slice: $slice,
                set: $set,
                constructor: function () { /* noop */ },
                toString: arrayToString,
                toLocaleString: $toLocaleString
            });
            addGetter($TypedArrayPrototype$, 'buffer', 'b');
            addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
            addGetter($TypedArrayPrototype$, 'byteLength', 'l');
            addGetter($TypedArrayPrototype$, 'length', 'e');
            dP($TypedArrayPrototype$, TAG, {
                get: function () { return this[TYPED_ARRAY]; }
            });

            // eslint-disable-next-line max-statements
            module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
                CLAMPED = !!CLAMPED;
                var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
                var GETTER = 'get' + KEY;
                var SETTER = 'set' + KEY;
                var TypedArray = global[NAME];
                var Base = TypedArray || {};
                var TAC = TypedArray && getPrototypeOf(TypedArray);
                var FORCED = !TypedArray || !$typed.ABV;
                var O = {};
                var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
                var getter = function (that, index) {
                    var data = that._d;
                    return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
                };
                var setter = function (that, index, value) {
                    var data = that._d;
                    if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
                    data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
                };
                var addElement = function (that, index) {
                    dP(that, index, {
                        get: function () {
                            return getter(this, index);
                        },
                        set: function (value) {
                            return setter(this, index, value);
                        },
                        enumerable: true
                    });
                };
                if (FORCED) {
                    TypedArray = wrapper(function (that, data, $offset, $length) {
                        anInstance(that, TypedArray, NAME, '_d');
                        var index = 0;
                        var offset = 0;
                        var buffer, byteLength, length, klass;
                        if (!isObject(data)) {
                            length = toIndex(data);
                            byteLength = length * BYTES;
                            buffer = new $ArrayBuffer(byteLength);
                        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
                            buffer = data;
                            offset = toOffset($offset, BYTES);
                            var $len = data.byteLength;
                            if ($length === undefined) {
                                if ($len % BYTES) throw RangeError(WRONG_LENGTH);
                                byteLength = $len - offset;
                                if (byteLength < 0) throw RangeError(WRONG_LENGTH);
                            } else {
                                byteLength = toLength($length) * BYTES;
                                if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
                            }
                            length = byteLength / BYTES;
                        } else if (TYPED_ARRAY in data) {
                            return fromList(TypedArray, data);
                        } else {
                            return $from.call(TypedArray, data);
                        }
                        hide(that, '_d', {
                            b: buffer,
                            o: offset,
                            l: byteLength,
                            e: length,
                            v: new $DataView(buffer)
                        });
                        while (index < length) addElement(that, index++);
                    });
                    TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
                    hide(TypedArrayPrototype, 'constructor', TypedArray);
                } else if (!fails(function () {
                    TypedArray(1);
                }) || !fails(function () {
                    new TypedArray(-1); // eslint-disable-line no-new
                }) || !$iterDetect(function (iter) {
                    new TypedArray(); // eslint-disable-line no-new
                    new TypedArray(null); // eslint-disable-line no-new
                    new TypedArray(1.5); // eslint-disable-line no-new
                    new TypedArray(iter); // eslint-disable-line no-new
                }, true)) {
                    TypedArray = wrapper(function (that, data, $offset, $length) {
                        anInstance(that, TypedArray, NAME);
                        var klass;
                        // `ws` module bug, temporarily remove validation length for Uint8Array
                        // https://github.com/websockets/ws/pull/645
                        if (!isObject(data)) return new Base(toIndex(data));
                        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
                            return $length !== undefined
                                ? new Base(data, toOffset($offset, BYTES), $length)
                                : $offset !== undefined
                                    ? new Base(data, toOffset($offset, BYTES))
                                    : new Base(data);
                        }
                        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
                        return $from.call(TypedArray, data);
                    });
                    arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
                        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
                    });
                    TypedArray[PROTOTYPE] = TypedArrayPrototype;
                    if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
                }
                var $nativeIterator = TypedArrayPrototype[ITERATOR];
                var CORRECT_ITER_NAME = !!$nativeIterator
                    && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
                var $iterator = $iterators.values;
                hide(TypedArray, TYPED_CONSTRUCTOR, true);
                hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
                hide(TypedArrayPrototype, VIEW, true);
                hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

                if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
                    dP(TypedArrayPrototype, TAG, {
                        get: function () { return NAME; }
                    });
                }

                O[NAME] = TypedArray;

                $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

                $export($export.S, NAME, {
                    BYTES_PER_ELEMENT: BYTES
                });

                $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
                    from: $from,
                    of: $of
                });

                if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

                $export($export.P, NAME, proto);

                setSpecies(NAME);

                $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

                $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

                if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

                $export($export.P + $export.F * fails(function () {
                    new TypedArray(1).slice();
                }), NAME, { slice: $slice });

                $export($export.P + $export.F * (fails(function () {
                    return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
                }) || !fails(function () {
                    TypedArrayPrototype.toLocaleString.call([1, 2]);
                })), NAME, { toLocaleString: $toLocaleString });

                Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
                if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
            };
        } else module.exports = function () { /* empty */ };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_typed-buffer.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_typed-buffer.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
        var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
        var $typed = __webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js");
        var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
        var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
        var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var toIndex = __webpack_require__(/*! ./_to-index */ "./node_modules/core-js/modules/_to-index.js");
        var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
        var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
        var arrayFill = __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js");
        var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
        var ARRAY_BUFFER = 'ArrayBuffer';
        var DATA_VIEW = 'DataView';
        var PROTOTYPE = 'prototype';
        var WRONG_LENGTH = 'Wrong length!';
        var WRONG_INDEX = 'Wrong index!';
        var $ArrayBuffer = global[ARRAY_BUFFER];
        var $DataView = global[DATA_VIEW];
        var Math = global.Math;
        var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
        var Infinity = global.Infinity;
        var BaseBuffer = $ArrayBuffer;
        var abs = Math.abs;
        var pow = Math.pow;
        var floor = Math.floor;
        var log = Math.log;
        var LN2 = Math.LN2;
        var BUFFER = 'buffer';
        var BYTE_LENGTH = 'byteLength';
        var BYTE_OFFSET = 'byteOffset';
        var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
        var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
        var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
        function packIEEE754(value, mLen, nBytes) {
            var buffer = new Array(nBytes);
            var eLen = nBytes * 8 - mLen - 1;
            var eMax = (1 << eLen) - 1;
            var eBias = eMax >> 1;
            var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
            var i = 0;
            var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
            var e, m, c;
            value = abs(value);
            // eslint-disable-next-line no-self-compare
            if (value != value || value === Infinity) {
                // eslint-disable-next-line no-self-compare
                m = value != value ? 1 : 0;
                e = eMax;
            } else {
                e = floor(log(value) / LN2);
                if (value * (c = pow(2, -e)) < 1) {
                    e--;
                    c *= 2;
                }
                if (e + eBias >= 1) {
                    value += rt / c;
                } else {
                    value += rt * pow(2, 1 - eBias);
                }
                if (value * c >= 2) {
                    e++;
                    c /= 2;
                }
                if (e + eBias >= eMax) {
                    m = 0;
                    e = eMax;
                } else if (e + eBias >= 1) {
                    m = (value * c - 1) * pow(2, mLen);
                    e = e + eBias;
                } else {
                    m = value * pow(2, eBias - 1) * pow(2, mLen);
                    e = 0;
                }
            }
            for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
            e = e << mLen | m;
            eLen += mLen;
            for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
            buffer[--i] |= s * 128;
            return buffer;
        }
        function unpackIEEE754(buffer, mLen, nBytes) {
            var eLen = nBytes * 8 - mLen - 1;
            var eMax = (1 << eLen) - 1;
            var eBias = eMax >> 1;
            var nBits = eLen - 7;
            var i = nBytes - 1;
            var s = buffer[i--];
            var e = s & 127;
            var m;
            s >>= 7;
            for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
            m = e & (1 << -nBits) - 1;
            e >>= -nBits;
            nBits += mLen;
            for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
            if (e === 0) {
                e = 1 - eBias;
            } else if (e === eMax) {
                return m ? NaN : s ? -Infinity : Infinity;
            } else {
                m = m + pow(2, mLen);
                e = e - eBias;
            } return (s ? -1 : 1) * m * pow(2, e - mLen);
        }

        function unpackI32(bytes) {
            return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
        }
        function packI8(it) {
            return [it & 0xff];
        }
        function packI16(it) {
            return [it & 0xff, it >> 8 & 0xff];
        }
        function packI32(it) {
            return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
        }
        function packF64(it) {
            return packIEEE754(it, 52, 8);
        }
        function packF32(it) {
            return packIEEE754(it, 23, 4);
        }

        function addGetter(C, key, internal) {
            dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
        }

        function get(view, bytes, index, isLittleEndian) {
            var numIndex = +index;
            var intIndex = toIndex(numIndex);
            if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
            var store = view[$BUFFER]._b;
            var start = intIndex + view[$OFFSET];
            var pack = store.slice(start, start + bytes);
            return isLittleEndian ? pack : pack.reverse();
        }
        function set(view, bytes, index, conversion, value, isLittleEndian) {
            var numIndex = +index;
            var intIndex = toIndex(numIndex);
            if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
            var store = view[$BUFFER]._b;
            var start = intIndex + view[$OFFSET];
            var pack = conversion(+value);
            for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
        }

        if (!$typed.ABV) {
            $ArrayBuffer = function ArrayBuffer(length) {
                anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
                var byteLength = toIndex(length);
                this._b = arrayFill.call(new Array(byteLength), 0);
                this[$LENGTH] = byteLength;
            };

            $DataView = function DataView(buffer, byteOffset, byteLength) {
                anInstance(this, $DataView, DATA_VIEW);
                anInstance(buffer, $ArrayBuffer, DATA_VIEW);
                var bufferLength = buffer[$LENGTH];
                var offset = toInteger(byteOffset);
                if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
                byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
                if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
                this[$BUFFER] = buffer;
                this[$OFFSET] = offset;
                this[$LENGTH] = byteLength;
            };

            if (DESCRIPTORS) {
                addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
                addGetter($DataView, BUFFER, '_b');
                addGetter($DataView, BYTE_LENGTH, '_l');
                addGetter($DataView, BYTE_OFFSET, '_o');
            }

            redefineAll($DataView[PROTOTYPE], {
                getInt8: function getInt8(byteOffset) {
                    return get(this, 1, byteOffset)[0] << 24 >> 24;
                },
                getUint8: function getUint8(byteOffset) {
                    return get(this, 1, byteOffset)[0];
                },
                getInt16: function getInt16(byteOffset /* , littleEndian */) {
                    var bytes = get(this, 2, byteOffset, arguments[1]);
                    return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
                },
                getUint16: function getUint16(byteOffset /* , littleEndian */) {
                    var bytes = get(this, 2, byteOffset, arguments[1]);
                    return bytes[1] << 8 | bytes[0];
                },
                getInt32: function getInt32(byteOffset /* , littleEndian */) {
                    return unpackI32(get(this, 4, byteOffset, arguments[1]));
                },
                getUint32: function getUint32(byteOffset /* , littleEndian */) {
                    return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
                },
                getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
                    return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
                },
                getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
                    return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
                },
                setInt8: function setInt8(byteOffset, value) {
                    set(this, 1, byteOffset, packI8, value);
                },
                setUint8: function setUint8(byteOffset, value) {
                    set(this, 1, byteOffset, packI8, value);
                },
                setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
                    set(this, 2, byteOffset, packI16, value, arguments[2]);
                },
                setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
                    set(this, 2, byteOffset, packI16, value, arguments[2]);
                },
                setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
                    set(this, 4, byteOffset, packI32, value, arguments[2]);
                },
                setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
                    set(this, 4, byteOffset, packI32, value, arguments[2]);
                },
                setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
                    set(this, 4, byteOffset, packF32, value, arguments[2]);
                },
                setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
                    set(this, 8, byteOffset, packF64, value, arguments[2]);
                }
            });
        } else {
            if (!fails(function () {
                $ArrayBuffer(1);
            }) || !fails(function () {
                new $ArrayBuffer(-1); // eslint-disable-line no-new
            }) || fails(function () {
                new $ArrayBuffer(); // eslint-disable-line no-new
                new $ArrayBuffer(1.5); // eslint-disable-line no-new
                new $ArrayBuffer(NaN); // eslint-disable-line no-new
                return $ArrayBuffer.name != ARRAY_BUFFER;
            })) {
                $ArrayBuffer = function ArrayBuffer(length) {
                    anInstance(this, $ArrayBuffer);
                    return new BaseBuffer(toIndex(length));
                };
                var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
                for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
                    if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
                }
                if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
            }
            // iOS Safari 7.x bug
            var view = new $DataView(new $ArrayBuffer(2));
            var $setInt8 = $DataView[PROTOTYPE].setInt8;
            view.setInt8(0, 2147483648);
            view.setInt8(1, 2147483649);
            if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
                setInt8: function setInt8(byteOffset, value) {
                    $setInt8.call(this, byteOffset, value << 24 >> 24);
                },
                setUint8: function setUint8(byteOffset, value) {
                    $setInt8.call(this, byteOffset, value << 24 >> 24);
                }
            }, true);
        }
        setToStringTag($ArrayBuffer, ARRAY_BUFFER);
        setToStringTag($DataView, DATA_VIEW);
        hide($DataView[PROTOTYPE], $typed.VIEW, true);
        exports[ARRAY_BUFFER] = $ArrayBuffer;
        exports[DATA_VIEW] = $DataView;


        /***/ }),

    /***/ "./node_modules/core-js/modules/_typed.js":
    /*!************************************************!*\
  !*** ./node_modules/core-js/modules/_typed.js ***!
  \************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
        var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
        var TYPED = uid('typed_array');
        var VIEW = uid('view');
        var ABV = !!(global.ArrayBuffer && global.DataView);
        var CONSTR = ABV;
        var i = 0;
        var l = 9;
        var Typed;

        var TypedArrayConstructors = (
            'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
        ).split(',');

        while (i < l) {
            if (Typed = global[TypedArrayConstructors[i++]]) {
                hide(Typed.prototype, TYPED, true);
                hide(Typed.prototype, VIEW, true);
            } else CONSTR = false;
        }

        module.exports = {
            ABV: ABV,
            CONSTR: CONSTR,
            TYPED: TYPED,
            VIEW: VIEW
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_uid.js":
    /*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_uid.js ***!
  \**********************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        var id = 0;
        var px = Math.random();
        module.exports = function (key) {
            return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_user-agent.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_user-agent.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var navigator = global.navigator;

        module.exports = navigator && navigator.userAgent || '';


        /***/ }),

    /***/ "./node_modules/core-js/modules/_validate-collection.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_validate-collection.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        module.exports = function (it, TYPE) {
            if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
            return it;
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_wks-define.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_wks-define.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
        var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
        var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/modules/_wks-ext.js");
        var defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
        module.exports = function (name) {
            var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
            if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/_wks-ext.js":
    /*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_wks-ext.js ***!
  \**************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        exports.f = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");


        /***/ }),

    /***/ "./node_modules/core-js/modules/_wks.js":
    /*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_wks.js ***!
  \**********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var store = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('wks');
        var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
        var Symbol = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Symbol;
        var USE_SYMBOL = typeof Symbol == 'function';

        var $exports = module.exports = function (name) {
            return store[name] || (store[name] =
                USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
        };

        $exports.store = store;


        /***/ }),

    /***/ "./node_modules/core-js/modules/core.get-iterator-method.js":
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/core.get-iterator-method.js ***!
  \******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
        var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
        var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
        module.exports = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js").getIteratorMethod = function (it) {
            if (it != undefined) return it[ITERATOR]
                || it['@@iterator']
                || Iterators[classof(it)];
        };


        /***/ }),

    /***/ "./node_modules/core-js/modules/core.regexp.escape.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/core.regexp.escape.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/benjamingr/RexExp.escape
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $re = __webpack_require__(/*! ./_replacer */ "./node_modules/core-js/modules/_replacer.js")(/[\\^$*+?.()|[\]{}]/g, '\\$&');

        $export($export.S, 'RegExp', { escape: function escape(it) { return $re(it); } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.copy-within.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.copy-within.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.P, 'Array', { copyWithin: __webpack_require__(/*! ./_array-copy-within */ "./node_modules/core-js/modules/_array-copy-within.js") });

        __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('copyWithin');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.every.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.every.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $every = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(4);

        $export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].every, true), 'Array', {
            // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
            every: function every(callbackfn /* , thisArg */) {
                return $every(this, callbackfn, arguments[1]);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.fill.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.fill.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.P, 'Array', { fill: __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js") });

        __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('fill');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.filter.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.filter.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $filter = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(2);

        $export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].filter, true), 'Array', {
            // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
            filter: function filter(callbackfn /* , thisArg */) {
                return $filter(this, callbackfn, arguments[1]);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.find-index.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.find-index.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $find = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(6);
        var KEY = 'findIndex';
        var forced = true;
// Shouldn't skip holes
        if (KEY in []) Array(1)[KEY](function () { forced = false; });
        $export($export.P + $export.F * forced, 'Array', {
            findIndex: function findIndex(callbackfn /* , that = undefined */) {
                return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
            }
        });
        __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")(KEY);


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.find.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.find.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $find = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(5);
        var KEY = 'find';
        var forced = true;
// Shouldn't skip holes
        if (KEY in []) Array(1)[KEY](function () { forced = false; });
        $export($export.P + $export.F * forced, 'Array', {
            find: function find(callbackfn /* , that = undefined */) {
                return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
            }
        });
        __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")(KEY);


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.for-each.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.for-each.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $forEach = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(0);
        var STRICT = __webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].forEach, true);

        $export($export.P + $export.F * !STRICT, 'Array', {
            // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
            forEach: function forEach(callbackfn /* , thisArg */) {
                return $forEach(this, callbackfn, arguments[1]);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.from.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.from.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/core-js/modules/_iter-call.js");
        var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var createProperty = __webpack_require__(/*! ./_create-property */ "./node_modules/core-js/modules/_create-property.js");
        var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");

        $export($export.S + $export.F * !__webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js")(function (iter) { Array.from(iter); }), 'Array', {
            // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
            from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
                var O = toObject(arrayLike);
                var C = typeof this == 'function' ? this : Array;
                var aLen = arguments.length;
                var mapfn = aLen > 1 ? arguments[1] : undefined;
                var mapping = mapfn !== undefined;
                var index = 0;
                var iterFn = getIterFn(O);
                var length, result, step, iterator;
                if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
                // if object isn't iterable or it's array with default iterator - use simple case
                if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
                    for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
                        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
                    }
                } else {
                    length = toLength(O.length);
                    for (result = new C(length); length > index; index++) {
                        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
                    }
                }
                result.length = index;
                return result;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.index-of.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.index-of.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $indexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js")(false);
        var $native = [].indexOf;
        var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

        $export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")($native)), 'Array', {
            // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
            indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
                return NEGATIVE_ZERO
                    // convert -0 to +0
                    ? $native.apply(this, arguments) || 0
                    : $indexOf(this, searchElement, arguments[1]);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.is-array.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.is-array.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Array', { isArray: __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.iterator.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.iterator.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js");
        var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/modules/_iter-step.js");
        var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
        module.exports = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
            this._t = toIObject(iterated); // target
            this._i = 0;                   // next index
            this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
        }, function () {
            var O = this._t;
            var kind = this._k;
            var index = this._i++;
            if (!O || index >= O.length) {
                this._t = undefined;
                return step(1);
            }
            if (kind == 'keys') return step(0, index);
            if (kind == 'values') return step(0, O[index]);
            return step(0, [index, O[index]]);
        }, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
        Iterators.Arguments = Iterators.Array;

        addToUnscopables('keys');
        addToUnscopables('values');
        addToUnscopables('entries');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.join.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.join.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// 22.1.3.13 Array.prototype.join(separator)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
        var arrayJoin = [].join;

// fallback for not array-like strings
        $export($export.P + $export.F * (__webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js") != Object || !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")(arrayJoin)), 'Array', {
            join: function join(separator) {
                return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.last-index-of.js":
    /*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.last-index-of.js ***!
  \*****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
        var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var $native = [].lastIndexOf;
        var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

        $export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")($native)), 'Array', {
            // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
            lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
                // convert -0 to +0
                if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
                var O = toIObject(this);
                var length = toLength(O.length);
                var index = length - 1;
                if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
                if (index < 0) index = length + index;
                for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
                return -1;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.map.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.map.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $map = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(1);

        $export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].map, true), 'Array', {
            // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
            map: function map(callbackfn /* , thisArg */) {
                return $map(this, callbackfn, arguments[1]);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.of.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.of.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var createProperty = __webpack_require__(/*! ./_create-property */ "./node_modules/core-js/modules/_create-property.js");

// WebKit Array.of isn't generic
        $export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            function F() { /* empty */ }
            return !(Array.of.call(F) instanceof F);
        }), 'Array', {
            // 22.1.2.3 Array.of( ...items)
            of: function of(/* ...args */) {
                var index = 0;
                var aLen = arguments.length;
                var result = new (typeof this == 'function' ? this : Array)(aLen);
                while (aLen > index) createProperty(result, index, arguments[index++]);
                result.length = aLen;
                return result;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.reduce-right.js":
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.reduce-right.js ***!
  \****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $reduce = __webpack_require__(/*! ./_array-reduce */ "./node_modules/core-js/modules/_array-reduce.js");

        $export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].reduceRight, true), 'Array', {
            // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
            reduceRight: function reduceRight(callbackfn /* , initialValue */) {
                return $reduce(this, callbackfn, arguments.length, arguments[1], true);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.reduce.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.reduce.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $reduce = __webpack_require__(/*! ./_array-reduce */ "./node_modules/core-js/modules/_array-reduce.js");

        $export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].reduce, true), 'Array', {
            // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
            reduce: function reduce(callbackfn /* , initialValue */) {
                return $reduce(this, callbackfn, arguments.length, arguments[1], false);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.slice.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.slice.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var html = __webpack_require__(/*! ./_html */ "./node_modules/core-js/modules/_html.js");
        var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
        var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
        $export($export.P + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            if (html) arraySlice.call(html);
        }), 'Array', {
            slice: function slice(begin, end) {
                var len = toLength(this.length);
                var klass = cof(this);
                end = end === undefined ? len : end;
                if (klass == 'Array') return arraySlice.call(this, begin, end);
                var start = toAbsoluteIndex(begin, len);
                var upTo = toAbsoluteIndex(end, len);
                var size = toLength(upTo - start);
                var cloned = new Array(size);
                var i = 0;
                for (; i < size; i++) cloned[i] = klass == 'String'
                    ? this.charAt(start + i)
                    : this[start + i];
                return cloned;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.some.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.some.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $some = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(3);

        $export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")([].some, true), 'Array', {
            // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
            some: function some(callbackfn /* , thisArg */) {
                return $some(this, callbackfn, arguments[1]);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.sort.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.sort.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var $sort = [].sort;
        var test = [1, 2, 3];

        $export($export.P + $export.F * (fails(function () {
            // IE8-
            test.sort(undefined);
        }) || !fails(function () {
            // V8 bug
            test.sort(null);
            // Old WebKit
        }) || !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")($sort)), 'Array', {
            // 22.1.3.25 Array.prototype.sort(comparefn)
            sort: function sort(comparefn) {
                return comparefn === undefined
                    ? $sort.call(toObject(this))
                    : $sort.call(toObject(this), aFunction(comparefn));
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.array.species.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.species.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")('Array');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.date.now.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.now.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.3.3.1 / 15.9.4.4 Date.now()
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Date', { now: function () { return new Date().getTime(); } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.date.to-iso-string.js":
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-iso-string.js ***!
  \****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toISOString = __webpack_require__(/*! ./_date-to-iso-string */ "./node_modules/core-js/modules/_date-to-iso-string.js");

// PhantomJS / old WebKit has a broken implementations
        $export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
            toISOString: toISOString
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.date.to-json.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-json.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");

        $export($export.P + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            return new Date(NaN).toJSON() !== null
                || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
        }), 'Date', {
            // eslint-disable-next-line no-unused-vars
            toJSON: function toJSON(key) {
                var O = toObject(this);
                var pv = toPrimitive(O);
                return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.date.to-primitive.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-primitive.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var TO_PRIMITIVE = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toPrimitive');
        var proto = Date.prototype;

        if (!(TO_PRIMITIVE in proto)) __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(proto, TO_PRIMITIVE, __webpack_require__(/*! ./_date-to-primitive */ "./node_modules/core-js/modules/_date-to-primitive.js"));


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.date.to-string.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-string.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var DateProto = Date.prototype;
        var INVALID_DATE = 'Invalid Date';
        var TO_STRING = 'toString';
        var $toString = DateProto[TO_STRING];
        var getTime = DateProto.getTime;
        if (new Date(NaN) + '' != INVALID_DATE) {
            __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(DateProto, TO_STRING, function toString() {
                var value = getTime.call(this);
                // eslint-disable-next-line no-self-compare
                return value === value ? $toString.call(this) : INVALID_DATE;
            });
        }


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.function.bind.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.function.bind.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.P, 'Function', { bind: __webpack_require__(/*! ./_bind */ "./node_modules/core-js/modules/_bind.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.function.has-instance.js":
    /*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.function.has-instance.js ***!
  \*******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
        var HAS_INSTANCE = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('hasInstance');
        var FunctionProto = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
        if (!(HAS_INSTANCE in FunctionProto)) __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f(FunctionProto, HAS_INSTANCE, { value: function (O) {
                if (typeof this != 'function' || !isObject(O)) return false;
                if (!isObject(this.prototype)) return O instanceof this;
                // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
                while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
                return false;
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.function.name.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.function.name.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
        var FProto = Function.prototype;
        var nameRE = /^\s*function ([^ (]*)/;
        var NAME = 'name';

// 19.2.4.2 name
        NAME in FProto || __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && dP(FProto, NAME, {
            configurable: true,
            get: function () {
                try {
                    return ('' + this).match(nameRE)[1];
                } catch (e) {
                    return '';
                }
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.map.js":
    /*!*************************************************!*\
  !*** ./node_modules/core-js/modules/es6.map.js ***!
  \*************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var strong = __webpack_require__(/*! ./_collection-strong */ "./node_modules/core-js/modules/_collection-strong.js");
        var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
        var MAP = 'Map';

// 23.1 Map Objects
        module.exports = __webpack_require__(/*! ./_collection */ "./node_modules/core-js/modules/_collection.js")(MAP, function (get) {
            return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
        }, {
            // 23.1.3.6 Map.prototype.get(key)
            get: function get(key) {
                var entry = strong.getEntry(validate(this, MAP), key);
                return entry && entry.v;
            },
            // 23.1.3.9 Map.prototype.set(key, value)
            set: function set(key, value) {
                return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
            }
        }, strong, true);


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.acosh.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.acosh.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.3 Math.acosh(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var log1p = __webpack_require__(/*! ./_math-log1p */ "./node_modules/core-js/modules/_math-log1p.js");
        var sqrt = Math.sqrt;
        var $acosh = Math.acosh;

        $export($export.S + $export.F * !($acosh
            // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
            && Math.floor($acosh(Number.MAX_VALUE)) == 710
            // Tor Browser bug: Math.acosh(Infinity) -> NaN
            && $acosh(Infinity) == Infinity
        ), 'Math', {
            acosh: function acosh(x) {
                return (x = +x) < 1 ? NaN : x > 94906265.62425156
                    ? Math.log(x) + Math.LN2
                    : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.asinh.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.asinh.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.5 Math.asinh(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $asinh = Math.asinh;

        function asinh(x) {
            return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
        }

// Tor Browser bug: Math.asinh(0) -> -0
        $export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.atanh.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.atanh.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.7 Math.atanh(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $atanh = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0
        $export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
            atanh: function atanh(x) {
                return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.cbrt.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.cbrt.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.9 Math.cbrt(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var sign = __webpack_require__(/*! ./_math-sign */ "./node_modules/core-js/modules/_math-sign.js");

        $export($export.S, 'Math', {
            cbrt: function cbrt(x) {
                return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.clz32.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.clz32.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.11 Math.clz32(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', {
            clz32: function clz32(x) {
                return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.cosh.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.cosh.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.12 Math.cosh(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var exp = Math.exp;

        $export($export.S, 'Math', {
            cosh: function cosh(x) {
                return (exp(x = +x) + exp(-x)) / 2;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.expm1.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.expm1.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.14 Math.expm1(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $expm1 = __webpack_require__(/*! ./_math-expm1 */ "./node_modules/core-js/modules/_math-expm1.js");

        $export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.fround.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.fround.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.16 Math.fround(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', { fround: __webpack_require__(/*! ./_math-fround */ "./node_modules/core-js/modules/_math-fround.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.hypot.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.hypot.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var abs = Math.abs;

        $export($export.S, 'Math', {
            hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
                var sum = 0;
                var i = 0;
                var aLen = arguments.length;
                var larg = 0;
                var arg, div;
                while (i < aLen) {
                    arg = abs(arguments[i++]);
                    if (larg < arg) {
                        div = larg / arg;
                        sum = sum * div * div + 1;
                        larg = arg;
                    } else if (arg > 0) {
                        div = arg / larg;
                        sum += div * div;
                    } else sum += arg;
                }
                return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.imul.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.imul.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.18 Math.imul(x, y)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
        $export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
        }), 'Math', {
            imul: function imul(x, y) {
                var UINT16 = 0xffff;
                var xn = +x;
                var yn = +y;
                var xl = UINT16 & xn;
                var yl = UINT16 & yn;
                return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.log10.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.log10.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.21 Math.log10(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', {
            log10: function log10(x) {
                return Math.log(x) * Math.LOG10E;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.log1p.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.log1p.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.20 Math.log1p(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', { log1p: __webpack_require__(/*! ./_math-log1p */ "./node_modules/core-js/modules/_math-log1p.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.log2.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.log2.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.22 Math.log2(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', {
            log2: function log2(x) {
                return Math.log(x) / Math.LN2;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.sign.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.sign.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.28 Math.sign(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', { sign: __webpack_require__(/*! ./_math-sign */ "./node_modules/core-js/modules/_math-sign.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.sinh.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.sinh.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.30 Math.sinh(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var expm1 = __webpack_require__(/*! ./_math-expm1 */ "./node_modules/core-js/modules/_math-expm1.js");
        var exp = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
        $export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            return !Math.sinh(-2e-17) != -2e-17;
        }), 'Math', {
            sinh: function sinh(x) {
                return Math.abs(x = +x) < 1
                    ? (expm1(x) - expm1(-x)) / 2
                    : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.tanh.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.tanh.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.33 Math.tanh(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var expm1 = __webpack_require__(/*! ./_math-expm1 */ "./node_modules/core-js/modules/_math-expm1.js");
        var exp = Math.exp;

        $export($export.S, 'Math', {
            tanh: function tanh(x) {
                var a = expm1(x = +x);
                var b = expm1(-x);
                return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.math.trunc.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.trunc.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.2.2.34 Math.trunc(x)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', {
            trunc: function trunc(it) {
                return (it > 0 ? Math.floor : Math.ceil)(it);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.constructor.js":
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.constructor.js ***!
  \****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
        var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
        var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "./node_modules/core-js/modules/_inherit-if-required.js");
        var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
        var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f;
        var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
        var $trim = __webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js").trim;
        var NUMBER = 'Number';
        var $Number = global[NUMBER];
        var Base = $Number;
        var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
        var BROKEN_COF = cof(__webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js")(proto)) == NUMBER;
        var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
        var toNumber = function (argument) {
            var it = toPrimitive(argument, false);
            if (typeof it == 'string' && it.length > 2) {
                it = TRIM ? it.trim() : $trim(it, 3);
                var first = it.charCodeAt(0);
                var third, radix, maxCode;
                if (first === 43 || first === 45) {
                    third = it.charCodeAt(2);
                    if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
                } else if (first === 48) {
                    switch (it.charCodeAt(1)) {
                        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
                        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
                        default: return +it;
                    }
                    for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
                        code = digits.charCodeAt(i);
                        // parseInt parses a string to a first unavailable symbol
                        // but ToNumber should return NaN if a string contains unavailable symbols
                        if (code < 48 || code > maxCode) return NaN;
                    } return parseInt(digits, radix);
                }
            } return +it;
        };

        if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
            $Number = function Number(value) {
                var it = arguments.length < 1 ? 0 : value;
                var that = this;
                return that instanceof $Number
                // check on 1..constructor(foo) case
                && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
                    ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
            };
            for (var keys = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? gOPN(Base) : (
                // ES3:
                'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
                // ES6 (in case, if modules with ES6 Number statics required before):
                'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
                'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
            ).split(','), j = 0, key; keys.length > j; j++) {
                if (has(Base, key = keys[j]) && !has($Number, key)) {
                    dP($Number, key, gOPD(Base, key));
                }
            }
            $Number.prototype = proto;
            proto.constructor = $Number;
            __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(global, NUMBER, $Number);
        }


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.epsilon.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.epsilon.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.1.2.1 Number.EPSILON
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.is-finite.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-finite.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.1.2.2 Number.isFinite(number)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var _isFinite = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").isFinite;

        $export($export.S, 'Number', {
            isFinite: function isFinite(it) {
                return typeof it == 'number' && _isFinite(it);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.is-integer.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-integer.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Number', { isInteger: __webpack_require__(/*! ./_is-integer */ "./node_modules/core-js/modules/_is-integer.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.is-nan.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-nan.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.1.2.4 Number.isNaN(number)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Number', {
            isNaN: function isNaN(number) {
                // eslint-disable-next-line no-self-compare
                return number != number;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.is-safe-integer.js":
    /*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-safe-integer.js ***!
  \********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.1.2.5 Number.isSafeInteger(number)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var isInteger = __webpack_require__(/*! ./_is-integer */ "./node_modules/core-js/modules/_is-integer.js");
        var abs = Math.abs;

        $export($export.S, 'Number', {
            isSafeInteger: function isSafeInteger(number) {
                return isInteger(number) && abs(number) <= 0x1fffffffffffff;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.max-safe-integer.js":
    /*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.max-safe-integer.js ***!
  \*********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.1.2.6 Number.MAX_SAFE_INTEGER
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.min-safe-integer.js":
    /*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.min-safe-integer.js ***!
  \*********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 20.1.2.10 Number.MIN_SAFE_INTEGER
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.parse-float.js":
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.parse-float.js ***!
  \****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $parseFloat = __webpack_require__(/*! ./_parse-float */ "./node_modules/core-js/modules/_parse-float.js");
// 20.1.2.12 Number.parseFloat(string)
        $export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.parse-int.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.parse-int.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $parseInt = __webpack_require__(/*! ./_parse-int */ "./node_modules/core-js/modules/_parse-int.js");
// 20.1.2.13 Number.parseInt(string, radix)
        $export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.to-fixed.js":
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.to-fixed.js ***!
  \*************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
        var aNumberValue = __webpack_require__(/*! ./_a-number-value */ "./node_modules/core-js/modules/_a-number-value.js");
        var repeat = __webpack_require__(/*! ./_string-repeat */ "./node_modules/core-js/modules/_string-repeat.js");
        var $toFixed = 1.0.toFixed;
        var floor = Math.floor;
        var data = [0, 0, 0, 0, 0, 0];
        var ERROR = 'Number.toFixed: incorrect invocation!';
        var ZERO = '0';

        var multiply = function (n, c) {
            var i = -1;
            var c2 = c;
            while (++i < 6) {
                c2 += n * data[i];
                data[i] = c2 % 1e7;
                c2 = floor(c2 / 1e7);
            }
        };
        var divide = function (n) {
            var i = 6;
            var c = 0;
            while (--i >= 0) {
                c += data[i];
                data[i] = floor(c / n);
                c = (c % n) * 1e7;
            }
        };
        var numToString = function () {
            var i = 6;
            var s = '';
            while (--i >= 0) {
                if (s !== '' || i === 0 || data[i] !== 0) {
                    var t = String(data[i]);
                    s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
                }
            } return s;
        };
        var pow = function (x, n, acc) {
            return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
        };
        var log = function (x) {
            var n = 0;
            var x2 = x;
            while (x2 >= 4096) {
                n += 12;
                x2 /= 4096;
            }
            while (x2 >= 2) {
                n += 1;
                x2 /= 2;
            } return n;
        };

        $export($export.P + $export.F * (!!$toFixed && (
            0.00008.toFixed(3) !== '0.000' ||
            0.9.toFixed(0) !== '1' ||
            1.255.toFixed(2) !== '1.25' ||
            1000000000000000128.0.toFixed(0) !== '1000000000000000128'
        ) || !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            // V8 ~ Android 4.3-
            $toFixed.call({});
        })), 'Number', {
            toFixed: function toFixed(fractionDigits) {
                var x = aNumberValue(this, ERROR);
                var f = toInteger(fractionDigits);
                var s = '';
                var m = ZERO;
                var e, z, j, k;
                if (f < 0 || f > 20) throw RangeError(ERROR);
                // eslint-disable-next-line no-self-compare
                if (x != x) return 'NaN';
                if (x <= -1e21 || x >= 1e21) return String(x);
                if (x < 0) {
                    s = '-';
                    x = -x;
                }
                if (x > 1e-21) {
                    e = log(x * pow(2, 69, 1)) - 69;
                    z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
                    z *= 0x10000000000000;
                    e = 52 - e;
                    if (e > 0) {
                        multiply(0, z);
                        j = f;
                        while (j >= 7) {
                            multiply(1e7, 0);
                            j -= 7;
                        }
                        multiply(pow(10, j, 1), 0);
                        j = e - 1;
                        while (j >= 23) {
                            divide(1 << 23);
                            j -= 23;
                        }
                        divide(1 << j);
                        multiply(1, 1);
                        divide(2);
                        m = numToString();
                    } else {
                        multiply(0, z);
                        multiply(1 << -e, 0);
                        m = numToString() + repeat.call(ZERO, f);
                    }
                }
                if (f > 0) {
                    k = m.length;
                    m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
                } else {
                    m = s + m;
                } return m;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.number.to-precision.js":
    /*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.to-precision.js ***!
  \*****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var aNumberValue = __webpack_require__(/*! ./_a-number-value */ "./node_modules/core-js/modules/_a-number-value.js");
        var $toPrecision = 1.0.toPrecision;

        $export($export.P + $export.F * ($fails(function () {
            // IE7-
            return $toPrecision.call(1, undefined) !== '1';
        }) || !$fails(function () {
            // V8 ~ Android 4.3-
            $toPrecision.call({});
        })), 'Number', {
            toPrecision: function toPrecision(precision) {
                var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
                return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.assign.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.assign.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ "./node_modules/core-js/modules/_object-assign.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.create.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.create.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
        $export($export.S, 'Object', { create: __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.define-properties.js":
    /*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.define-properties.js ***!
  \**********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
        $export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js"), 'Object', { defineProperties: __webpack_require__(/*! ./_object-dps */ "./node_modules/core-js/modules/_object-dps.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.define-property.js":
    /*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.define-property.js ***!
  \********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
        $export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js"), 'Object', { defineProperty: __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.freeze.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.freeze.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.5 Object.freeze(O)
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").onFreeze;

        __webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('freeze', function ($freeze) {
            return function freeze(it) {
                return $freeze && isObject(it) ? $freeze(meta(it)) : it;
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js":
    /*!********************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js ***!
  \********************************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
        var $getOwnPropertyDescriptor = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f;

        __webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('getOwnPropertyDescriptor', function () {
            return function getOwnPropertyDescriptor(it, key) {
                return $getOwnPropertyDescriptor(toIObject(it), key);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.get-own-property-names.js":
    /*!***************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.get-own-property-names.js ***!
  \***************************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 Object.getOwnPropertyNames(O)
        __webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('getOwnPropertyNames', function () {
            return __webpack_require__(/*! ./_object-gopn-ext */ "./node_modules/core-js/modules/_object-gopn-ext.js").f;
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.get-prototype-of.js":
    /*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.get-prototype-of.js ***!
  \*********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var $getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");

        __webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('getPrototypeOf', function () {
            return function getPrototypeOf(it) {
                return $getPrototypeOf(toObject(it));
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.is-extensible.js":
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is-extensible.js ***!
  \******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.11 Object.isExtensible(O)
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");

        __webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('isExtensible', function ($isExtensible) {
            return function isExtensible(it) {
                return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.is-frozen.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is-frozen.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.12 Object.isFrozen(O)
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");

        __webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('isFrozen', function ($isFrozen) {
            return function isFrozen(it) {
                return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.is-sealed.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is-sealed.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.13 Object.isSealed(O)
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");

        __webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('isSealed', function ($isSealed) {
            return function isSealed(it) {
                return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.is.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.3.10 Object.is(value1, value2)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        $export($export.S, 'Object', { is: __webpack_require__(/*! ./_same-value */ "./node_modules/core-js/modules/_same-value.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.keys.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.keys.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");

        __webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('keys', function () {
            return function keys(it) {
                return $keys(toObject(it));
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.prevent-extensions.js":
    /*!***********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.prevent-extensions.js ***!
  \***********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.15 Object.preventExtensions(O)
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").onFreeze;

        __webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('preventExtensions', function ($preventExtensions) {
            return function preventExtensions(it) {
                return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.seal.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.seal.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.2.17 Object.seal(O)
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").onFreeze;

        __webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/modules/_object-sap.js")('seal', function ($seal) {
            return function seal(it) {
                return $seal && isObject(it) ? $seal(meta(it)) : it;
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.set-prototype-of.js":
    /*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.set-prototype-of.js ***!
  \*********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        $export($export.S, 'Object', { setPrototypeOf: __webpack_require__(/*! ./_set-proto */ "./node_modules/core-js/modules/_set-proto.js").set });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.object.to-string.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.to-string.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// 19.1.3.6 Object.prototype.toString()
        var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
        var test = {};
        test[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toStringTag')] = 'z';
        if (test + '' != '[object z]') {
            __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(Object.prototype, 'toString', function toString() {
                return '[object ' + classof(this) + ']';
            }, true);
        }


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.parse-float.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.parse-float.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $parseFloat = __webpack_require__(/*! ./_parse-float */ "./node_modules/core-js/modules/_parse-float.js");
// 18.2.4 parseFloat(string)
        $export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.parse-int.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.parse-int.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $parseInt = __webpack_require__(/*! ./_parse-int */ "./node_modules/core-js/modules/_parse-int.js");
// 18.2.5 parseInt(string, radix)
        $export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.promise.js":
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/es6.promise.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
        var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
        var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
        var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
        var task = __webpack_require__(/*! ./_task */ "./node_modules/core-js/modules/_task.js").set;
        var microtask = __webpack_require__(/*! ./_microtask */ "./node_modules/core-js/modules/_microtask.js")();
        var newPromiseCapabilityModule = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/modules/_new-promise-capability.js");
        var perform = __webpack_require__(/*! ./_perform */ "./node_modules/core-js/modules/_perform.js");
        var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/modules/_user-agent.js");
        var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/modules/_promise-resolve.js");
        var PROMISE = 'Promise';
        var TypeError = global.TypeError;
        var process = global.process;
        var versions = process && process.versions;
        var v8 = versions && versions.v8 || '';
        var $Promise = global[PROMISE];
        var isNode = classof(process) == 'process';
        var empty = function () { /* empty */ };
        var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
        var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

        var USE_NATIVE = !!function () {
            try {
                // correct subclassing with @@species support
                var promise = $Promise.resolve(1);
                var FakePromise = (promise.constructor = {})[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species')] = function (exec) {
                    exec(empty, empty);
                };
                // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
                return (isNode || typeof PromiseRejectionEvent == 'function')
                    && promise.then(empty) instanceof FakePromise
                    // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
                    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
                    // we can't detect it synchronously, so just check versions
                    && v8.indexOf('6.6') !== 0
                    && userAgent.indexOf('Chrome/66') === -1;
            } catch (e) { /* empty */ }
        }();

// helpers
        var isThenable = function (it) {
            var then;
            return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
        };
        var notify = function (promise, isReject) {
            if (promise._n) return;
            promise._n = true;
            var chain = promise._c;
            microtask(function () {
                var value = promise._v;
                var ok = promise._s == 1;
                var i = 0;
                var run = function (reaction) {
                    var handler = ok ? reaction.ok : reaction.fail;
                    var resolve = reaction.resolve;
                    var reject = reaction.reject;
                    var domain = reaction.domain;
                    var result, then, exited;
                    try {
                        if (handler) {
                            if (!ok) {
                                if (promise._h == 2) onHandleUnhandled(promise);
                                promise._h = 1;
                            }
                            if (handler === true) result = value;
                            else {
                                if (domain) domain.enter();
                                result = handler(value); // may throw
                                if (domain) {
                                    domain.exit();
                                    exited = true;
                                }
                            }
                            if (result === reaction.promise) {
                                reject(TypeError('Promise-chain cycle'));
                            } else if (then = isThenable(result)) {
                                then.call(result, resolve, reject);
                            } else resolve(result);
                        } else reject(value);
                    } catch (e) {
                        if (domain && !exited) domain.exit();
                        reject(e);
                    }
                };
                while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
                promise._c = [];
                promise._n = false;
                if (isReject && !promise._h) onUnhandled(promise);
            });
        };
        var onUnhandled = function (promise) {
            task.call(global, function () {
                var value = promise._v;
                var unhandled = isUnhandled(promise);
                var result, handler, console;
                if (unhandled) {
                    result = perform(function () {
                        if (isNode) {
                            process.emit('unhandledRejection', value, promise);
                        } else if (handler = global.onunhandledrejection) {
                            handler({ promise: promise, reason: value });
                        } else if ((console = global.console) && console.error) {
                            console.error('Unhandled promise rejection', value);
                        }
                    });
                    // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
                    promise._h = isNode || isUnhandled(promise) ? 2 : 1;
                } promise._a = undefined;
                if (unhandled && result.e) throw result.v;
            });
        };
        var isUnhandled = function (promise) {
            return promise._h !== 1 && (promise._a || promise._c).length === 0;
        };
        var onHandleUnhandled = function (promise) {
            task.call(global, function () {
                var handler;
                if (isNode) {
                    process.emit('rejectionHandled', promise);
                } else if (handler = global.onrejectionhandled) {
                    handler({ promise: promise, reason: promise._v });
                }
            });
        };
        var $reject = function (value) {
            var promise = this;
            if (promise._d) return;
            promise._d = true;
            promise = promise._w || promise; // unwrap
            promise._v = value;
            promise._s = 2;
            if (!promise._a) promise._a = promise._c.slice();
            notify(promise, true);
        };
        var $resolve = function (value) {
            var promise = this;
            var then;
            if (promise._d) return;
            promise._d = true;
            promise = promise._w || promise; // unwrap
            try {
                if (promise === value) throw TypeError("Promise can't be resolved itself");
                if (then = isThenable(value)) {
                    microtask(function () {
                        var wrapper = { _w: promise, _d: false }; // wrap
                        try {
                            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
                        } catch (e) {
                            $reject.call(wrapper, e);
                        }
                    });
                } else {
                    promise._v = value;
                    promise._s = 1;
                    notify(promise, false);
                }
            } catch (e) {
                $reject.call({ _w: promise, _d: false }, e); // wrap
            }
        };

// constructor polyfill
        if (!USE_NATIVE) {
            // 25.4.3.1 Promise(executor)
            $Promise = function Promise(executor) {
                anInstance(this, $Promise, PROMISE, '_h');
                aFunction(executor);
                Internal.call(this);
                try {
                    executor(ctx($resolve, this, 1), ctx($reject, this, 1));
                } catch (err) {
                    $reject.call(this, err);
                }
            };
            // eslint-disable-next-line no-unused-vars
            Internal = function Promise(executor) {
                this._c = [];             // <- awaiting reactions
                this._a = undefined;      // <- checked in isUnhandled reactions
                this._s = 0;              // <- state
                this._d = false;          // <- done
                this._v = undefined;      // <- value
                this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
                this._n = false;          // <- notify
            };
            Internal.prototype = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js")($Promise.prototype, {
                // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
                then: function then(onFulfilled, onRejected) {
                    var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
                    reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
                    reaction.fail = typeof onRejected == 'function' && onRejected;
                    reaction.domain = isNode ? process.domain : undefined;
                    this._c.push(reaction);
                    if (this._a) this._a.push(reaction);
                    if (this._s) notify(this, false);
                    return reaction.promise;
                },
                // 25.4.5.1 Promise.prototype.catch(onRejected)
                'catch': function (onRejected) {
                    return this.then(undefined, onRejected);
                }
            });
            OwnPromiseCapability = function () {
                var promise = new Internal();
                this.promise = promise;
                this.resolve = ctx($resolve, promise, 1);
                this.reject = ctx($reject, promise, 1);
            };
            newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
                return C === $Promise || C === Wrapper
                    ? new OwnPromiseCapability(C)
                    : newGenericPromiseCapability(C);
            };
        }

        $export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
        __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js")($Promise, PROMISE);
        __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")(PROMISE);
        Wrapper = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js")[PROMISE];

// statics
        $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
            // 25.4.4.5 Promise.reject(r)
            reject: function reject(r) {
                var capability = newPromiseCapability(this);
                var $$reject = capability.reject;
                $$reject(r);
                return capability.promise;
            }
        });
        $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
            // 25.4.4.6 Promise.resolve(x)
            resolve: function resolve(x) {
                return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
            }
        });
        $export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js")(function (iter) {
            $Promise.all(iter)['catch'](empty);
        })), PROMISE, {
            // 25.4.4.1 Promise.all(iterable)
            all: function all(iterable) {
                var C = this;
                var capability = newPromiseCapability(C);
                var resolve = capability.resolve;
                var reject = capability.reject;
                var result = perform(function () {
                    var values = [];
                    var index = 0;
                    var remaining = 1;
                    forOf(iterable, false, function (promise) {
                        var $index = index++;
                        var alreadyCalled = false;
                        values.push(undefined);
                        remaining++;
                        C.resolve(promise).then(function (value) {
                            if (alreadyCalled) return;
                            alreadyCalled = true;
                            values[$index] = value;
                            --remaining || resolve(values);
                        }, reject);
                    });
                    --remaining || resolve(values);
                });
                if (result.e) reject(result.v);
                return capability.promise;
            },
            // 25.4.4.4 Promise.race(iterable)
            race: function race(iterable) {
                var C = this;
                var capability = newPromiseCapability(C);
                var reject = capability.reject;
                var result = perform(function () {
                    forOf(iterable, false, function (promise) {
                        C.resolve(promise).then(capability.resolve, reject);
                    });
                });
                if (result.e) reject(result.v);
                return capability.promise;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.apply.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.apply.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var rApply = (__webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Reflect || {}).apply;
        var fApply = Function.apply;
// MS Edge argumentsList argument is optional
        $export($export.S + $export.F * !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            rApply(function () { /* empty */ });
        }), 'Reflect', {
            apply: function apply(target, thisArgument, argumentsList) {
                var T = aFunction(target);
                var L = anObject(argumentsList);
                return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.construct.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.construct.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var bind = __webpack_require__(/*! ./_bind */ "./node_modules/core-js/modules/_bind.js");
        var rConstruct = (__webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
        var NEW_TARGET_BUG = fails(function () {
            function F() { /* empty */ }
            return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
        });
        var ARGS_BUG = !fails(function () {
            rConstruct(function () { /* empty */ });
        });

        $export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
            construct: function construct(Target, args /* , newTarget */) {
                aFunction(Target);
                anObject(args);
                var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
                if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
                if (Target == newTarget) {
                    // w/o altered newTarget, optimization for 0-4 arguments
                    switch (args.length) {
                        case 0: return new Target();
                        case 1: return new Target(args[0]);
                        case 2: return new Target(args[0], args[1]);
                        case 3: return new Target(args[0], args[1], args[2]);
                        case 4: return new Target(args[0], args[1], args[2], args[3]);
                    }
                    // w/o altered newTarget, lot of arguments case
                    var $args = [null];
                    $args.push.apply($args, args);
                    return new (bind.apply(Target, $args))();
                }
                // with altered newTarget, not support built-in constructors
                var proto = newTarget.prototype;
                var instance = create(isObject(proto) ? proto : Object.prototype);
                var result = Function.apply.call(Target, instance, args);
                return isObject(result) ? result : instance;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.define-property.js":
    /*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.define-property.js ***!
  \*********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
        var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
        $export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            // eslint-disable-next-line no-undef
            Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
        }), 'Reflect', {
            defineProperty: function defineProperty(target, propertyKey, attributes) {
                anObject(target);
                propertyKey = toPrimitive(propertyKey, true);
                anObject(attributes);
                try {
                    dP.f(target, propertyKey, attributes);
                    return true;
                } catch (e) {
                    return false;
                }
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.delete-property.js":
    /*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.delete-property.js ***!
  \*********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.4 Reflect.deleteProperty(target, propertyKey)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f;
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");

        $export($export.S, 'Reflect', {
            deleteProperty: function deleteProperty(target, propertyKey) {
                var desc = gOPD(anObject(target), propertyKey);
                return desc && !desc.configurable ? false : delete target[propertyKey];
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.enumerate.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.enumerate.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// 26.1.5 Reflect.enumerate(target)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var Enumerate = function (iterated) {
            this._t = anObject(iterated); // target
            this._i = 0;                  // next index
            var keys = this._k = [];      // keys
            var key;
            for (key in iterated) keys.push(key);
        };
        __webpack_require__(/*! ./_iter-create */ "./node_modules/core-js/modules/_iter-create.js")(Enumerate, 'Object', function () {
            var that = this;
            var keys = that._k;
            var key;
            do {
                if (that._i >= keys.length) return { value: undefined, done: true };
            } while (!((key = keys[that._i++]) in that._t));
            return { value: key, done: false };
        });

        $export($export.S, 'Reflect', {
            enumerate: function enumerate(target) {
                return new Enumerate(target);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js":
    /*!*********************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js ***!
  \*********************************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
        var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");

        $export($export.S, 'Reflect', {
            getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
                return gOPD.f(anObject(target), propertyKey);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.get-prototype-of.js":
    /*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.get-prototype-of.js ***!
  \**********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.8 Reflect.getPrototypeOf(target)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var getProto = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");

        $export($export.S, 'Reflect', {
            getPrototypeOf: function getPrototypeOf(target) {
                return getProto(anObject(target));
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.get.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.get.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.6 Reflect.get(target, propertyKey [, receiver])
        var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
        var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
        var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");

        function get(target, propertyKey /* , receiver */) {
            var receiver = arguments.length < 3 ? target : arguments[2];
            var desc, proto;
            if (anObject(target) === receiver) return target[propertyKey];
            if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
                ? desc.value
                : desc.get !== undefined
                    ? desc.get.call(receiver)
                    : undefined;
            if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
        }

        $export($export.S, 'Reflect', { get: get });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.has.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.has.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.9 Reflect.has(target, propertyKey)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Reflect', {
            has: function has(target, propertyKey) {
                return propertyKey in target;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.is-extensible.js":
    /*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.is-extensible.js ***!
  \*******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.10 Reflect.isExtensible(target)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var $isExtensible = Object.isExtensible;

        $export($export.S, 'Reflect', {
            isExtensible: function isExtensible(target) {
                anObject(target);
                return $isExtensible ? $isExtensible(target) : true;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.own-keys.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.own-keys.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.11 Reflect.ownKeys(target)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Reflect', { ownKeys: __webpack_require__(/*! ./_own-keys */ "./node_modules/core-js/modules/_own-keys.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.prevent-extensions.js":
    /*!************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.prevent-extensions.js ***!
  \************************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.12 Reflect.preventExtensions(target)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var $preventExtensions = Object.preventExtensions;

        $export($export.S, 'Reflect', {
            preventExtensions: function preventExtensions(target) {
                anObject(target);
                try {
                    if ($preventExtensions) $preventExtensions(target);
                    return true;
                } catch (e) {
                    return false;
                }
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.set-prototype-of.js":
    /*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.set-prototype-of.js ***!
  \**********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.14 Reflect.setPrototypeOf(target, proto)
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var setProto = __webpack_require__(/*! ./_set-proto */ "./node_modules/core-js/modules/_set-proto.js");

        if (setProto) $export($export.S, 'Reflect', {
            setPrototypeOf: function setPrototypeOf(target, proto) {
                setProto.check(target, proto);
                try {
                    setProto.set(target, proto);
                    return true;
                } catch (e) {
                    return false;
                }
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.reflect.set.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.set.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
        var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
        var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
        var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
        var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");

        function set(target, propertyKey, V /* , receiver */) {
            var receiver = arguments.length < 4 ? target : arguments[3];
            var ownDesc = gOPD.f(anObject(target), propertyKey);
            var existingDescriptor, proto;
            if (!ownDesc) {
                if (isObject(proto = getPrototypeOf(target))) {
                    return set(proto, propertyKey, V, receiver);
                }
                ownDesc = createDesc(0);
            }
            if (has(ownDesc, 'value')) {
                if (ownDesc.writable === false || !isObject(receiver)) return false;
                if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
                    if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
                    existingDescriptor.value = V;
                    dP.f(receiver, propertyKey, existingDescriptor);
                } else dP.f(receiver, propertyKey, createDesc(0, V));
                return true;
            }
            return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
        }

        $export($export.S, 'Reflect', { set: set });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.regexp.constructor.js":
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.constructor.js ***!
  \****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "./node_modules/core-js/modules/_inherit-if-required.js");
        var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
        var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
        var isRegExp = __webpack_require__(/*! ./_is-regexp */ "./node_modules/core-js/modules/_is-regexp.js");
        var $flags = __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js");
        var $RegExp = global.RegExp;
        var Base = $RegExp;
        var proto = $RegExp.prototype;
        var re1 = /a/g;
        var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
        var CORRECT_NEW = new $RegExp(re1) !== re1;

        if (__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && (!CORRECT_NEW || __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            re2[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('match')] = false;
            // RegExp constructor can alter flags and IsRegExp works correct with @@match
            return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
        }))) {
            $RegExp = function RegExp(p, f) {
                var tiRE = this instanceof $RegExp;
                var piRE = isRegExp(p);
                var fiU = f === undefined;
                return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
                    : inheritIfRequired(CORRECT_NEW
                        ? new Base(piRE && !fiU ? p.source : p, f)
                        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
                        , tiRE ? this : proto, $RegExp);
            };
            var proxy = function (key) {
                key in $RegExp || dP($RegExp, key, {
                    configurable: true,
                    get: function () { return Base[key]; },
                    set: function (it) { Base[key] = it; }
                });
            };
            for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
            proto.constructor = $RegExp;
            $RegExp.prototype = proto;
            __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(global, 'RegExp', $RegExp);
        }

        __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")('RegExp');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.regexp.exec.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.exec.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "./node_modules/core-js/modules/_regexp-exec.js");
        __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js")({
            target: 'RegExp',
            proto: true,
            forced: regexpExec !== /./.exec
        }, {
            exec: regexpExec
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.regexp.flags.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.flags.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
        if (__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && /./g.flags != 'g') __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f(RegExp.prototype, 'flags', {
            configurable: true,
            get: __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js")
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.regexp.match.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.match.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "./node_modules/core-js/modules/_advance-string-index.js");
        var regExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "./node_modules/core-js/modules/_regexp-exec-abstract.js");

// @@match logic
        __webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('match', 1, function (defined, MATCH, $match, maybeCallNative) {
            return [
                // `String.prototype.match` method
                // https://tc39.github.io/ecma262/#sec-string.prototype.match
                function match(regexp) {
                    var O = defined(this);
                    var fn = regexp == undefined ? undefined : regexp[MATCH];
                    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
                },
                // `RegExp.prototype[@@match]` method
                // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
                function (regexp) {
                    var res = maybeCallNative($match, regexp, this);
                    if (res.done) return res.value;
                    var rx = anObject(regexp);
                    var S = String(this);
                    if (!rx.global) return regExpExec(rx, S);
                    var fullUnicode = rx.unicode;
                    rx.lastIndex = 0;
                    var A = [];
                    var n = 0;
                    var result;
                    while ((result = regExpExec(rx, S)) !== null) {
                        var matchStr = String(result[0]);
                        A[n] = matchStr;
                        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
                        n++;
                    }
                    return n === 0 ? null : A;
                }
            ];
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.regexp.replace.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.replace.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
        var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "./node_modules/core-js/modules/_advance-string-index.js");
        var regExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "./node_modules/core-js/modules/_regexp-exec-abstract.js");
        var max = Math.max;
        var min = Math.min;
        var floor = Math.floor;
        var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
        var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

        var maybeToString = function (it) {
            return it === undefined ? it : String(it);
        };

// @@replace logic
        __webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
            return [
                // `String.prototype.replace` method
                // https://tc39.github.io/ecma262/#sec-string.prototype.replace
                function replace(searchValue, replaceValue) {
                    var O = defined(this);
                    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
                    return fn !== undefined
                        ? fn.call(searchValue, O, replaceValue)
                        : $replace.call(String(O), searchValue, replaceValue);
                },
                // `RegExp.prototype[@@replace]` method
                // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
                function (regexp, replaceValue) {
                    var res = maybeCallNative($replace, regexp, this, replaceValue);
                    if (res.done) return res.value;

                    var rx = anObject(regexp);
                    var S = String(this);
                    var functionalReplace = typeof replaceValue === 'function';
                    if (!functionalReplace) replaceValue = String(replaceValue);
                    var global = rx.global;
                    if (global) {
                        var fullUnicode = rx.unicode;
                        rx.lastIndex = 0;
                    }
                    var results = [];
                    while (true) {
                        var result = regExpExec(rx, S);
                        if (result === null) break;
                        results.push(result);
                        if (!global) break;
                        var matchStr = String(result[0]);
                        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
                    }
                    var accumulatedResult = '';
                    var nextSourcePosition = 0;
                    for (var i = 0; i < results.length; i++) {
                        result = results[i];
                        var matched = String(result[0]);
                        var position = max(min(toInteger(result.index), S.length), 0);
                        var captures = [];
                        // NOTE: This is equivalent to
                        //   captures = result.slice(1).map(maybeToString)
                        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
                        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
                        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
                        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
                        var namedCaptures = result.groups;
                        if (functionalReplace) {
                            var replacerArgs = [matched].concat(captures, position, S);
                            if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
                            var replacement = String(replaceValue.apply(undefined, replacerArgs));
                        } else {
                            replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
                        }
                        if (position >= nextSourcePosition) {
                            accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
                            nextSourcePosition = position + matched.length;
                        }
                    }
                    return accumulatedResult + S.slice(nextSourcePosition);
                }
            ];

            // https://tc39.github.io/ecma262/#sec-getsubstitution
            function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
                var tailPos = position + matched.length;
                var m = captures.length;
                var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
                if (namedCaptures !== undefined) {
                    namedCaptures = toObject(namedCaptures);
                    symbols = SUBSTITUTION_SYMBOLS;
                }
                return $replace.call(replacement, symbols, function (match, ch) {
                    var capture;
                    switch (ch.charAt(0)) {
                        case '$': return '$';
                        case '&': return matched;
                        case '`': return str.slice(0, position);
                        case "'": return str.slice(tailPos);
                        case '<':
                            capture = namedCaptures[ch.slice(1, -1)];
                            break;
                        default: // \d\d?
                            var n = +ch;
                            if (n === 0) return match;
                            if (n > m) {
                                var f = floor(n / 10);
                                if (f === 0) return match;
                                if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
                                return match;
                            }
                            capture = captures[n - 1];
                    }
                    return capture === undefined ? '' : capture;
                });
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.regexp.search.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.search.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var sameValue = __webpack_require__(/*! ./_same-value */ "./node_modules/core-js/modules/_same-value.js");
        var regExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "./node_modules/core-js/modules/_regexp-exec-abstract.js");

// @@search logic
        __webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
            return [
                // `String.prototype.search` method
                // https://tc39.github.io/ecma262/#sec-string.prototype.search
                function search(regexp) {
                    var O = defined(this);
                    var fn = regexp == undefined ? undefined : regexp[SEARCH];
                    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
                },
                // `RegExp.prototype[@@search]` method
                // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
                function (regexp) {
                    var res = maybeCallNative($search, regexp, this);
                    if (res.done) return res.value;
                    var rx = anObject(regexp);
                    var S = String(this);
                    var previousLastIndex = rx.lastIndex;
                    if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
                    var result = regExpExec(rx, S);
                    if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
                    return result === null ? -1 : result.index;
                }
            ];
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.regexp.split.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.split.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        var isRegExp = __webpack_require__(/*! ./_is-regexp */ "./node_modules/core-js/modules/_is-regexp.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
        var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "./node_modules/core-js/modules/_advance-string-index.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var callRegExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "./node_modules/core-js/modules/_regexp-exec-abstract.js");
        var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "./node_modules/core-js/modules/_regexp-exec.js");
        var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var $min = Math.min;
        var $push = [].push;
        var $SPLIT = 'split';
        var LENGTH = 'length';
        var LAST_INDEX = 'lastIndex';
        var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
        var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
        __webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
            var internalSplit;
            if (
                'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
                'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
                'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
                '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
                '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
                ''[$SPLIT](/.?/)[LENGTH]
            ) {
                // based on es5-shim implementation, need to rework it
                internalSplit = function (separator, limit) {
                    var string = String(this);
                    if (separator === undefined && limit === 0) return [];
                    // If `separator` is not a regex, use native split
                    if (!isRegExp(separator)) return $split.call(string, separator, limit);
                    var output = [];
                    var flags = (separator.ignoreCase ? 'i' : '') +
                        (separator.multiline ? 'm' : '') +
                        (separator.unicode ? 'u' : '') +
                        (separator.sticky ? 'y' : '');
                    var lastLastIndex = 0;
                    var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
                    // Make `global` and avoid `lastIndex` issues by working with a copy
                    var separatorCopy = new RegExp(separator.source, flags + 'g');
                    var match, lastIndex, lastLength;
                    while (match = regexpExec.call(separatorCopy, string)) {
                        lastIndex = separatorCopy[LAST_INDEX];
                        if (lastIndex > lastLastIndex) {
                            output.push(string.slice(lastLastIndex, match.index));
                            if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
                            lastLength = match[0][LENGTH];
                            lastLastIndex = lastIndex;
                            if (output[LENGTH] >= splitLimit) break;
                        }
                        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
                    }
                    if (lastLastIndex === string[LENGTH]) {
                        if (lastLength || !separatorCopy.test('')) output.push('');
                    } else output.push(string.slice(lastLastIndex));
                    return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
                };
                // Chakra, V8
            } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
                internalSplit = function (separator, limit) {
                    return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
                };
            } else {
                internalSplit = $split;
            }

            return [
                // `String.prototype.split` method
                // https://tc39.github.io/ecma262/#sec-string.prototype.split
                function split(separator, limit) {
                    var O = defined(this);
                    var splitter = separator == undefined ? undefined : separator[SPLIT];
                    return splitter !== undefined
                        ? splitter.call(separator, O, limit)
                        : internalSplit.call(String(O), separator, limit);
                },
                // `RegExp.prototype[@@split]` method
                // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
                //
                // NOTE: This cannot be properly polyfilled in engines that don't support
                // the 'y' flag.
                function (regexp, limit) {
                    var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
                    if (res.done) return res.value;

                    var rx = anObject(regexp);
                    var S = String(this);
                    var C = speciesConstructor(rx, RegExp);

                    var unicodeMatching = rx.unicode;
                    var flags = (rx.ignoreCase ? 'i' : '') +
                        (rx.multiline ? 'm' : '') +
                        (rx.unicode ? 'u' : '') +
                        (SUPPORTS_Y ? 'y' : 'g');

                    // ^(? + rx + ) is needed, in combination with some S slicing, to
                    // simulate the 'y' flag.
                    var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
                    var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
                    if (lim === 0) return [];
                    if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
                    var p = 0;
                    var q = 0;
                    var A = [];
                    while (q < S.length) {
                        splitter.lastIndex = SUPPORTS_Y ? q : 0;
                        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
                        var e;
                        if (
                            z === null ||
                            (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
                        ) {
                            q = advanceStringIndex(S, q, unicodeMatching);
                        } else {
                            A.push(S.slice(p, q));
                            if (A.length === lim) return A;
                            for (var i = 1; i <= z.length - 1; i++) {
                                A.push(z[i]);
                                if (A.length === lim) return A;
                            }
                            q = p = e;
                        }
                    }
                    A.push(S.slice(p));
                    return A;
                }
            ];
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.regexp.to-string.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.to-string.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        __webpack_require__(/*! ./es6.regexp.flags */ "./node_modules/core-js/modules/es6.regexp.flags.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var $flags = __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js");
        var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
        var TO_STRING = 'toString';
        var $toString = /./[TO_STRING];

        var define = function (fn) {
            __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(RegExp.prototype, TO_STRING, fn, true);
        };

// 21.2.5.14 RegExp.prototype.toString()
        if (__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
            define(function toString() {
                var R = anObject(this);
                return '/'.concat(R.source, '/',
                    'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
            });
// FF44- RegExp#toString has a wrong name
        } else if ($toString.name != TO_STRING) {
            define(function toString() {
                return $toString.call(this);
            });
        }


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.set.js":
    /*!*************************************************!*\
  !*** ./node_modules/core-js/modules/es6.set.js ***!
  \*************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var strong = __webpack_require__(/*! ./_collection-strong */ "./node_modules/core-js/modules/_collection-strong.js");
        var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
        var SET = 'Set';

// 23.2 Set Objects
        module.exports = __webpack_require__(/*! ./_collection */ "./node_modules/core-js/modules/_collection.js")(SET, function (get) {
            return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
        }, {
            // 23.2.3.1 Set.prototype.add(value)
            add: function add(value) {
                return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
            }
        }, strong);


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.anchor.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.anchor.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.2 String.prototype.anchor(name)
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('anchor', function (createHTML) {
            return function anchor(name) {
                return createHTML(this, 'a', 'name', name);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.big.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.big.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.3 String.prototype.big()
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('big', function (createHTML) {
            return function big() {
                return createHTML(this, 'big', '', '');
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.blink.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.blink.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.4 String.prototype.blink()
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('blink', function (createHTML) {
            return function blink() {
                return createHTML(this, 'blink', '', '');
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.bold.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.bold.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.5 String.prototype.bold()
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('bold', function (createHTML) {
            return function bold() {
                return createHTML(this, 'b', '', '');
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.code-point-at.js":
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.code-point-at.js ***!
  \******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/modules/_string-at.js")(false);
        $export($export.P, 'String', {
            // 21.1.3.3 String.prototype.codePointAt(pos)
            codePointAt: function codePointAt(pos) {
                return $at(this, pos);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.ends-with.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.ends-with.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var context = __webpack_require__(/*! ./_string-context */ "./node_modules/core-js/modules/_string-context.js");
        var ENDS_WITH = 'endsWith';
        var $endsWith = ''[ENDS_WITH];

        $export($export.P + $export.F * __webpack_require__(/*! ./_fails-is-regexp */ "./node_modules/core-js/modules/_fails-is-regexp.js")(ENDS_WITH), 'String', {
            endsWith: function endsWith(searchString /* , endPosition = @length */) {
                var that = context(this, searchString, ENDS_WITH);
                var endPosition = arguments.length > 1 ? arguments[1] : undefined;
                var len = toLength(that.length);
                var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
                var search = String(searchString);
                return $endsWith
                    ? $endsWith.call(that, search, end)
                    : that.slice(end - search.length, end) === search;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.fixed.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.fixed.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.6 String.prototype.fixed()
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('fixed', function (createHTML) {
            return function fixed() {
                return createHTML(this, 'tt', '', '');
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.fontcolor.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.fontcolor.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.7 String.prototype.fontcolor(color)
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('fontcolor', function (createHTML) {
            return function fontcolor(color) {
                return createHTML(this, 'font', 'color', color);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.fontsize.js":
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.fontsize.js ***!
  \*************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.8 String.prototype.fontsize(size)
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('fontsize', function (createHTML) {
            return function fontsize(size) {
                return createHTML(this, 'font', 'size', size);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.from-code-point.js":
    /*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.from-code-point.js ***!
  \********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
        var fromCharCode = String.fromCharCode;
        var $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
        $export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
            // 21.1.2.2 String.fromCodePoint(...codePoints)
            fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
                var res = [];
                var aLen = arguments.length;
                var i = 0;
                var code;
                while (aLen > i) {
                    code = +arguments[i++];
                    if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
                    res.push(code < 0x10000
                        ? fromCharCode(code)
                        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
                    );
                } return res.join('');
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.includes.js":
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.includes.js ***!
  \*************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var context = __webpack_require__(/*! ./_string-context */ "./node_modules/core-js/modules/_string-context.js");
        var INCLUDES = 'includes';

        $export($export.P + $export.F * __webpack_require__(/*! ./_fails-is-regexp */ "./node_modules/core-js/modules/_fails-is-regexp.js")(INCLUDES), 'String', {
            includes: function includes(searchString /* , position = 0 */) {
                return !!~context(this, searchString, INCLUDES)
                    .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.italics.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.italics.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.9 String.prototype.italics()
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('italics', function (createHTML) {
            return function italics() {
                return createHTML(this, 'i', '', '');
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.iterator.js":
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.iterator.js ***!
  \*************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
        __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/modules/_iter-define.js")(String, 'String', function (iterated) {
            this._t = String(iterated); // target
            this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
        }, function () {
            var O = this._t;
            var index = this._i;
            var point;
            if (index >= O.length) return { value: undefined, done: true };
            point = $at(O, index);
            this._i += point.length;
            return { value: point, done: false };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.link.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.link.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.10 String.prototype.link(url)
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('link', function (createHTML) {
            return function link(url) {
                return createHTML(this, 'a', 'href', url);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.raw.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.raw.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");

        $export($export.S, 'String', {
            // 21.1.2.4 String.raw(callSite, ...substitutions)
            raw: function raw(callSite) {
                var tpl = toIObject(callSite.raw);
                var len = toLength(tpl.length);
                var aLen = arguments.length;
                var res = [];
                var i = 0;
                while (len > i) {
                    res.push(String(tpl[i++]));
                    if (i < aLen) res.push(String(arguments[i]));
                } return res.join('');
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.repeat.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.repeat.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.P, 'String', {
            // 21.1.3.13 String.prototype.repeat(count)
            repeat: __webpack_require__(/*! ./_string-repeat */ "./node_modules/core-js/modules/_string-repeat.js")
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.small.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.small.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.11 String.prototype.small()
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('small', function (createHTML) {
            return function small() {
                return createHTML(this, 'small', '', '');
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.starts-with.js":
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.starts-with.js ***!
  \****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var context = __webpack_require__(/*! ./_string-context */ "./node_modules/core-js/modules/_string-context.js");
        var STARTS_WITH = 'startsWith';
        var $startsWith = ''[STARTS_WITH];

        $export($export.P + $export.F * __webpack_require__(/*! ./_fails-is-regexp */ "./node_modules/core-js/modules/_fails-is-regexp.js")(STARTS_WITH), 'String', {
            startsWith: function startsWith(searchString /* , position = 0 */) {
                var that = context(this, searchString, STARTS_WITH);
                var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
                var search = String(searchString);
                return $startsWith
                    ? $startsWith.call(that, search, index)
                    : that.slice(index, index + search.length) === search;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.strike.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.strike.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.12 String.prototype.strike()
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('strike', function (createHTML) {
            return function strike() {
                return createHTML(this, 'strike', '', '');
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.sub.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.sub.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.13 String.prototype.sub()
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('sub', function (createHTML) {
            return function sub() {
                return createHTML(this, 'sub', '', '');
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.sup.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.sup.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// B.2.3.14 String.prototype.sup()
        __webpack_require__(/*! ./_string-html */ "./node_modules/core-js/modules/_string-html.js")('sup', function (createHTML) {
            return function sup() {
                return createHTML(this, 'sup', '', '');
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.string.trim.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.trim.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// 21.1.3.25 String.prototype.trim()
        __webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js")('trim', function ($trim) {
            return function trim() {
                return $trim(this, 3);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.symbol.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es6.symbol.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// ECMAScript 6 symbols shim
        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
        var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
        var META = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").KEY;
        var $fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
        var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js");
        var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
        var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
        var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
        var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/modules/_wks-ext.js");
        var wksDefine = __webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/modules/_wks-define.js");
        var enumKeys = __webpack_require__(/*! ./_enum-keys */ "./node_modules/core-js/modules/_enum-keys.js");
        var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
        var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
        var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
        var _create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
        var gOPNExt = __webpack_require__(/*! ./_object-gopn-ext */ "./node_modules/core-js/modules/_object-gopn-ext.js");
        var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
        var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
        var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
        var gOPD = $GOPD.f;
        var dP = $DP.f;
        var gOPN = gOPNExt.f;
        var $Symbol = global.Symbol;
        var $JSON = global.JSON;
        var _stringify = $JSON && $JSON.stringify;
        var PROTOTYPE = 'prototype';
        var HIDDEN = wks('_hidden');
        var TO_PRIMITIVE = wks('toPrimitive');
        var isEnum = {}.propertyIsEnumerable;
        var SymbolRegistry = shared('symbol-registry');
        var AllSymbols = shared('symbols');
        var OPSymbols = shared('op-symbols');
        var ObjectProto = Object[PROTOTYPE];
        var USE_NATIVE = typeof $Symbol == 'function';
        var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
        var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
        var setSymbolDesc = DESCRIPTORS && $fails(function () {
            return _create(dP({}, 'a', {
                get: function () { return dP(this, 'a', { value: 7 }).a; }
            })).a != 7;
        }) ? function (it, key, D) {
            var protoDesc = gOPD(ObjectProto, key);
            if (protoDesc) delete ObjectProto[key];
            dP(it, key, D);
            if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
        } : dP;

        var wrap = function (tag) {
            var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
            sym._k = tag;
            return sym;
        };

        var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
            return typeof it == 'symbol';
        } : function (it) {
            return it instanceof $Symbol;
        };

        var $defineProperty = function defineProperty(it, key, D) {
            if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
            anObject(it);
            key = toPrimitive(key, true);
            anObject(D);
            if (has(AllSymbols, key)) {
                if (!D.enumerable) {
                    if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
                    it[HIDDEN][key] = true;
                } else {
                    if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
                    D = _create(D, { enumerable: createDesc(0, false) });
                } return setSymbolDesc(it, key, D);
            } return dP(it, key, D);
        };
        var $defineProperties = function defineProperties(it, P) {
            anObject(it);
            var keys = enumKeys(P = toIObject(P));
            var i = 0;
            var l = keys.length;
            var key;
            while (l > i) $defineProperty(it, key = keys[i++], P[key]);
            return it;
        };
        var $create = function create(it, P) {
            return P === undefined ? _create(it) : $defineProperties(_create(it), P);
        };
        var $propertyIsEnumerable = function propertyIsEnumerable(key) {
            var E = isEnum.call(this, key = toPrimitive(key, true));
            if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
            return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
        };
        var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
            it = toIObject(it);
            key = toPrimitive(key, true);
            if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
            var D = gOPD(it, key);
            if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
            return D;
        };
        var $getOwnPropertyNames = function getOwnPropertyNames(it) {
            var names = gOPN(toIObject(it));
            var result = [];
            var i = 0;
            var key;
            while (names.length > i) {
                if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
            } return result;
        };
        var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
            var IS_OP = it === ObjectProto;
            var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
            var result = [];
            var i = 0;
            var key;
            while (names.length > i) {
                if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
            } return result;
        };

// 19.4.1.1 Symbol([description])
        if (!USE_NATIVE) {
            $Symbol = function Symbol() {
                if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
                var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
                var $set = function (value) {
                    if (this === ObjectProto) $set.call(OPSymbols, value);
                    if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
                    setSymbolDesc(this, tag, createDesc(1, value));
                };
                if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
                return wrap(tag);
            };
            redefine($Symbol[PROTOTYPE], 'toString', function toString() {
                return this._k;
            });

            $GOPD.f = $getOwnPropertyDescriptor;
            $DP.f = $defineProperty;
            __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f = gOPNExt.f = $getOwnPropertyNames;
            __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js").f = $propertyIsEnumerable;
            __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js").f = $getOwnPropertySymbols;

            if (DESCRIPTORS && !__webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js")) {
                redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
            }

            wksExt.f = function (name) {
                return wrap(wks(name));
            };
        }

        $export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

        for (var es6Symbols = (
            // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
            'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
        ).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

        for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

        $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
            // 19.4.2.1 Symbol.for(key)
            'for': function (key) {
                return has(SymbolRegistry, key += '')
                    ? SymbolRegistry[key]
                    : SymbolRegistry[key] = $Symbol(key);
            },
            // 19.4.2.5 Symbol.keyFor(sym)
            keyFor: function keyFor(sym) {
                if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
                for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
            },
            useSetter: function () { setter = true; },
            useSimple: function () { setter = false; }
        });

        $export($export.S + $export.F * !USE_NATIVE, 'Object', {
            // 19.1.2.2 Object.create(O [, Properties])
            create: $create,
            // 19.1.2.4 Object.defineProperty(O, P, Attributes)
            defineProperty: $defineProperty,
            // 19.1.2.3 Object.defineProperties(O, Properties)
            defineProperties: $defineProperties,
            // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
            getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
            // 19.1.2.7 Object.getOwnPropertyNames(O)
            getOwnPropertyNames: $getOwnPropertyNames,
            // 19.1.2.8 Object.getOwnPropertySymbols(O)
            getOwnPropertySymbols: $getOwnPropertySymbols
        });

// 24.3.2 JSON.stringify(value [, replacer [, space]])
        $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
            var S = $Symbol();
            // MS Edge converts symbol values to JSON as {}
            // WebKit converts symbol values to JSON as null
            // V8 throws on boxed symbols
            return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
        })), 'JSON', {
            stringify: function stringify(it) {
                var args = [it];
                var i = 1;
                var replacer, $replacer;
                while (arguments.length > i) args.push(arguments[i++]);
                $replacer = replacer = args[1];
                if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
                if (!isArray(replacer)) replacer = function (key, value) {
                    if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
                    if (!isSymbol(value)) return value;
                };
                args[1] = replacer;
                return _stringify.apply($JSON, args);
            }
        });

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
        $Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
        setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
        setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
        setToStringTag(global.JSON, 'JSON', true);


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.typed.array-buffer.js":
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.array-buffer.js ***!
  \****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $typed = __webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js");
        var buffer = __webpack_require__(/*! ./_typed-buffer */ "./node_modules/core-js/modules/_typed-buffer.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var ArrayBuffer = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").ArrayBuffer;
        var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
        var $ArrayBuffer = buffer.ArrayBuffer;
        var $DataView = buffer.DataView;
        var $isView = $typed.ABV && ArrayBuffer.isView;
        var $slice = $ArrayBuffer.prototype.slice;
        var VIEW = $typed.VIEW;
        var ARRAY_BUFFER = 'ArrayBuffer';

        $export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

        $export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
            // 24.1.3.1 ArrayBuffer.isView(arg)
            isView: function isView(it) {
                return $isView && $isView(it) || isObject(it) && VIEW in it;
            }
        });

        $export($export.P + $export.U + $export.F * __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
            return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
        }), ARRAY_BUFFER, {
            // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
            slice: function slice(start, end) {
                if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
                var len = anObject(this).byteLength;
                var first = toAbsoluteIndex(start, len);
                var fin = toAbsoluteIndex(end === undefined ? len : end, len);
                var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
                var viewS = new $DataView(this);
                var viewT = new $DataView(result);
                var index = 0;
                while (first < fin) {
                    viewT.setUint8(index++, viewS.getUint8(first++));
                } return result;
            }
        });

        __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")(ARRAY_BUFFER);


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.typed.data-view.js":
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.data-view.js ***!
  \*************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        $export($export.G + $export.W + $export.F * !__webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js").ABV, {
            DataView: __webpack_require__(/*! ./_typed-buffer */ "./node_modules/core-js/modules/_typed-buffer.js").DataView
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.typed.float32-array.js":
    /*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.float32-array.js ***!
  \*****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Float32', 4, function (init) {
            return function Float32Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.typed.float64-array.js":
    /*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.float64-array.js ***!
  \*****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Float64', 8, function (init) {
            return function Float64Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.typed.int16-array.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.int16-array.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Int16', 2, function (init) {
            return function Int16Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.typed.int32-array.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.int32-array.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Int32', 4, function (init) {
            return function Int32Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.typed.int8-array.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.int8-array.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Int8', 1, function (init) {
            return function Int8Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.typed.uint16-array.js":
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint16-array.js ***!
  \****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Uint16', 2, function (init) {
            return function Uint16Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.typed.uint32-array.js":
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint32-array.js ***!
  \****************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Uint32', 4, function (init) {
            return function Uint32Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.typed.uint8-array.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint8-array.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Uint8', 1, function (init) {
            return function Uint8Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js":
    /*!***********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js ***!
  \***********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Uint8', 1, function (init) {
            return function Uint8ClampedArray(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        }, true);


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.weak-map.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.weak-map.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var each = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js")(0);
        var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
        var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js");
        var assign = __webpack_require__(/*! ./_object-assign */ "./node_modules/core-js/modules/_object-assign.js");
        var weak = __webpack_require__(/*! ./_collection-weak */ "./node_modules/core-js/modules/_collection-weak.js");
        var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
        var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
        var NATIVE_WEAK_MAP = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
        var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
        var WEAK_MAP = 'WeakMap';
        var getWeak = meta.getWeak;
        var isExtensible = Object.isExtensible;
        var uncaughtFrozenStore = weak.ufstore;
        var InternalMap;

        var wrapper = function (get) {
            return function WeakMap() {
                return get(this, arguments.length > 0 ? arguments[0] : undefined);
            };
        };

        var methods = {
            // 23.3.3.3 WeakMap.prototype.get(key)
            get: function get(key) {
                if (isObject(key)) {
                    var data = getWeak(key);
                    if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
                    return data ? data[this._i] : undefined;
                }
            },
            // 23.3.3.5 WeakMap.prototype.set(key, value)
            set: function set(key, value) {
                return weak.def(validate(this, WEAK_MAP), key, value);
            }
        };

// 23.3 WeakMap Objects
        var $WeakMap = module.exports = __webpack_require__(/*! ./_collection */ "./node_modules/core-js/modules/_collection.js")(WEAK_MAP, wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
        if (NATIVE_WEAK_MAP && IS_IE11) {
            InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
            assign(InternalMap.prototype, methods);
            meta.NEED = true;
            each(['delete', 'has', 'get', 'set'], function (key) {
                var proto = $WeakMap.prototype;
                var method = proto[key];
                redefine(proto, key, function (a, b) {
                    // store frozen objects on internal weakmap shim
                    if (isObject(a) && !isExtensible(a)) {
                        if (!this._f) this._f = new InternalMap();
                        var result = this._f[key](a, b);
                        return key == 'set' ? this : result;
                        // store all the rest on native weakmap
                    } return method.call(this, a, b);
                });
            });
        }


        /***/ }),

    /***/ "./node_modules/core-js/modules/es6.weak-set.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.weak-set.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var weak = __webpack_require__(/*! ./_collection-weak */ "./node_modules/core-js/modules/_collection-weak.js");
        var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
        var WEAK_SET = 'WeakSet';

// 23.4 WeakSet Objects
        __webpack_require__(/*! ./_collection */ "./node_modules/core-js/modules/_collection.js")(WEAK_SET, function (get) {
            return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
        }, {
            // 23.4.3.1 WeakSet.prototype.add(value)
            add: function add(value) {
                return weak.def(validate(this, WEAK_SET), value, true);
            }
        }, weak, false, true);


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.array.flat-map.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.array.flat-map.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var flattenIntoArray = __webpack_require__(/*! ./_flatten-into-array */ "./node_modules/core-js/modules/_flatten-into-array.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var arraySpeciesCreate = __webpack_require__(/*! ./_array-species-create */ "./node_modules/core-js/modules/_array-species-create.js");

        $export($export.P, 'Array', {
            flatMap: function flatMap(callbackfn /* , thisArg */) {
                var O = toObject(this);
                var sourceLen, A;
                aFunction(callbackfn);
                sourceLen = toLength(O.length);
                A = arraySpeciesCreate(O, 0);
                flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
                return A;
            }
        });

        __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('flatMap');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.array.flatten.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.array.flatten.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var flattenIntoArray = __webpack_require__(/*! ./_flatten-into-array */ "./node_modules/core-js/modules/_flatten-into-array.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
        var arraySpeciesCreate = __webpack_require__(/*! ./_array-species-create */ "./node_modules/core-js/modules/_array-species-create.js");

        $export($export.P, 'Array', {
            flatten: function flatten(/* depthArg = 1 */) {
                var depthArg = arguments[0];
                var O = toObject(this);
                var sourceLen = toLength(O.length);
                var A = arraySpeciesCreate(O, 0);
                flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
                return A;
            }
        });

        __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('flatten');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.array.includes.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.array.includes.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://github.com/tc39/Array.prototype.includes
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $includes = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js")(true);

        $export($export.P, 'Array', {
            includes: function includes(el /* , fromIndex = 0 */) {
                return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
            }
        });

        __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('includes');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.asap.js":
    /*!**************************************************!*\
  !*** ./node_modules/core-js/modules/es7.asap.js ***!
  \**************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var microtask = __webpack_require__(/*! ./_microtask */ "./node_modules/core-js/modules/_microtask.js")();
        var process = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").process;
        var isNode = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js")(process) == 'process';

        $export($export.G, {
            asap: function asap(fn) {
                var domain = isNode && process.domain;
                microtask(domain ? domain.bind(fn) : fn);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.error.is-error.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.error.is-error.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/ljharb/proposal-is-error
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");

        $export($export.S, 'Error', {
            isError: function isError(it) {
                return cof(it) === 'Error';
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.global.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es7.global.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-global
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.G, { global: __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.map.from.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es7.map.from.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
        __webpack_require__(/*! ./_set-collection-from */ "./node_modules/core-js/modules/_set-collection-from.js")('Map');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.map.of.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es7.map.of.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
        __webpack_require__(/*! ./_set-collection-of */ "./node_modules/core-js/modules/_set-collection-of.js")('Map');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.map.to-json.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.map.to-json.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.P + $export.R, 'Map', { toJSON: __webpack_require__(/*! ./_collection-to-json */ "./node_modules/core-js/modules/_collection-to-json.js")('Map') });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.clamp.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.clamp.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', {
            clamp: function clamp(x, lower, upper) {
                return Math.min(upper, Math.max(lower, x));
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.deg-per-rad.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.deg-per-rad.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', { DEG_PER_RAD: Math.PI / 180 });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.degrees.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.degrees.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var RAD_PER_DEG = 180 / Math.PI;

        $export($export.S, 'Math', {
            degrees: function degrees(radians) {
                return radians * RAD_PER_DEG;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.fscale.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.fscale.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var scale = __webpack_require__(/*! ./_math-scale */ "./node_modules/core-js/modules/_math-scale.js");
        var fround = __webpack_require__(/*! ./_math-fround */ "./node_modules/core-js/modules/_math-fround.js");

        $export($export.S, 'Math', {
            fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {
                return fround(scale(x, inLow, inHigh, outLow, outHigh));
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.iaddh.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.iaddh.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', {
            iaddh: function iaddh(x0, x1, y0, y1) {
                var $x0 = x0 >>> 0;
                var $x1 = x1 >>> 0;
                var $y0 = y0 >>> 0;
                return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.imulh.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.imulh.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', {
            imulh: function imulh(u, v) {
                var UINT16 = 0xffff;
                var $u = +u;
                var $v = +v;
                var u0 = $u & UINT16;
                var v0 = $v & UINT16;
                var u1 = $u >> 16;
                var v1 = $v >> 16;
                var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
                return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.isubh.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.isubh.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', {
            isubh: function isubh(x0, x1, y0, y1) {
                var $x0 = x0 >>> 0;
                var $x1 = x1 >>> 0;
                var $y0 = y0 >>> 0;
                return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.rad-per-deg.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.rad-per-deg.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', { RAD_PER_DEG: 180 / Math.PI });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.radians.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.radians.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var DEG_PER_RAD = Math.PI / 180;

        $export($export.S, 'Math', {
            radians: function radians(degrees) {
                return degrees * DEG_PER_RAD;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.scale.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.scale.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', { scale: __webpack_require__(/*! ./_math-scale */ "./node_modules/core-js/modules/_math-scale.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.signbit.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.signbit.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// http://jfbastien.github.io/papers/Math.signbit.html
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', { signbit: function signbit(x) {
                // eslint-disable-next-line no-self-compare
                return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.math.umulh.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.math.umulh.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'Math', {
            umulh: function umulh(u, v) {
                var UINT16 = 0xffff;
                var $u = +u;
                var $v = +v;
                var u0 = $u & UINT16;
                var v0 = $v & UINT16;
                var u1 = $u >>> 16;
                var v1 = $v >>> 16;
                var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
                return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.object.define-getter.js":
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.define-getter.js ***!
  \******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var $defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");

// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
        __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && $export($export.P + __webpack_require__(/*! ./_object-forced-pam */ "./node_modules/core-js/modules/_object-forced-pam.js"), 'Object', {
            __defineGetter__: function __defineGetter__(P, getter) {
                $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.object.define-setter.js":
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.define-setter.js ***!
  \******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var $defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");

// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
        __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && $export($export.P + __webpack_require__(/*! ./_object-forced-pam */ "./node_modules/core-js/modules/_object-forced-pam.js"), 'Object', {
            __defineSetter__: function __defineSetter__(P, setter) {
                $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.object.entries.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.entries.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $entries = __webpack_require__(/*! ./_object-to-array */ "./node_modules/core-js/modules/_object-to-array.js")(true);

        $export($export.S, 'Object', {
            entries: function entries(it) {
                return $entries(it);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js":
    /*!*********************************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js ***!
  \*********************************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-getownpropertydescriptors
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var ownKeys = __webpack_require__(/*! ./_own-keys */ "./node_modules/core-js/modules/_own-keys.js");
        var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
        var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
        var createProperty = __webpack_require__(/*! ./_create-property */ "./node_modules/core-js/modules/_create-property.js");

        $export($export.S, 'Object', {
            getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
                var O = toIObject(object);
                var getDesc = gOPD.f;
                var keys = ownKeys(O);
                var result = {};
                var i = 0;
                var key, desc;
                while (keys.length > i) {
                    desc = getDesc(O, key = keys[i++]);
                    if (desc !== undefined) createProperty(result, key, desc);
                }
                return result;
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.object.lookup-getter.js":
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.lookup-getter.js ***!
  \******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
        var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
        var getOwnPropertyDescriptor = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f;

// B.2.2.4 Object.prototype.__lookupGetter__(P)
        __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && $export($export.P + __webpack_require__(/*! ./_object-forced-pam */ "./node_modules/core-js/modules/_object-forced-pam.js"), 'Object', {
            __lookupGetter__: function __lookupGetter__(P) {
                var O = toObject(this);
                var K = toPrimitive(P, true);
                var D;
                do {
                    if (D = getOwnPropertyDescriptor(O, K)) return D.get;
                } while (O = getPrototypeOf(O));
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.object.lookup-setter.js":
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.lookup-setter.js ***!
  \******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
        var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
        var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
        var getOwnPropertyDescriptor = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f;

// B.2.2.5 Object.prototype.__lookupSetter__(P)
        __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && $export($export.P + __webpack_require__(/*! ./_object-forced-pam */ "./node_modules/core-js/modules/_object-forced-pam.js"), 'Object', {
            __lookupSetter__: function __lookupSetter__(P) {
                var O = toObject(this);
                var K = toPrimitive(P, true);
                var D;
                do {
                    if (D = getOwnPropertyDescriptor(O, K)) return D.set;
                } while (O = getPrototypeOf(O));
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.object.values.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.values.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $values = __webpack_require__(/*! ./_object-to-array */ "./node_modules/core-js/modules/_object-to-array.js")(false);

        $export($export.S, 'Object', {
            values: function values(it) {
                return $values(it);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.observable.js":
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.observable.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://github.com/zenparsing/es-observable
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
        var microtask = __webpack_require__(/*! ./_microtask */ "./node_modules/core-js/modules/_microtask.js")();
        var OBSERVABLE = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('observable');
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
        var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
        var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
        var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
        var RETURN = forOf.RETURN;

        var getMethod = function (fn) {
            return fn == null ? undefined : aFunction(fn);
        };

        var cleanupSubscription = function (subscription) {
            var cleanup = subscription._c;
            if (cleanup) {
                subscription._c = undefined;
                cleanup();
            }
        };

        var subscriptionClosed = function (subscription) {
            return subscription._o === undefined;
        };

        var closeSubscription = function (subscription) {
            if (!subscriptionClosed(subscription)) {
                subscription._o = undefined;
                cleanupSubscription(subscription);
            }
        };

        var Subscription = function (observer, subscriber) {
            anObject(observer);
            this._c = undefined;
            this._o = observer;
            observer = new SubscriptionObserver(this);
            try {
                var cleanup = subscriber(observer);
                var subscription = cleanup;
                if (cleanup != null) {
                    if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };
                    else aFunction(cleanup);
                    this._c = cleanup;
                }
            } catch (e) {
                observer.error(e);
                return;
            } if (subscriptionClosed(this)) cleanupSubscription(this);
        };

        Subscription.prototype = redefineAll({}, {
            unsubscribe: function unsubscribe() { closeSubscription(this); }
        });

        var SubscriptionObserver = function (subscription) {
            this._s = subscription;
        };

        SubscriptionObserver.prototype = redefineAll({}, {
            next: function next(value) {
                var subscription = this._s;
                if (!subscriptionClosed(subscription)) {
                    var observer = subscription._o;
                    try {
                        var m = getMethod(observer.next);
                        if (m) return m.call(observer, value);
                    } catch (e) {
                        try {
                            closeSubscription(subscription);
                        } finally {
                            throw e;
                        }
                    }
                }
            },
            error: function error(value) {
                var subscription = this._s;
                if (subscriptionClosed(subscription)) throw value;
                var observer = subscription._o;
                subscription._o = undefined;
                try {
                    var m = getMethod(observer.error);
                    if (!m) throw value;
                    value = m.call(observer, value);
                } catch (e) {
                    try {
                        cleanupSubscription(subscription);
                    } finally {
                        throw e;
                    }
                } cleanupSubscription(subscription);
                return value;
            },
            complete: function complete(value) {
                var subscription = this._s;
                if (!subscriptionClosed(subscription)) {
                    var observer = subscription._o;
                    subscription._o = undefined;
                    try {
                        var m = getMethod(observer.complete);
                        value = m ? m.call(observer, value) : undefined;
                    } catch (e) {
                        try {
                            cleanupSubscription(subscription);
                        } finally {
                            throw e;
                        }
                    } cleanupSubscription(subscription);
                    return value;
                }
            }
        });

        var $Observable = function Observable(subscriber) {
            anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
        };

        redefineAll($Observable.prototype, {
            subscribe: function subscribe(observer) {
                return new Subscription(observer, this._f);
            },
            forEach: function forEach(fn) {
                var that = this;
                return new (core.Promise || global.Promise)(function (resolve, reject) {
                    aFunction(fn);
                    var subscription = that.subscribe({
                        next: function (value) {
                            try {
                                return fn(value);
                            } catch (e) {
                                reject(e);
                                subscription.unsubscribe();
                            }
                        },
                        error: reject,
                        complete: resolve
                    });
                });
            }
        });

        redefineAll($Observable, {
            from: function from(x) {
                var C = typeof this === 'function' ? this : $Observable;
                var method = getMethod(anObject(x)[OBSERVABLE]);
                if (method) {
                    var observable = anObject(method.call(x));
                    return observable.constructor === C ? observable : new C(function (observer) {
                        return observable.subscribe(observer);
                    });
                }
                return new C(function (observer) {
                    var done = false;
                    microtask(function () {
                        if (!done) {
                            try {
                                if (forOf(x, false, function (it) {
                                    observer.next(it);
                                    if (done) return RETURN;
                                }) === RETURN) return;
                            } catch (e) {
                                if (done) throw e;
                                observer.error(e);
                                return;
                            } observer.complete();
                        }
                    });
                    return function () { done = true; };
                });
            },
            of: function of() {
                for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];
                return new (typeof this === 'function' ? this : $Observable)(function (observer) {
                    var done = false;
                    microtask(function () {
                        if (!done) {
                            for (var j = 0; j < items.length; ++j) {
                                observer.next(items[j]);
                                if (done) return;
                            } observer.complete();
                        }
                    });
                    return function () { done = true; };
                });
            }
        });

        hide($Observable.prototype, OBSERVABLE, function () { return this; });

        $export($export.G, { Observable: $Observable });

        __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")('Observable');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.promise.finally.js":
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.promise.finally.js ***!
  \*************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
// https://github.com/tc39/proposal-promise-finally

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
        var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/modules/_promise-resolve.js");

        $export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
                var C = speciesConstructor(this, core.Promise || global.Promise);
                var isFunction = typeof onFinally == 'function';
                return this.then(
                    isFunction ? function (x) {
                        return promiseResolve(C, onFinally()).then(function () { return x; });
                    } : onFinally,
                    isFunction ? function (e) {
                        return promiseResolve(C, onFinally()).then(function () { throw e; });
                    } : onFinally
                );
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.promise.try.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.promise.try.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://github.com/tc39/proposal-promise-try
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/modules/_new-promise-capability.js");
        var perform = __webpack_require__(/*! ./_perform */ "./node_modules/core-js/modules/_perform.js");

        $export($export.S, 'Promise', { 'try': function (callbackfn) {
                var promiseCapability = newPromiseCapability.f(this);
                var result = perform(callbackfn);
                (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
                return promiseCapability.promise;
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.reflect.define-metadata.js":
    /*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.reflect.define-metadata.js ***!
  \*********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var metadata = __webpack_require__(/*! ./_metadata */ "./node_modules/core-js/modules/_metadata.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var toMetaKey = metadata.key;
        var ordinaryDefineOwnMetadata = metadata.set;

        metadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
                ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.reflect.delete-metadata.js":
    /*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.reflect.delete-metadata.js ***!
  \*********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var metadata = __webpack_require__(/*! ./_metadata */ "./node_modules/core-js/modules/_metadata.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var toMetaKey = metadata.key;
        var getOrCreateMetadataMap = metadata.map;
        var store = metadata.store;

        metadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {
                var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);
                var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
                if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
                if (metadataMap.size) return true;
                var targetMetadata = store.get(target);
                targetMetadata['delete'](targetKey);
                return !!targetMetadata.size || store['delete'](target);
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.reflect.get-metadata-keys.js":
    /*!***********************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.reflect.get-metadata-keys.js ***!
  \***********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var Set = __webpack_require__(/*! ./es6.set */ "./node_modules/core-js/modules/es6.set.js");
        var from = __webpack_require__(/*! ./_array-from-iterable */ "./node_modules/core-js/modules/_array-from-iterable.js");
        var metadata = __webpack_require__(/*! ./_metadata */ "./node_modules/core-js/modules/_metadata.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
        var ordinaryOwnMetadataKeys = metadata.keys;
        var toMetaKey = metadata.key;

        var ordinaryMetadataKeys = function (O, P) {
            var oKeys = ordinaryOwnMetadataKeys(O, P);
            var parent = getPrototypeOf(O);
            if (parent === null) return oKeys;
            var pKeys = ordinaryMetadataKeys(parent, P);
            return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
        };

        metadata.exp({ getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {
                return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.reflect.get-metadata.js":
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.reflect.get-metadata.js ***!
  \******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var metadata = __webpack_require__(/*! ./_metadata */ "./node_modules/core-js/modules/_metadata.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
        var ordinaryHasOwnMetadata = metadata.has;
        var ordinaryGetOwnMetadata = metadata.get;
        var toMetaKey = metadata.key;

        var ordinaryGetMetadata = function (MetadataKey, O, P) {
            var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
            var parent = getPrototypeOf(O);
            return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
        };

        metadata.exp({ getMetadata: function getMetadata(metadataKey, target /* , targetKey */) {
                return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js":
    /*!***************************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js ***!
  \***************************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var metadata = __webpack_require__(/*! ./_metadata */ "./node_modules/core-js/modules/_metadata.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var ordinaryOwnMetadataKeys = metadata.keys;
        var toMetaKey = metadata.key;

        metadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */) {
                return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.reflect.get-own-metadata.js":
    /*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.reflect.get-own-metadata.js ***!
  \**********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var metadata = __webpack_require__(/*! ./_metadata */ "./node_modules/core-js/modules/_metadata.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var ordinaryGetOwnMetadata = metadata.get;
        var toMetaKey = metadata.key;

        metadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */) {
                return ordinaryGetOwnMetadata(metadataKey, anObject(target)
                    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.reflect.has-metadata.js":
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.reflect.has-metadata.js ***!
  \******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var metadata = __webpack_require__(/*! ./_metadata */ "./node_modules/core-js/modules/_metadata.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
        var ordinaryHasOwnMetadata = metadata.has;
        var toMetaKey = metadata.key;

        var ordinaryHasMetadata = function (MetadataKey, O, P) {
            var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn) return true;
            var parent = getPrototypeOf(O);
            return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
        };

        metadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */) {
                return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.reflect.has-own-metadata.js":
    /*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.reflect.has-own-metadata.js ***!
  \**********************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var metadata = __webpack_require__(/*! ./_metadata */ "./node_modules/core-js/modules/_metadata.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var ordinaryHasOwnMetadata = metadata.has;
        var toMetaKey = metadata.key;

        metadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {
                return ordinaryHasOwnMetadata(metadataKey, anObject(target)
                    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.reflect.metadata.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.reflect.metadata.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $metadata = __webpack_require__(/*! ./_metadata */ "./node_modules/core-js/modules/_metadata.js");
        var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
        var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
        var toMetaKey = $metadata.key;
        var ordinaryDefineOwnMetadata = $metadata.set;

        $metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {
                return function decorator(target, targetKey) {
                    ordinaryDefineOwnMetadata(
                        metadataKey, metadataValue,
                        (targetKey !== undefined ? anObject : aFunction)(target),
                        toMetaKey(targetKey)
                    );
                };
            } });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.set.from.js":
    /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es7.set.from.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
        __webpack_require__(/*! ./_set-collection-from */ "./node_modules/core-js/modules/_set-collection-from.js")('Set');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.set.of.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es7.set.of.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
        __webpack_require__(/*! ./_set-collection-of */ "./node_modules/core-js/modules/_set-collection-of.js")('Set');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.set.to-json.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.set.to-json.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.P + $export.R, 'Set', { toJSON: __webpack_require__(/*! ./_collection-to-json */ "./node_modules/core-js/modules/_collection-to-json.js")('Set') });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.string.at.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.at.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://github.com/mathiasbynens/String.prototype.at
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/modules/_string-at.js")(true);

        $export($export.P, 'String', {
            at: function at(pos) {
                return $at(this, pos);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.string.match-all.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.match-all.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://tc39.github.io/String.prototype.matchAll/
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
        var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
        var isRegExp = __webpack_require__(/*! ./_is-regexp */ "./node_modules/core-js/modules/_is-regexp.js");
        var getFlags = __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js");
        var RegExpProto = RegExp.prototype;

        var $RegExpStringIterator = function (regexp, string) {
            this._r = regexp;
            this._s = string;
        };

        __webpack_require__(/*! ./_iter-create */ "./node_modules/core-js/modules/_iter-create.js")($RegExpStringIterator, 'RegExp String', function next() {
            var match = this._r.exec(this._s);
            return { value: match, done: match === null };
        });

        $export($export.P, 'String', {
            matchAll: function matchAll(regexp) {
                defined(this);
                if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
                var S = String(this);
                var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);
                var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
                rx.lastIndex = toLength(regexp.lastIndex);
                return new $RegExpStringIterator(rx, S);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.string.pad-end.js":
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.pad-end.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://github.com/tc39/proposal-string-pad-start-end
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $pad = __webpack_require__(/*! ./_string-pad */ "./node_modules/core-js/modules/_string-pad.js");
        var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/modules/_user-agent.js");

// https://github.com/zloirock/core-js/issues/280
        var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

        $export($export.P + $export.F * WEBKIT_BUG, 'String', {
            padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
                return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.string.pad-start.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.pad-start.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://github.com/tc39/proposal-string-pad-start-end
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $pad = __webpack_require__(/*! ./_string-pad */ "./node_modules/core-js/modules/_string-pad.js");
        var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/modules/_user-agent.js");

// https://github.com/zloirock/core-js/issues/280
        var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

        $export($export.P + $export.F * WEBKIT_BUG, 'String', {
            padStart: function padStart(maxLength /* , fillString = ' ' */) {
                return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
            }
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.string.trim-left.js":
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.trim-left.js ***!
  \**************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
        __webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js")('trimLeft', function ($trim) {
            return function trimLeft() {
                return $trim(this, 1);
            };
        }, 'trimStart');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.string.trim-right.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.trim-right.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
        __webpack_require__(/*! ./_string-trim */ "./node_modules/core-js/modules/_string-trim.js")('trimRight', function ($trim) {
            return function trimRight() {
                return $trim(this, 2);
            };
        }, 'trimEnd');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.symbol.async-iterator.js":
    /*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.symbol.async-iterator.js ***!
  \*******************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/modules/_wks-define.js")('asyncIterator');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.symbol.observable.js":
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.symbol.observable.js ***!
  \***************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/modules/_wks-define.js")('observable');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.system.global.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.system.global.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-global
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

        $export($export.S, 'System', { global: __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js") });


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.weak-map.from.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.weak-map.from.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
        __webpack_require__(/*! ./_set-collection-from */ "./node_modules/core-js/modules/_set-collection-from.js")('WeakMap');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.weak-map.of.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.weak-map.of.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
        __webpack_require__(/*! ./_set-collection-of */ "./node_modules/core-js/modules/_set-collection-of.js")('WeakMap');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.weak-set.from.js":
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.weak-set.from.js ***!
  \***********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from
        __webpack_require__(/*! ./_set-collection-from */ "./node_modules/core-js/modules/_set-collection-from.js")('WeakSet');


        /***/ }),

    /***/ "./node_modules/core-js/modules/es7.weak-set.of.js":
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.weak-set.of.js ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of
        __webpack_require__(/*! ./_set-collection-of */ "./node_modules/core-js/modules/_set-collection-of.js")('WeakSet');


        /***/ }),

    /***/ "./node_modules/core-js/modules/web.dom.iterable.js":
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom.iterable.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $iterators = __webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
        var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
        var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
        var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
        var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
        var ITERATOR = wks('iterator');
        var TO_STRING_TAG = wks('toStringTag');
        var ArrayValues = Iterators.Array;

        var DOMIterables = {
            CSSRuleList: true, // TODO: Not spec compliant, should be false.
            CSSStyleDeclaration: false,
            CSSValueList: false,
            ClientRectList: false,
            DOMRectList: false,
            DOMStringList: false,
            DOMTokenList: true,
            DataTransferItemList: false,
            FileList: false,
            HTMLAllCollection: false,
            HTMLCollection: false,
            HTMLFormElement: false,
            HTMLSelectElement: false,
            MediaList: true, // TODO: Not spec compliant, should be false.
            MimeTypeArray: false,
            NamedNodeMap: false,
            NodeList: true,
            PaintRequestList: false,
            Plugin: false,
            PluginArray: false,
            SVGLengthList: false,
            SVGNumberList: false,
            SVGPathSegList: false,
            SVGPointList: false,
            SVGStringList: false,
            SVGTransformList: false,
            SourceBufferList: false,
            StyleSheetList: true, // TODO: Not spec compliant, should be false.
            TextTrackCueList: false,
            TextTrackList: false,
            TouchList: false
        };

        for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
            var NAME = collections[i];
            var explicit = DOMIterables[NAME];
            var Collection = global[NAME];
            var proto = Collection && Collection.prototype;
            var key;
            if (proto) {
                if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
                if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
                Iterators[NAME] = ArrayValues;
                if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
            }
        }


        /***/ }),

    /***/ "./node_modules/core-js/modules/web.immediate.js":
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/web.immediate.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var $task = __webpack_require__(/*! ./_task */ "./node_modules/core-js/modules/_task.js");
        $export($export.G + $export.B, {
            setImmediate: $task.set,
            clearImmediate: $task.clear
        });


        /***/ }),

    /***/ "./node_modules/core-js/modules/web.timers.js":
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/web.timers.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

// ie9- setTimeout & setInterval additional parameters fix
        var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
        var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
        var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/modules/_user-agent.js");
        var slice = [].slice;
        var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
        var wrap = function (set) {
            return function (fn, time /* , ...args */) {
                var boundArgs = arguments.length > 2;
                var args = boundArgs ? slice.call(arguments, 2) : false;
                return set(boundArgs ? function () {
                    // eslint-disable-next-line no-new-func
                    (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
                } : fn, time);
            };
        };
        $export($export.G + $export.B + $export.F * MSIE, {
            setTimeout: wrap(global.setTimeout),
            setInterval: wrap(global.setInterval)
        });


        /***/ }),

    /***/ "./node_modules/core-js/shim.js":
    /*!**************************************!*\
  !*** ./node_modules/core-js/shim.js ***!
  \**************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! ./modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");
        __webpack_require__(/*! ./modules/es6.object.create */ "./node_modules/core-js/modules/es6.object.create.js");
        __webpack_require__(/*! ./modules/es6.object.define-property */ "./node_modules/core-js/modules/es6.object.define-property.js");
        __webpack_require__(/*! ./modules/es6.object.define-properties */ "./node_modules/core-js/modules/es6.object.define-properties.js");
        __webpack_require__(/*! ./modules/es6.object.get-own-property-descriptor */ "./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js");
        __webpack_require__(/*! ./modules/es6.object.get-prototype-of */ "./node_modules/core-js/modules/es6.object.get-prototype-of.js");
        __webpack_require__(/*! ./modules/es6.object.keys */ "./node_modules/core-js/modules/es6.object.keys.js");
        __webpack_require__(/*! ./modules/es6.object.get-own-property-names */ "./node_modules/core-js/modules/es6.object.get-own-property-names.js");
        __webpack_require__(/*! ./modules/es6.object.freeze */ "./node_modules/core-js/modules/es6.object.freeze.js");
        __webpack_require__(/*! ./modules/es6.object.seal */ "./node_modules/core-js/modules/es6.object.seal.js");
        __webpack_require__(/*! ./modules/es6.object.prevent-extensions */ "./node_modules/core-js/modules/es6.object.prevent-extensions.js");
        __webpack_require__(/*! ./modules/es6.object.is-frozen */ "./node_modules/core-js/modules/es6.object.is-frozen.js");
        __webpack_require__(/*! ./modules/es6.object.is-sealed */ "./node_modules/core-js/modules/es6.object.is-sealed.js");
        __webpack_require__(/*! ./modules/es6.object.is-extensible */ "./node_modules/core-js/modules/es6.object.is-extensible.js");
        __webpack_require__(/*! ./modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");
        __webpack_require__(/*! ./modules/es6.object.is */ "./node_modules/core-js/modules/es6.object.is.js");
        __webpack_require__(/*! ./modules/es6.object.set-prototype-of */ "./node_modules/core-js/modules/es6.object.set-prototype-of.js");
        __webpack_require__(/*! ./modules/es6.object.to-string */ "./node_modules/core-js/modules/es6.object.to-string.js");
        __webpack_require__(/*! ./modules/es6.function.bind */ "./node_modules/core-js/modules/es6.function.bind.js");
        __webpack_require__(/*! ./modules/es6.function.name */ "./node_modules/core-js/modules/es6.function.name.js");
        __webpack_require__(/*! ./modules/es6.function.has-instance */ "./node_modules/core-js/modules/es6.function.has-instance.js");
        __webpack_require__(/*! ./modules/es6.parse-int */ "./node_modules/core-js/modules/es6.parse-int.js");
        __webpack_require__(/*! ./modules/es6.parse-float */ "./node_modules/core-js/modules/es6.parse-float.js");
        __webpack_require__(/*! ./modules/es6.number.constructor */ "./node_modules/core-js/modules/es6.number.constructor.js");
        __webpack_require__(/*! ./modules/es6.number.to-fixed */ "./node_modules/core-js/modules/es6.number.to-fixed.js");
        __webpack_require__(/*! ./modules/es6.number.to-precision */ "./node_modules/core-js/modules/es6.number.to-precision.js");
        __webpack_require__(/*! ./modules/es6.number.epsilon */ "./node_modules/core-js/modules/es6.number.epsilon.js");
        __webpack_require__(/*! ./modules/es6.number.is-finite */ "./node_modules/core-js/modules/es6.number.is-finite.js");
        __webpack_require__(/*! ./modules/es6.number.is-integer */ "./node_modules/core-js/modules/es6.number.is-integer.js");
        __webpack_require__(/*! ./modules/es6.number.is-nan */ "./node_modules/core-js/modules/es6.number.is-nan.js");
        __webpack_require__(/*! ./modules/es6.number.is-safe-integer */ "./node_modules/core-js/modules/es6.number.is-safe-integer.js");
        __webpack_require__(/*! ./modules/es6.number.max-safe-integer */ "./node_modules/core-js/modules/es6.number.max-safe-integer.js");
        __webpack_require__(/*! ./modules/es6.number.min-safe-integer */ "./node_modules/core-js/modules/es6.number.min-safe-integer.js");
        __webpack_require__(/*! ./modules/es6.number.parse-float */ "./node_modules/core-js/modules/es6.number.parse-float.js");
        __webpack_require__(/*! ./modules/es6.number.parse-int */ "./node_modules/core-js/modules/es6.number.parse-int.js");
        __webpack_require__(/*! ./modules/es6.math.acosh */ "./node_modules/core-js/modules/es6.math.acosh.js");
        __webpack_require__(/*! ./modules/es6.math.asinh */ "./node_modules/core-js/modules/es6.math.asinh.js");
        __webpack_require__(/*! ./modules/es6.math.atanh */ "./node_modules/core-js/modules/es6.math.atanh.js");
        __webpack_require__(/*! ./modules/es6.math.cbrt */ "./node_modules/core-js/modules/es6.math.cbrt.js");
        __webpack_require__(/*! ./modules/es6.math.clz32 */ "./node_modules/core-js/modules/es6.math.clz32.js");
        __webpack_require__(/*! ./modules/es6.math.cosh */ "./node_modules/core-js/modules/es6.math.cosh.js");
        __webpack_require__(/*! ./modules/es6.math.expm1 */ "./node_modules/core-js/modules/es6.math.expm1.js");
        __webpack_require__(/*! ./modules/es6.math.fround */ "./node_modules/core-js/modules/es6.math.fround.js");
        __webpack_require__(/*! ./modules/es6.math.hypot */ "./node_modules/core-js/modules/es6.math.hypot.js");
        __webpack_require__(/*! ./modules/es6.math.imul */ "./node_modules/core-js/modules/es6.math.imul.js");
        __webpack_require__(/*! ./modules/es6.math.log10 */ "./node_modules/core-js/modules/es6.math.log10.js");
        __webpack_require__(/*! ./modules/es6.math.log1p */ "./node_modules/core-js/modules/es6.math.log1p.js");
        __webpack_require__(/*! ./modules/es6.math.log2 */ "./node_modules/core-js/modules/es6.math.log2.js");
        __webpack_require__(/*! ./modules/es6.math.sign */ "./node_modules/core-js/modules/es6.math.sign.js");
        __webpack_require__(/*! ./modules/es6.math.sinh */ "./node_modules/core-js/modules/es6.math.sinh.js");
        __webpack_require__(/*! ./modules/es6.math.tanh */ "./node_modules/core-js/modules/es6.math.tanh.js");
        __webpack_require__(/*! ./modules/es6.math.trunc */ "./node_modules/core-js/modules/es6.math.trunc.js");
        __webpack_require__(/*! ./modules/es6.string.from-code-point */ "./node_modules/core-js/modules/es6.string.from-code-point.js");
        __webpack_require__(/*! ./modules/es6.string.raw */ "./node_modules/core-js/modules/es6.string.raw.js");
        __webpack_require__(/*! ./modules/es6.string.trim */ "./node_modules/core-js/modules/es6.string.trim.js");
        __webpack_require__(/*! ./modules/es6.string.iterator */ "./node_modules/core-js/modules/es6.string.iterator.js");
        __webpack_require__(/*! ./modules/es6.string.code-point-at */ "./node_modules/core-js/modules/es6.string.code-point-at.js");
        __webpack_require__(/*! ./modules/es6.string.ends-with */ "./node_modules/core-js/modules/es6.string.ends-with.js");
        __webpack_require__(/*! ./modules/es6.string.includes */ "./node_modules/core-js/modules/es6.string.includes.js");
        __webpack_require__(/*! ./modules/es6.string.repeat */ "./node_modules/core-js/modules/es6.string.repeat.js");
        __webpack_require__(/*! ./modules/es6.string.starts-with */ "./node_modules/core-js/modules/es6.string.starts-with.js");
        __webpack_require__(/*! ./modules/es6.string.anchor */ "./node_modules/core-js/modules/es6.string.anchor.js");
        __webpack_require__(/*! ./modules/es6.string.big */ "./node_modules/core-js/modules/es6.string.big.js");
        __webpack_require__(/*! ./modules/es6.string.blink */ "./node_modules/core-js/modules/es6.string.blink.js");
        __webpack_require__(/*! ./modules/es6.string.bold */ "./node_modules/core-js/modules/es6.string.bold.js");
        __webpack_require__(/*! ./modules/es6.string.fixed */ "./node_modules/core-js/modules/es6.string.fixed.js");
        __webpack_require__(/*! ./modules/es6.string.fontcolor */ "./node_modules/core-js/modules/es6.string.fontcolor.js");
        __webpack_require__(/*! ./modules/es6.string.fontsize */ "./node_modules/core-js/modules/es6.string.fontsize.js");
        __webpack_require__(/*! ./modules/es6.string.italics */ "./node_modules/core-js/modules/es6.string.italics.js");
        __webpack_require__(/*! ./modules/es6.string.link */ "./node_modules/core-js/modules/es6.string.link.js");
        __webpack_require__(/*! ./modules/es6.string.small */ "./node_modules/core-js/modules/es6.string.small.js");
        __webpack_require__(/*! ./modules/es6.string.strike */ "./node_modules/core-js/modules/es6.string.strike.js");
        __webpack_require__(/*! ./modules/es6.string.sub */ "./node_modules/core-js/modules/es6.string.sub.js");
        __webpack_require__(/*! ./modules/es6.string.sup */ "./node_modules/core-js/modules/es6.string.sup.js");
        __webpack_require__(/*! ./modules/es6.date.now */ "./node_modules/core-js/modules/es6.date.now.js");
        __webpack_require__(/*! ./modules/es6.date.to-json */ "./node_modules/core-js/modules/es6.date.to-json.js");
        __webpack_require__(/*! ./modules/es6.date.to-iso-string */ "./node_modules/core-js/modules/es6.date.to-iso-string.js");
        __webpack_require__(/*! ./modules/es6.date.to-string */ "./node_modules/core-js/modules/es6.date.to-string.js");
        __webpack_require__(/*! ./modules/es6.date.to-primitive */ "./node_modules/core-js/modules/es6.date.to-primitive.js");
        __webpack_require__(/*! ./modules/es6.array.is-array */ "./node_modules/core-js/modules/es6.array.is-array.js");
        __webpack_require__(/*! ./modules/es6.array.from */ "./node_modules/core-js/modules/es6.array.from.js");
        __webpack_require__(/*! ./modules/es6.array.of */ "./node_modules/core-js/modules/es6.array.of.js");
        __webpack_require__(/*! ./modules/es6.array.join */ "./node_modules/core-js/modules/es6.array.join.js");
        __webpack_require__(/*! ./modules/es6.array.slice */ "./node_modules/core-js/modules/es6.array.slice.js");
        __webpack_require__(/*! ./modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");
        __webpack_require__(/*! ./modules/es6.array.for-each */ "./node_modules/core-js/modules/es6.array.for-each.js");
        __webpack_require__(/*! ./modules/es6.array.map */ "./node_modules/core-js/modules/es6.array.map.js");
        __webpack_require__(/*! ./modules/es6.array.filter */ "./node_modules/core-js/modules/es6.array.filter.js");
        __webpack_require__(/*! ./modules/es6.array.some */ "./node_modules/core-js/modules/es6.array.some.js");
        __webpack_require__(/*! ./modules/es6.array.every */ "./node_modules/core-js/modules/es6.array.every.js");
        __webpack_require__(/*! ./modules/es6.array.reduce */ "./node_modules/core-js/modules/es6.array.reduce.js");
        __webpack_require__(/*! ./modules/es6.array.reduce-right */ "./node_modules/core-js/modules/es6.array.reduce-right.js");
        __webpack_require__(/*! ./modules/es6.array.index-of */ "./node_modules/core-js/modules/es6.array.index-of.js");
        __webpack_require__(/*! ./modules/es6.array.last-index-of */ "./node_modules/core-js/modules/es6.array.last-index-of.js");
        __webpack_require__(/*! ./modules/es6.array.copy-within */ "./node_modules/core-js/modules/es6.array.copy-within.js");
        __webpack_require__(/*! ./modules/es6.array.fill */ "./node_modules/core-js/modules/es6.array.fill.js");
        __webpack_require__(/*! ./modules/es6.array.find */ "./node_modules/core-js/modules/es6.array.find.js");
        __webpack_require__(/*! ./modules/es6.array.find-index */ "./node_modules/core-js/modules/es6.array.find-index.js");
        __webpack_require__(/*! ./modules/es6.array.species */ "./node_modules/core-js/modules/es6.array.species.js");
        __webpack_require__(/*! ./modules/es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
        __webpack_require__(/*! ./modules/es6.regexp.constructor */ "./node_modules/core-js/modules/es6.regexp.constructor.js");
        __webpack_require__(/*! ./modules/es6.regexp.exec */ "./node_modules/core-js/modules/es6.regexp.exec.js");
        __webpack_require__(/*! ./modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");
        __webpack_require__(/*! ./modules/es6.regexp.flags */ "./node_modules/core-js/modules/es6.regexp.flags.js");
        __webpack_require__(/*! ./modules/es6.regexp.match */ "./node_modules/core-js/modules/es6.regexp.match.js");
        __webpack_require__(/*! ./modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");
        __webpack_require__(/*! ./modules/es6.regexp.search */ "./node_modules/core-js/modules/es6.regexp.search.js");
        __webpack_require__(/*! ./modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");
        __webpack_require__(/*! ./modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");
        __webpack_require__(/*! ./modules/es6.map */ "./node_modules/core-js/modules/es6.map.js");
        __webpack_require__(/*! ./modules/es6.set */ "./node_modules/core-js/modules/es6.set.js");
        __webpack_require__(/*! ./modules/es6.weak-map */ "./node_modules/core-js/modules/es6.weak-map.js");
        __webpack_require__(/*! ./modules/es6.weak-set */ "./node_modules/core-js/modules/es6.weak-set.js");
        __webpack_require__(/*! ./modules/es6.typed.array-buffer */ "./node_modules/core-js/modules/es6.typed.array-buffer.js");
        __webpack_require__(/*! ./modules/es6.typed.data-view */ "./node_modules/core-js/modules/es6.typed.data-view.js");
        __webpack_require__(/*! ./modules/es6.typed.int8-array */ "./node_modules/core-js/modules/es6.typed.int8-array.js");
        __webpack_require__(/*! ./modules/es6.typed.uint8-array */ "./node_modules/core-js/modules/es6.typed.uint8-array.js");
        __webpack_require__(/*! ./modules/es6.typed.uint8-clamped-array */ "./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js");
        __webpack_require__(/*! ./modules/es6.typed.int16-array */ "./node_modules/core-js/modules/es6.typed.int16-array.js");
        __webpack_require__(/*! ./modules/es6.typed.uint16-array */ "./node_modules/core-js/modules/es6.typed.uint16-array.js");
        __webpack_require__(/*! ./modules/es6.typed.int32-array */ "./node_modules/core-js/modules/es6.typed.int32-array.js");
        __webpack_require__(/*! ./modules/es6.typed.uint32-array */ "./node_modules/core-js/modules/es6.typed.uint32-array.js");
        __webpack_require__(/*! ./modules/es6.typed.float32-array */ "./node_modules/core-js/modules/es6.typed.float32-array.js");
        __webpack_require__(/*! ./modules/es6.typed.float64-array */ "./node_modules/core-js/modules/es6.typed.float64-array.js");
        __webpack_require__(/*! ./modules/es6.reflect.apply */ "./node_modules/core-js/modules/es6.reflect.apply.js");
        __webpack_require__(/*! ./modules/es6.reflect.construct */ "./node_modules/core-js/modules/es6.reflect.construct.js");
        __webpack_require__(/*! ./modules/es6.reflect.define-property */ "./node_modules/core-js/modules/es6.reflect.define-property.js");
        __webpack_require__(/*! ./modules/es6.reflect.delete-property */ "./node_modules/core-js/modules/es6.reflect.delete-property.js");
        __webpack_require__(/*! ./modules/es6.reflect.enumerate */ "./node_modules/core-js/modules/es6.reflect.enumerate.js");
        __webpack_require__(/*! ./modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");
        __webpack_require__(/*! ./modules/es6.reflect.get-own-property-descriptor */ "./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js");
        __webpack_require__(/*! ./modules/es6.reflect.get-prototype-of */ "./node_modules/core-js/modules/es6.reflect.get-prototype-of.js");
        __webpack_require__(/*! ./modules/es6.reflect.has */ "./node_modules/core-js/modules/es6.reflect.has.js");
        __webpack_require__(/*! ./modules/es6.reflect.is-extensible */ "./node_modules/core-js/modules/es6.reflect.is-extensible.js");
        __webpack_require__(/*! ./modules/es6.reflect.own-keys */ "./node_modules/core-js/modules/es6.reflect.own-keys.js");
        __webpack_require__(/*! ./modules/es6.reflect.prevent-extensions */ "./node_modules/core-js/modules/es6.reflect.prevent-extensions.js");
        __webpack_require__(/*! ./modules/es6.reflect.set */ "./node_modules/core-js/modules/es6.reflect.set.js");
        __webpack_require__(/*! ./modules/es6.reflect.set-prototype-of */ "./node_modules/core-js/modules/es6.reflect.set-prototype-of.js");
        __webpack_require__(/*! ./modules/es7.array.includes */ "./node_modules/core-js/modules/es7.array.includes.js");
        __webpack_require__(/*! ./modules/es7.array.flat-map */ "./node_modules/core-js/modules/es7.array.flat-map.js");
        __webpack_require__(/*! ./modules/es7.array.flatten */ "./node_modules/core-js/modules/es7.array.flatten.js");
        __webpack_require__(/*! ./modules/es7.string.at */ "./node_modules/core-js/modules/es7.string.at.js");
        __webpack_require__(/*! ./modules/es7.string.pad-start */ "./node_modules/core-js/modules/es7.string.pad-start.js");
        __webpack_require__(/*! ./modules/es7.string.pad-end */ "./node_modules/core-js/modules/es7.string.pad-end.js");
        __webpack_require__(/*! ./modules/es7.string.trim-left */ "./node_modules/core-js/modules/es7.string.trim-left.js");
        __webpack_require__(/*! ./modules/es7.string.trim-right */ "./node_modules/core-js/modules/es7.string.trim-right.js");
        __webpack_require__(/*! ./modules/es7.string.match-all */ "./node_modules/core-js/modules/es7.string.match-all.js");
        __webpack_require__(/*! ./modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");
        __webpack_require__(/*! ./modules/es7.symbol.observable */ "./node_modules/core-js/modules/es7.symbol.observable.js");
        __webpack_require__(/*! ./modules/es7.object.get-own-property-descriptors */ "./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js");
        __webpack_require__(/*! ./modules/es7.object.values */ "./node_modules/core-js/modules/es7.object.values.js");
        __webpack_require__(/*! ./modules/es7.object.entries */ "./node_modules/core-js/modules/es7.object.entries.js");
        __webpack_require__(/*! ./modules/es7.object.define-getter */ "./node_modules/core-js/modules/es7.object.define-getter.js");
        __webpack_require__(/*! ./modules/es7.object.define-setter */ "./node_modules/core-js/modules/es7.object.define-setter.js");
        __webpack_require__(/*! ./modules/es7.object.lookup-getter */ "./node_modules/core-js/modules/es7.object.lookup-getter.js");
        __webpack_require__(/*! ./modules/es7.object.lookup-setter */ "./node_modules/core-js/modules/es7.object.lookup-setter.js");
        __webpack_require__(/*! ./modules/es7.map.to-json */ "./node_modules/core-js/modules/es7.map.to-json.js");
        __webpack_require__(/*! ./modules/es7.set.to-json */ "./node_modules/core-js/modules/es7.set.to-json.js");
        __webpack_require__(/*! ./modules/es7.map.of */ "./node_modules/core-js/modules/es7.map.of.js");
        __webpack_require__(/*! ./modules/es7.set.of */ "./node_modules/core-js/modules/es7.set.of.js");
        __webpack_require__(/*! ./modules/es7.weak-map.of */ "./node_modules/core-js/modules/es7.weak-map.of.js");
        __webpack_require__(/*! ./modules/es7.weak-set.of */ "./node_modules/core-js/modules/es7.weak-set.of.js");
        __webpack_require__(/*! ./modules/es7.map.from */ "./node_modules/core-js/modules/es7.map.from.js");
        __webpack_require__(/*! ./modules/es7.set.from */ "./node_modules/core-js/modules/es7.set.from.js");
        __webpack_require__(/*! ./modules/es7.weak-map.from */ "./node_modules/core-js/modules/es7.weak-map.from.js");
        __webpack_require__(/*! ./modules/es7.weak-set.from */ "./node_modules/core-js/modules/es7.weak-set.from.js");
        __webpack_require__(/*! ./modules/es7.global */ "./node_modules/core-js/modules/es7.global.js");
        __webpack_require__(/*! ./modules/es7.system.global */ "./node_modules/core-js/modules/es7.system.global.js");
        __webpack_require__(/*! ./modules/es7.error.is-error */ "./node_modules/core-js/modules/es7.error.is-error.js");
        __webpack_require__(/*! ./modules/es7.math.clamp */ "./node_modules/core-js/modules/es7.math.clamp.js");
        __webpack_require__(/*! ./modules/es7.math.deg-per-rad */ "./node_modules/core-js/modules/es7.math.deg-per-rad.js");
        __webpack_require__(/*! ./modules/es7.math.degrees */ "./node_modules/core-js/modules/es7.math.degrees.js");
        __webpack_require__(/*! ./modules/es7.math.fscale */ "./node_modules/core-js/modules/es7.math.fscale.js");
        __webpack_require__(/*! ./modules/es7.math.iaddh */ "./node_modules/core-js/modules/es7.math.iaddh.js");
        __webpack_require__(/*! ./modules/es7.math.isubh */ "./node_modules/core-js/modules/es7.math.isubh.js");
        __webpack_require__(/*! ./modules/es7.math.imulh */ "./node_modules/core-js/modules/es7.math.imulh.js");
        __webpack_require__(/*! ./modules/es7.math.rad-per-deg */ "./node_modules/core-js/modules/es7.math.rad-per-deg.js");
        __webpack_require__(/*! ./modules/es7.math.radians */ "./node_modules/core-js/modules/es7.math.radians.js");
        __webpack_require__(/*! ./modules/es7.math.scale */ "./node_modules/core-js/modules/es7.math.scale.js");
        __webpack_require__(/*! ./modules/es7.math.umulh */ "./node_modules/core-js/modules/es7.math.umulh.js");
        __webpack_require__(/*! ./modules/es7.math.signbit */ "./node_modules/core-js/modules/es7.math.signbit.js");
        __webpack_require__(/*! ./modules/es7.promise.finally */ "./node_modules/core-js/modules/es7.promise.finally.js");
        __webpack_require__(/*! ./modules/es7.promise.try */ "./node_modules/core-js/modules/es7.promise.try.js");
        __webpack_require__(/*! ./modules/es7.reflect.define-metadata */ "./node_modules/core-js/modules/es7.reflect.define-metadata.js");
        __webpack_require__(/*! ./modules/es7.reflect.delete-metadata */ "./node_modules/core-js/modules/es7.reflect.delete-metadata.js");
        __webpack_require__(/*! ./modules/es7.reflect.get-metadata */ "./node_modules/core-js/modules/es7.reflect.get-metadata.js");
        __webpack_require__(/*! ./modules/es7.reflect.get-metadata-keys */ "./node_modules/core-js/modules/es7.reflect.get-metadata-keys.js");
        __webpack_require__(/*! ./modules/es7.reflect.get-own-metadata */ "./node_modules/core-js/modules/es7.reflect.get-own-metadata.js");
        __webpack_require__(/*! ./modules/es7.reflect.get-own-metadata-keys */ "./node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js");
        __webpack_require__(/*! ./modules/es7.reflect.has-metadata */ "./node_modules/core-js/modules/es7.reflect.has-metadata.js");
        __webpack_require__(/*! ./modules/es7.reflect.has-own-metadata */ "./node_modules/core-js/modules/es7.reflect.has-own-metadata.js");
        __webpack_require__(/*! ./modules/es7.reflect.metadata */ "./node_modules/core-js/modules/es7.reflect.metadata.js");
        __webpack_require__(/*! ./modules/es7.asap */ "./node_modules/core-js/modules/es7.asap.js");
        __webpack_require__(/*! ./modules/es7.observable */ "./node_modules/core-js/modules/es7.observable.js");
        __webpack_require__(/*! ./modules/web.timers */ "./node_modules/core-js/modules/web.timers.js");
        __webpack_require__(/*! ./modules/web.immediate */ "./node_modules/core-js/modules/web.immediate.js");
        __webpack_require__(/*! ./modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");
        module.exports = __webpack_require__(/*! ./modules/_core */ "./node_modules/core-js/modules/_core.js");


        /***/ }),

    /***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/less/style.less":
    /*!**********************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/less/style.less ***!
  \**********************************************************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Imports
        var urlEscape = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/url-escape.js */ "./node_modules/css-loader/dist/runtime/url-escape.js");
        var ___CSS_LOADER_URL___0___ = urlEscape(__webpack_require__(/*! ../fonts/opensans.woff2 */ "./src/fonts/opensans.woff2"));
        var ___CSS_LOADER_URL___1___ = urlEscape(__webpack_require__(/*! ../fonts/opensans.woff */ "./src/fonts/opensans.woff"));
        var ___CSS_LOADER_URL___2___ = urlEscape(__webpack_require__(/*! ../fonts/opensans.ttf */ "./src/fonts/opensans.ttf"));
        var ___CSS_LOADER_URL___3___ = urlEscape(__webpack_require__(/*! ../fonts/opensansitalic.woff2 */ "./src/fonts/opensansitalic.woff2"));
        var ___CSS_LOADER_URL___4___ = urlEscape(__webpack_require__(/*! ../fonts/opensansitalic.woff */ "./src/fonts/opensansitalic.woff"));
        var ___CSS_LOADER_URL___5___ = urlEscape(__webpack_require__(/*! ../fonts/opensansitalic.ttf */ "./src/fonts/opensansitalic.ttf"));
        var ___CSS_LOADER_URL___6___ = urlEscape(__webpack_require__(/*! ../fonts/opensansbold.woff2 */ "./src/fonts/opensansbold.woff2"));
        var ___CSS_LOADER_URL___7___ = urlEscape(__webpack_require__(/*! ../fonts/opensansbold.woff */ "./src/fonts/opensansbold.woff"));
        var ___CSS_LOADER_URL___8___ = urlEscape(__webpack_require__(/*! ../fonts/opensansbold.ttf */ "./src/fonts/opensansbold.ttf"));
        var ___CSS_LOADER_URL___9___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuethin.woff2 */ "./src/fonts/bebasneuethin.woff2"));
        var ___CSS_LOADER_URL___10___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuethin.woff */ "./src/fonts/bebasneuethin.woff"));
        var ___CSS_LOADER_URL___11___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuethin.ttf */ "./src/fonts/bebasneuethin.ttf"));
        var ___CSS_LOADER_URL___12___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuelight.woff2 */ "./src/fonts/bebasneuelight.woff2"));
        var ___CSS_LOADER_URL___13___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuelight.woff */ "./src/fonts/bebasneuelight.woff"));
        var ___CSS_LOADER_URL___14___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuelight.ttf */ "./src/fonts/bebasneuelight.ttf"));
        var ___CSS_LOADER_URL___15___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuebook.woff2 */ "./src/fonts/bebasneuebook.woff2"));
        var ___CSS_LOADER_URL___16___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuebook.woff */ "./src/fonts/bebasneuebook.woff"));
        var ___CSS_LOADER_URL___17___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuebook.ttf */ "./src/fonts/bebasneuebook.ttf"));
        var ___CSS_LOADER_URL___18___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneueregular.woff2 */ "./src/fonts/bebasneueregular.woff2"));
        var ___CSS_LOADER_URL___19___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneueregular.woff */ "./src/fonts/bebasneueregular.woff"));
        var ___CSS_LOADER_URL___20___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneueregular.ttf */ "./src/fonts/bebasneueregular.ttf"));
        var ___CSS_LOADER_URL___21___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuebold.woff2 */ "./src/fonts/bebasneuebold.woff2"));
        var ___CSS_LOADER_URL___22___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuebold.woff */ "./src/fonts/bebasneuebold.woff"));
        var ___CSS_LOADER_URL___23___ = urlEscape(__webpack_require__(/*! ../fonts/bebasneuebold.ttf */ "./src/fonts/bebasneuebold.ttf"));
        var ___CSS_LOADER_URL___24___ = urlEscape(__webpack_require__(/*! ../img/arr-right.png */ "./src/img/arr-right.png"));
        var ___CSS_LOADER_URL___25___ = urlEscape(__webpack_require__(/*! ../img/bg/bg.png */ "./src/img/bg/bg.png"));
        var ___CSS_LOADER_URL___26___ = urlEscape(__webpack_require__(/*! ../../_doc/screenshots/detail.png */ "./_doc/screenshots/detail.png"));
        var ___CSS_LOADER_URL___27___ = urlEscape(__webpack_require__(/*! ../img/mob-arrow.png */ "./src/img/mob-arrow.png"));
        var ___CSS_LOADER_URL___28___ = urlEscape(__webpack_require__(/*! ../img/phone.png */ "./src/img/phone.png"));
        var ___CSS_LOADER_URL___29___ = urlEscape(__webpack_require__(/*! ../img/locations.png */ "./src/img/locations.png"));
        var ___CSS_LOADER_URL___30___ = urlEscape(__webpack_require__(/*! ../img/search.png */ "./src/img/search.png"));
        var ___CSS_LOADER_URL___31___ = urlEscape(__webpack_require__(/*! ../img/bg/search-dark.png */ "./src/img/bg/search-dark.png"));
        var ___CSS_LOADER_URL___32___ = urlEscape(__webpack_require__(/*! ../img/bg/search-close.png */ "./src/img/bg/search-close.png"));
        var ___CSS_LOADER_URL___33___ = urlEscape(__webpack_require__(/*! ../img/bg/subnav-arrow.png */ "./src/img/bg/subnav-arrow.png"));
        var ___CSS_LOADER_URL___34___ = urlEscape(__webpack_require__(/*! ../img/bg/branch-locator.jpg */ "./src/img/bg/branch-locator.jpg"));
        var ___CSS_LOADER_URL___35___ = urlEscape(__webpack_require__(/*! ../img/bg/hexagons-left.png */ "./src/img/bg/hexagons-left.png"));
        var ___CSS_LOADER_URL___36___ = urlEscape(__webpack_require__(/*! ../img/bg/quote-mark-dk.png */ "./src/img/bg/quote-mark-dk.png"));
        var ___CSS_LOADER_URL___37___ = urlEscape(__webpack_require__(/*! ../img/carousel-left.png */ "./src/img/carousel-left.png"));
        var ___CSS_LOADER_URL___38___ = urlEscape(__webpack_require__(/*! ../img/carousel-right.png */ "./src/img/carousel-right.png"));
        var ___CSS_LOADER_URL___39___ = urlEscape(__webpack_require__(/*! ../img/science.jpg */ "./src/img/science.jpg"));
        var ___CSS_LOADER_URL___40___ = urlEscape(__webpack_require__(/*! ../img/students.png */ "./src/img/students.png"));
        var ___CSS_LOADER_URL___41___ = urlEscape(__webpack_require__(/*! ../img/facebook-svg.png */ "./src/img/facebook-svg.png"));
        var ___CSS_LOADER_URL___42___ = urlEscape(__webpack_require__(/*! ../img/youtube.png */ "./src/img/youtube.png"));
        var ___CSS_LOADER_URL___43___ = urlEscape(__webpack_require__(/*! ../img/twitter-svg.png */ "./src/img/twitter-svg.png"));
        var ___CSS_LOADER_URL___44___ = urlEscape(__webpack_require__(/*! ../img/pinterest-svg.png */ "./src/img/pinterest-svg.png"));
        var ___CSS_LOADER_URL___45___ = urlEscape(__webpack_require__(/*! ../img/email-svg.png */ "./src/img/email-svg.png"));
        var ___CSS_LOADER_URL___46___ = urlEscape(__webpack_require__(/*! ../img/truck.jpg */ "./src/img/truck.jpg"));
        var ___CSS_LOADER_URL___47___ = urlEscape(__webpack_require__(/*! ../img/aside.png */ "./src/img/aside.png"));
        var ___CSS_LOADER_URL___48___ = urlEscape(__webpack_require__(/*! ../img/btn-bg.png */ "./src/img/btn-bg.png"));

// Module
        exports.push([module.i, "body,\ndiv,\ndl,\ndt,\ndd,\nul,\nli,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\npre,\ncode,\nform,\nfieldset,\ninput,\ntextarea,\np,\nblockquote,\nth,\ntd {\n  margin: 0;\n  padding: 0;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\nfieldset,\nimg,\nabbr {\n  border: 0;\n}\naddress,\ncaption,\ncite,\ncode,\ndfn,\nem,\nstrong,\nth,\nvar {\n  font-style: normal;\n  font-weight: normal;\n}\nul li {\n  list-style: none;\n}\ncaption,\nth {\n  text-align: left;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: 100%;\n  font-weight: normal;\n}\nsup {\n  vertical-align: text-top;\n}\nsub {\n  vertical-align: text-bottom;\n}\ninput,\ntextarea,\nselect {\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n}\nlegend {\n  color: #000;\n}\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection,\nmain {\n  display: block;\n}\nimg {\n  max-width: 100%;\n  height: auto;\n}\n@font-face {\n  font-family: 'Aleo';\n  src: local('Aleo Regular'), local('Aleo-Regular'), url(" + ___CSS_LOADER_URL___0___ + ") format('woff2'), url(" + ___CSS_LOADER_URL___1___ + ") format('woff'), url(" + ___CSS_LOADER_URL___2___ + ") format('truetype');\n  font-weight: 400;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'Aleo-Italic';\n  src: local('Aleo Italic'), local('Aleo-Italic'), url(" + ___CSS_LOADER_URL___3___ + ") format('woff2'), url(" + ___CSS_LOADER_URL___4___ + ") format('woff'), url(" + ___CSS_LOADER_URL___5___ + ") format('truetype');\n  font-weight: 700;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'Aleo';\n  src: local('Aleo Bold'), local('Aleo-Bold'), url(" + ___CSS_LOADER_URL___6___ + ") format('woff2'), url(" + ___CSS_LOADER_URL___7___ + ") format('woff'), url(" + ___CSS_LOADER_URL___8___ + ") format('truetype');\n  font-weight: 700;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'Bebas Neue';\n  src: local('Bebas Neue Thin'), local('BebasNeue-Thin'), url(" + ___CSS_LOADER_URL___9___ + ") format('woff2'), url(" + ___CSS_LOADER_URL___10___ + ") format('woff'), url(" + ___CSS_LOADER_URL___11___ + ") format('truetype');\n  font-weight: 100;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'Bebas Neue';\n  src: local('Bebas Neue Light'), local('BebasNeue-Light'), url(" + ___CSS_LOADER_URL___12___ + ") format('woff2'), url(" + ___CSS_LOADER_URL___13___ + ") format('woff'), url(" + ___CSS_LOADER_URL___14___ + ") format('truetype');\n  font-weight: 200;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'Bebas Neue';\n  src: local('Bebas Neue Book'), local('BebasNeueBook'), url(" + ___CSS_LOADER_URL___15___ + ") format('woff2'), url(" + ___CSS_LOADER_URL___16___ + ") format('woff'), url(" + ___CSS_LOADER_URL___17___ + ") format('truetype');\n  font-weight: 300;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'Bebas Neue';\n  src: local('Bebas Neue Regular'), local('BebasNeueRegular'), url(" + ___CSS_LOADER_URL___18___ + ") format('woff2'), url(" + ___CSS_LOADER_URL___19___ + ") format('woff'), url(" + ___CSS_LOADER_URL___20___ + ") format('truetype');\n  font-weight: 400;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'Bebas Neue';\n  src: local('Bebas Neue Bold'), local('BebasNeueBold'), url(" + ___CSS_LOADER_URL___21___ + ") format('woff2'), url(" + ___CSS_LOADER_URL___22___ + ") format('woff'), url(" + ___CSS_LOADER_URL___23___ + ") format('truetype');\n  font-weight: 700;\n  font-style: normal;\n}\n/*COLORS*/\n.text-shadow {\n  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.8);\n}\n.text-shadow-small-text {\n  text-shadow: 0 0 50px #000;\n}\n.covered {\n  background-color: hsla(0, 0%, 100%, 0.8);\n}\n.headingsRegular {\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: 400;\n}\n.headingsBold {\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n}\n.regular {\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: 400;\n}\n.bold {\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: bold;\n}\n.padding-col-top-bottom {\n  padding-top: 42px;\n  padding-bottom: 42px;\n}\n.padding-col {\n  padding: 42px 42px 58px;\n}\n.padding-cell {\n  padding: 42px;\n}\n.padding-header {\n  padding: 0 200px 16px;\n}\n.padding {\n  padding: 32px;\n}\n.padding-both {\n  padding-top: 32px;\n  padding-bottom: 32px;\n}\n.padding-top {\n  padding-top: 32px;\n}\n.padding-left {\n  padding-left: 32px;\n}\n.padding-bottom {\n  padding-bottom: 32px;\n}\n.padding-left-right {\n  padding-right: 32px;\n  padding-left: 32px;\n}\n.padding-half {\n  padding: 16px;\n}\n.padding-half-top {\n  padding-top: 16px;\n}\n.padding-half-bottom {\n  padding-bottom: 16px;\n}\n.padding-half-left {\n  padding-left: 16px;\n}\n.padding-half-top-bottom {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n.padding-half-left-right {\n  padding-right: 16px;\n  padding-left: 16px;\n}\n.padding-quarter-top-bottom {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n/*TAGS*/\ndiv {\n  box-sizing: border-box;\n}\nh1 {\n  font-weight: 500;\n  font-size: 2.25rem;\n}\nh2 {\n  font-size: 40px;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  line-height: 90%;\n  margin-bottom: 9px;\n}\nh2.tall {\n  font-size: 47px;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: 400;\n}\nh2.tall strong {\n  display: block;\n  font-size: 31px;\n  margin-bottom: -7px;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: 400;\n}\nh3 {\n  font-size: 40px;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n}\nh4 {\n  font-size: 32px;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n}\nh6 {\n  font-weight: 500;\n  font-size: 1rem;\n}\np {\n  line-height: 140%;\n}\npre {\n  margin: 0;\n  padding: 0;\n  font-family: monospace,monospace;\n  font-size: 1em;\n}\na {\n  text-decoration: none;\n}\niframe {\n  width: 100%;\n  height: 100%;\n}\nmark {\n  background: none;\n}\n.hr {\n  height: 30px;\n  background: #444;\n}\n.vh {\n  width: 0!important;\n  border-right: 1px solid #b3b3b3;\n}\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  display: none;\n}\nfieldset {\n  box-sizing: border-box;\n  margin: 10px;\n  display: inline-block;\n  justify-content: space-between;\n}\ninput[type=\"text\"] {\n  font-size: 18px;\n  border: 1px solid #cbcbcb;\n  box-shadow: inset 0 1px 2px hsla(0, 0%, 4%, 0.1);\n  height: 38px;\n  text-indent: 10px;\n}\nbutton {\n  margin: 0;\n  height: 40px;\n  color: #ffffff;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 26px;\n  padding: 0 5px;\n  border: none;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 100%;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: 400;\n}\nbutton > * {\n  display: block;\n  padding-top: 3px;\n}\n.btn {\n  height: 50px;\n  padding: 0 28px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  background: #be0005;\n  color: #ffffff;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 26px;\n  line-height: 100%;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: 400;\n}\n.btn > * {\n  display: block;\n  margin-top: 7px;\n}\n.wide {\n  background: #ffffff;\n  width: 100%;\n}\n.wide-box {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(100% - 0px);\n  padding: 42px 42px 58px;\n  position: relative;\n  align-items: flex-start;\n}\n.wide-box.bb {\n  border-bottom: 1px solid #444;\n}\n.wide-box.origin {\n  padding: 0;\n}\n.wide.both {\n  padding-top: 32px;\n  padding-bottom: 32px;\n}\n.wide.top {\n  padding-top: 32px;\n}\n.wide.bottom {\n  padding-bottom: 32px;\n}\n.double {\n  background-color: #ffffff;\n}\n.double-header {\n  flex-direction: column;\n  text-align: center;\n  padding: 0 200px 16px;\n}\n@media screen and (max-width: 960px) {\n  .double-header {\n    padding: 32px;\n  }\n}\n.double-items {\n  justify-content: space-between;\n}\n.double-item {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(50% - 0px);\n  padding-right: 32px;\n  padding-left: 32px;\n}\n@media screen and (max-width: 780px) {\n  .double-item {\n    width: calc(100% - 0px);\n  }\n}\n.double-item.both {\n  padding-top: 32px;\n  padding-bottom: 32px;\n}\n.double-item.top {\n  padding-top: 32px;\n}\n.double-item.bottom {\n  padding-bottom: 32px;\n}\n.double.both {\n  padding-top: 32px;\n  padding-bottom: 32px;\n}\n.double.top {\n  padding-top: 32px;\n}\n.double.bottom {\n  padding-bottom: 32px;\n}\n.half {\n  position: relative;\n  background: #ffffff;\n}\n.half-header {\n  flex-direction: column;\n  padding: 0 200px 16px;\n}\n.half-header.origin {\n  padding: 0;\n}\n.half-bg {\n  background: #ffffff;\n  background-size: cover;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 0;\n  overflow: hidden;\n}\n@media screen and (max-width: 780px) {\n  .half-bg {\n    position: unset;\n    display: block;\n    margin-bottom: -72px;\n  }\n}\n@media screen and (max-width: 560px) {\n  .half-bg {\n    margin-bottom: -36px;\n  }\n}\n.half-bg img {\n  width: auto;\n  max-width: unset;\n  height: auto;\n}\n@media screen and (max-width: 780px) {\n  .half-bg img {\n    width: 120%;\n  }\n}\n.half-items {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n  justify-content: space-between;\n}\n.half-item {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(50% - 0px);\n  z-index: 3;\n  padding: 42px 42px 58px;\n}\n@media screen and (max-width: 780px) {\n  .half-item {\n    width: calc(100% - 0px);\n  }\n}\n@media screen and (max-width: 780px) {\n  .half-item:first-of-type {\n    position: unset;\n    padding: 0;\n  }\n}\n@media screen and (max-width: 780px) {\n  .half-item:first-of-type.text {\n    width: 90%;\n    margin: 0 auto;\n    padding: 16px;\n    background: #ffffff;\n  }\n  .half-item:first-of-type.text * {\n    color: #0a0a0a;\n    text-shadow: none;\n  }\n}\n@media screen and (max-width: 780px) {\n  .half-item:last-of-type {\n    position: unset;\n    width: 90%;\n    margin: 0 auto;\n    padding: 16px;\n    background: #ffffff;\n  }\n}\n.half.both {\n  padding-top: 32px;\n  padding-bottom: 32px;\n}\n.half.both .half-bg {\n  top: 32px;\n  bottom: 32px;\n}\n.half.top {\n  padding-top: 32px;\n}\n.half.top .half-bg {\n  top: 32px;\n}\n.half.bottom {\n  padding-bottom: 32px;\n}\n.half.bottom .half-bg {\n  bottom: 32px;\n}\n.triple {\n  background-color: #ffffff;\n  text-align: center;\n}\n.triple-header {\n  flex-direction: column;\n  padding: 0 200px 16px;\n}\n@media screen and (max-width: 780px) {\n  .triple-header {\n    padding-right: 16px;\n    padding-left: 16px;\n    padding-bottom: 30px;\n  }\n  .triple-header p {\n    font-size: 16px;\n    font-style: italic;\n    padding: 0 15%;\n  }\n}\n@media screen and (max-width: 560px) {\n  .triple-header p {\n    padding: 0;\n  }\n}\n.triple-footer {\n  justify-content: center;\n  padding-top: 16px;\n}\n.triple-items {\n  justify-content: space-between;\n}\n.triple-item {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(33.333333333333336% - 0px);\n  padding-right: 16px;\n  padding-left: 16px;\n  display: flex;\n  flex-direction: column;\n}\n@media screen and (max-width: 780px) {\n  .triple-item {\n    width: calc(100% - 0px);\n  }\n}\n.triple-item.origin {\n  padding: 0;\n}\n.triple-item.border {\n  border-right: 1px solid #b3b3b3;\n}\n@media screen and (max-width: 780px) {\n  .triple-item.border {\n    border-bottom: none;\n    margin-bottom: 25px;\n  }\n  .triple-item.border:after {\n    content: '';\n    display: block;\n    height: 0;\n    border-bottom: 1px solid #b3b3b3;\n    width: 60%;\n    margin: 20px auto 0;\n  }\n}\n.triple-item.border:last-of-type {\n  border: none;\n}\n.triple-item.border:last-of-type:after {\n  display: none;\n}\n.triple-item h3 {\n  margin: 3px 20px 5px;\n}\n.triple-item p {\n  margin-bottom: 20px;\n}\n.triple-item a {\n  color: #be0005;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  font-size: 24px;\n  margin-top: auto;\n}\n.triple-item span {\n  font-size: 28px;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: 400;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  margin-top: auto;\n}\n.triple.both {\n  padding-top: 32px;\n  padding-bottom: 32px;\n}\n.triple.top {\n  padding-top: 32px;\n}\n.triple.bottom {\n  padding-bottom: 32px;\n}\n.count {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(100% - 0px);\n  margin: 0 auto 60px;\n  border-bottom: 1px solid #444;\n  position: relative;\n}\n.count-info {\n  display: block;\n  width: 83px;\n  height: 83px;\n  border: 5px solid #be0005;\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-top: -41px;\n  margin-left: -41px;\n  background: #ffffff;\n}\n.count span {\n  display: inline-flex;\n  border-radius: 50%;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.5) 0%, rgba(138, 138, 138, 0.4) 100%);\n}\n.count em {\n  font-size: 76px;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  color: #000;\n  transform-origin: 0 0;\n  transform: scaleX(1.5);\n  margin-bottom: -16px;\n  margin-left: -13px;\n}\n.txt ul {\n  margin-left: 20px;\n  list-style-position: outside;\n}\n.txt ul li {\n  list-style: disc;\n}\n.txt ul li a {\n  color: inherit;\n  font-size: 18px;\n  text-decoration: none;\n}\n.txt p {\n  padding-bottom: 16px;\n}\n.shadow-txt h2 {\n  color: #ffffff;\n  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.8);\n  margin-bottom: 12px;\n}\n.shadow-txt p {\n  color: #ffffff;\n  font-size: 18px;\n  line-height: 140%;\n  text-shadow: 0 0 50px #000;\n}\n.img {\n  position: relative;\n  padding-top: 56.25%;\n}\n.img-frame {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n}\n.img img {\n  display: block;\n  width: 100%;\n}\n.box {\n  padding: 32px 0;\n}\n.box-white {\n  padding: 32px 0;\n  background-color: #ffffff;\n}\n.box-bg {\n  padding: 32px 0;\n  background-color: #ffffff;\n  background-position: 0 32px;\n  background-repeat: no-repeat;\n  background-size: auto calc(100% - 64px);\n}\n.box-top {\n  padding-top: 32px;\n}\n.equals {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(100% - 0px);\n  display: flex;\n  justify-content: space-between;\n  background-size: auto 100%;\n  background-repeat: no-repeat;\n  height: 100%;\n}\n.equals > div:last-of-type {\n  width: 50%;\n  background-color: hsla(0, 0%, 100%, 0.8);\n  padding: 42px;\n}\n.accordion input[type=\"radio\"] + label {\n  display: block;\n  color: #be0005;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  font-size: 24px;\n  text-transform: uppercase;\n  margin: 14px 0 26px;\n}\n.accordion input[type=\"radio\"] + label:after {\n  content: '+';\n  padding-left: 10px;\n}\n@media screen and (max-width: 780px) {\n  .accordion input[type=\"radio\"] + label {\n    position: relative;\n    border-top: 1px solid #444;\n    padding-top: 10px;\n    margin-bottom: -7px;\n  }\n  .accordion input[type=\"radio\"] + label:after {\n    position: absolute;\n    right: 0;\n  }\n}\n.accordion input[type=\"radio\"]:checked + label:after {\n  content: '-';\n}\n.accordion input[type=\"radio\"] + label + div {\n  display: none;\n  margin: -7px 0 40px;\n}\n.accordion input[type=\"radio\"] + label + div p {\n  font-size: 18px;\n}\n.accordion input[type=\"radio\"]:checked + label + div {\n  display: block;\n}\n@media screen and (max-width: 780px) {\n  .accordion input[type=\"radio\"]:checked + label + div p {\n    padding: 34px 0 0;\n  }\n}\n.select-box {\n  position: relative;\n  height: 33px;\n  width: auto;\n  display: block;\n}\n.select-arrow {\n  display: inline-block;\n  width: 100%;\n  height: 34px;\n  color: #be0005;\n  position: absolute;\n  top: 0px;\n  right: 10px;\n  z-index: 10;\n}\n.select-arrow:after {\n  content: '';\n  width: 20px;\n  height: 34px;\n  background: url(" + ___CSS_LOADER_URL___24___ + ") no-repeat center;\n  transform: rotate(90deg);\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n.select-arrow.passive {\n  width: 20px;\n  height: 34px;\n}\n.select-arrow.passive:after {\n  transform: rotate(-90deg);\n}\n.select-items {\n  height: 33px;\n  border-top: 1px solid transparent;\n  border-left: 1px solid transparent;\n  border-right: 1px solid transparent;\n  border-bottom: 1px solid #be0005;\n}\n.select-items:hover {\n  border-bottom: 1px solid #be0005;\n}\n.select-items li {\n  display: none;\n  padding: 5px 40px 5px 5px;\n}\n.select-items li:first-of-type {\n  display: block;\n}\n.select-items li a {\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: 400;\n  font-size: 31px;\n  text-transform: uppercase;\n  color: #be0005;\n  display: block;\n  margin-bottom: -6px;\n  white-space: nowrap;\n}\n.select-items.active {\n  height: auto;\n  border: 1px solid #be0005;\n  position: absolute;\n  background: #ffffff;\n  top: 0;\n  left: 0;\n  transition: height 1s;\n  z-index: 2;\n}\n.select-items.active li {\n  display: block;\n}\n.select-items.active li:hover {\n  background: #f5f5f5;\n}\n/*TEMP*/\ninput[type=\"checkbox\"]#tt {\n  display: none;\n}\nlabel[for=\"tt\"] {\n  position: fixed;\n  width: 30px;\n  height: 30px;\n  background: red;\n  top: 300px;\n  right: 0;\n  z-index: 100000;\n}\ninput[type=\"checkbox\"]#tt:checked + label {\n  background: green;\n}\n/*EOF TEMP*/\n.debug-in {\n  top: 0;\n  left: 0;\n  z-index: -21;\n  height: 100vh;\n  position: fixed;\n  width: 100%;\n}\n.debug-in > div {\n  height: inherit;\n  max-width: 1220px;\n  margin: 0 auto;\n  padding-left: 0px;\n  padding-right: 0px;\n}\n@media screen and (max-width: 780px) {\n  .debug-in > div {\n    padding-left: 0px;\n    padding-right: 0px;\n  }\n}\n.debug-in > div > div {\n  height: inherit;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n}\n.debug-in > div > div > div {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(8.333333333333334% - 0px);\n  height: inherit;\n  outline: 1px solid #ff0;\n  background: rgba(0, 0, 0, 0.1);\n}\nhtml {\n  font-size: 16px;\n  width: 100%;\n  background: url(" + ___CSS_LOADER_URL___25___ + ") repeat;\n}\nbody {\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-size: 18px;\n  color: #0a0a0a;\n}\nbody.tpl {\n  background: url(" + ___CSS_LOADER_URL___26___ + ") no-repeat center 0px;\n  height: 7000px;\n  position: relative;\n  opacity: 0.6;\n  z-index: -20;\n}\n.row {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n}\n.row.end {\n  justify-content: flex-end;\n}\nmain {\n  width: 100%;\n}\ndiv {\n  box-sizing: border-box;\n}\nsection,\nheader,\nfooter,\nmain,\n.container {\n  box-sizing: border-box;\n  width: 100%;\n}\nsection > div,\nheader > div,\nfooter > div,\nmain > div,\n.container > div {\n  max-width: 1220px;\n  margin: 0 auto;\n  padding-left: 0px;\n  padding-right: 0px;\n}\n@media screen and (max-width: 780px) {\n  section > div,\n  header > div,\n  footer > div,\n  main > div,\n  .container > div {\n    padding-left: 0px;\n    padding-right: 0px;\n  }\n}\nsection > div > div,\nheader > div > div,\nfooter > div > div,\nmain > div > div,\n.container > div > div {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n}\nheader {\n  position: fixed;\n  top: 0;\n  z-index: 20;\n}\n#topMenuSwitcher + label {\n  display: none;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n}\n@media screen and (max-width: 960px) {\n  #topMenuSwitcher + label {\n    display: inline-flex;\n  }\n}\n#topMenuSwitcher + label span {\n  display: block;\n  width: 100%;\n  height: 6px;\n  background: #444;\n  transition: 0.25s ease;\n}\n#topMenuSwitcher:checked + label span {\n  transition: 0.25s ease-in-out;\n  position: relative;\n}\n#topMenuSwitcher:checked + label span:first-of-type {\n  transform: rotate(45deg);\n  top: 10px;\n}\n#topMenuSwitcher:checked + label span:nth-of-type(2) {\n  display: none;\n}\n#topMenuSwitcher:checked + label span:last-of-type {\n  transform: rotate(-45deg);\n  bottom: 10px;\n}\n#topMenuSwitcher:checked + label + .header-nav {\n  background: #e3e3e3;\n  display: block;\n  position: fixed;\n  height: calc(100% - 83px);\n  overflow-y: scroll;\n  top: 84px;\n  right: 0;\n}\n@media screen and (max-width: 960px) {\n  #topMenuSwitcher:checked + label + .header-nav {\n    width: 350px;\n  }\n}\n@media screen and (max-width: 780px) {\n  #topMenuSwitcher:checked + label + .header-nav {\n    width: 80%;\n  }\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info {\n  position: relative;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info input[type=\"checkbox\"] + label > div,\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info input[type=\"checkbox\"] + label form {\n  display: none;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info input[type=\"checkbox\"]:checked + label > div,\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info input[type=\"checkbox\"]:checked + label form {\n  display: flex;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info label {\n  margin: 0;\n  position: unset;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info .regions-top {\n  justify-content: flex-start;\n  align-items: center;\n  height: 58px;\n  width: 100%;\n  background: #e3e3e3;\n  z-index: 2;\n  pointer-events: all;\n  position: absolute;\n  top: 60px;\n  left: 0px;\n  margin: 0;\n  padding: 0 30px;\n  border: none;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info .regions-top:after {\n  display: none;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info .regions-top .region-select {\n  padding: 0;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info .mobile-search-top {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 58px;\n  width: 100%;\n  background: #e3e3e3;\n  z-index: 2;\n  position: absolute;\n  top: 60px;\n  left: 0px;\n  margin: 0;\n  padding: 0 30px;\n  border: none;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info .mobile-search-top input {\n  font-size: 18px;\n  border: 1px solid #cbcbcb;\n  box-shadow: inset 0 1px 2px hsla(0, 0%, 4%, 0.1);\n  height: 38px;\n  text-indent: 10px;\n  width: 220px;\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: 400;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info .mobile-search-top button {\n  background-color: #be0005;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-info .mobile-search-top button em {\n  margin-bottom: -3px;\n  padding: 0 5px;\n}\n#topMenuSwitcher:checked + label + .header-nav [for=\"searchSwitcher\"] {\n  display: none;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-menu {\n  padding: 0;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-menu_top {\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-menu_top a {\n  font-size: 20px;\n  padding: 0;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-menu_top a.active {\n  text-decoration: underline;\n}\n#topMenuSwitcher:checked + label + .header-nav .header-nav-menu_top a:after {\n  display: none;\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav {\n  width: 100%;\n  flex-wrap: wrap;\n  padding: 0;\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav > li {\n  width: 100%;\n  height: 56px;\n  display: flex;\n  border-bottom: 2px solid #444;\n  box-sizing: border-box;\n  padding-left: 20px;\n  margin: 0;\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav .root {\n  padding-right: 40px;\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav .root:after {\n  width: 40px;\n  height: 100%;\n  background: url(" + ___CSS_LOADER_URL___27___ + ") no-repeat center;\n  top: 0;\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav .root:before {\n  display: none;\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav .root ul.sub-menu {\n  display: none;\n  position: fixed;\n  height: calc(100% - 83px);\n  overflow-y: scroll;\n  top: 83px;\n  left: 0;\n  margin: 0;\n  z-index: 1;\n  border: 2px solid #b3b3b3;\n  background: #ffffff;\n  padding: 20px 30px;\n  width: 300px;\n  max-width: 90%;\n  box-sizing: border-box;\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav .root ul.sub-menu > li {\n  border: none;\n  padding: 0;\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav .root ul.sub-menu > li:last-of-type {\n  margin-bottom: 100px;\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav .root ul.sub-menu .sub-menu-level {\n  padding: 0;\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav .root.active {\n  background-color: #ffffff;\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav .root.active:after {\n  transform: rotate(180deg);\n}\n#topMenuSwitcher:checked + label + .header-nav .main_nav .root.active ul.sub-menu {\n  display: block;\n}\n.header {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n}\n@media screen and (max-width: 960px) {\n  .header {\n    justify-content: space-between;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 16px 42px;\n    background: #ffffff;\n    border-bottom: 2px solid #444;\n  }\n}\n.header-call-btn {\n  display: none;\n}\n@media screen and (max-width: 960px) {\n  .header-call-btn {\n    display: block;\n    width: 46px;\n    height: 46px;\n    background: url(" + ___CSS_LOADER_URL___28___ + ") no-repeat left 0px;\n    background-size: contain;\n  }\n}\n.header-logo {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  padding-right: 0;\n  width: calc(18.333333333333336% - 0px);\n  margin-right: 0;\n  height: 160px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #ffffff;\n  border-bottom: 2px solid #b3b3b3;\n}\n.header-logo a {\n  max-width: 90%;\n}\n@media screen and (max-width: 960px) {\n  .header-logo {\n    height: 51px!important;\n    border: none;\n  }\n  .header-logo img {\n    width: 70%;\n    display: block;\n    margin: 0 auto;\n  }\n}\n.header-nav {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  padding-left: 0;\n  width: calc(81.66666666666667% - 0px);\n  margin-left: 0;\n  border-bottom: 2px solid #b3b3b3;\n  display: flex;\n  flex-direction: column;\n  height: 160px;\n  background-color: hsla(0, 0%, 100%, 0.8);\n}\n@media screen and (max-width: 960px) {\n  .header-nav {\n    display: none;\n  }\n}\n.header-nav-info {\n  display: flex;\n  justify-content: flex-end;\n  height: 38px;\n  background-color: #444;\n}\n.header-nav-info a,\n.header-nav-info label {\n  display: inline-flex;\n  height: 100%;\n  align-items: center;\n  color: #ffffff;\n  text-transform: uppercase;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  font-size: 20px;\n  margin: 0 15px 0 0;\n  text-decoration: none;\n  cursor: pointer;\n  position: relative;\n}\n.header-nav-info a span,\n.header-nav-info label span {\n  display: block;\n  padding: 3px 0 0;\n  margin: 0;\n  line-height: 100%;\n}\n.header-nav-info [for=\"mobileSearchSwitcher\"] {\n  display: none;\n}\n@media screen and (max-width: 960px) {\n  .header-nav-info {\n    height: 58px;\n    justify-content: space-around;\n    align-items: center;\n  }\n  .header-nav-info > a {\n    display: none;\n  }\n  .header-nav-info label {\n    display: inline-flex !important;\n    flex-direction: column;\n    justify-content: center;\n  }\n  .header-nav-info label[for=\"regionsSwitcher\"]:before {\n    content: '';\n    display: block;\n    width: 14px;\n    height: 20px;\n    background: url(" + ___CSS_LOADER_URL___29___ + ") no-repeat left 0px;\n    background-size: auto 20px;\n  }\n  .header-nav-info label[for=\"mobileSearchSwitcher\"]:before {\n    content: '';\n    display: block;\n    width: 20px;\n    height: 20px;\n    background: url(" + ___CSS_LOADER_URL___30___ + ") no-repeat left 0px;\n    background-size: 20px auto;\n  }\n}\n.header-nav-main {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n  justify-content: space-between;\n}\n.header-nav-menu {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(80.83333333333333% - 0px);\n  padding: 0 20px;\n}\n@media screen and (max-width: 1100px) {\n  .header-nav-menu {\n    width: calc(100% - 0px);\n  }\n}\n.header-nav-menu_top {\n  border-bottom: 2px solid #444;\n  height: 63px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n.header-nav-menu_top a {\n  display: block;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  color: #444;\n  padding: 7px 20px 0px;\n  font-size: 38px;\n  position: relative;\n  text-decoration: none;\n}\n.header-nav-menu_top a.active {\n  color: #be0005;\n}\n.header-nav-menu_top a.active:after {\n  content: '';\n  display: block;\n  width: 100%;\n  height: 6px;\n  position: absolute;\n  bottom: -11px;\n  left: 0;\n  background: #be0005;\n}\n.header-nav-menu_main {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 64px;\n  position: relative;\n}\n.header-nav-menu_main input[type=\"checkbox\"] + label {\n  position: absolute;\n  right: 0;\n  display: block;\n  width: 18px;\n  height: 18px;\n  background: url(" + ___CSS_LOADER_URL___31___ + ") no-repeat left 0px;\n  background-size: contain;\n  cursor: pointer;\n}\n.header-nav-menu_main input[type=\"checkbox\"]:checked + label {\n  background: url(" + ___CSS_LOADER_URL___32___ + ") no-repeat left 0px;\n  background-size: contain;\n}\n.header-nav-menu_main input[type=\"checkbox\"] + label + form {\n  display: none;\n}\n.header-nav-menu_main input[type=\"checkbox\"]:checked + label + form + .main_nav {\n  display: none;\n}\n.header-nav-menu_main input[type=\"checkbox\"]:checked + label + form {\n  display: block;\n}\n.header-nav-callback {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(19.166666666666668% - 0px);\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n}\n@media screen and (max-width: 1100px) {\n  .header-nav-callback {\n    display: none;\n  }\n}\n.header-nav-callback a {\n  position: relative;\n  top: 24px;\n  text-decoration: none;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: 400;\n  display: block;\n  background: #be0005;\n  font-size: 30px;\n  padding: 22px 18px;\n  color: #ffffff;\n  text-align: center;\n}\n.header-nav-callback a span {\n  padding-top: 1rem;\n  display: block;\n  font-size: 40px;\n}\n.search-top {\n  display: inline-block;\n  text-align: right;\n  position: relative;\n  padding-right: 60px;\n  margin: 0 40px 0 auto;\n}\n.search-top label {\n  display: inline-block;\n  height: 32px;\n}\n.search-top input[type=\"search\"] {\n  height: 32px;\n  text-indent: 15px;\n}\n.search-top input[type=\"search\"]:focus {\n  outline: none;\n}\n.search-top button {\n  background: #444;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  height: 32px;\n  width: 60px;\n  font-size: 20px;\n}\n.search-top em {\n  padding-top: 5px;\n}\nul.main_nav {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding-left: 10px;\n  height: 100%;\n}\nul.main_nav > li {\n  display: inline-flex;\n  margin-right: 22px;\n  height: 100%;\n  align-items: center;\n}\nul.main_nav > li a {\n  color: #0a0a0a;\n  text-decoration: none;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  font-size: 20px;\n  white-space: nowrap;\n}\nul.main_nav > li.root {\n  padding-right: 25px;\n  position: relative;\n}\nul.main_nav > li.root:after {\n  content: '';\n  display: block;\n  width: 15px;\n  height: 9px;\n  background: url(" + ___CSS_LOADER_URL___33___ + ") no-repeat left 0px;\n  position: absolute;\n  top: 25px;\n  right: 0px;\n  transform: rotate(0deg);\n}\nul.main_nav > li.root:before {\n  content: '';\n  position: absolute;\n  top: 48px;\n  left: 50%;\n  margin-left: -20px;\n  display: none;\n  width: 21px;\n  height: 21px;\n  background: #ffffff;\n  transform: rotate(45deg);\n  border-top: 2px solid #b3b3b3;\n  border-left: 2px solid #b3b3b3;\n  z-index: 2;\n}\nul.main_nav > li.root > ul {\n  display: none;\n}\nul.main_nav > li:hover > ul {\n  display: flex;\n}\nul.main_nav > li:hover:after {\n  transform: rotate(180deg);\n}\nul.main_nav > li:hover:before {\n  display: block;\n}\nul.sub-menu {\n  position: absolute;\n  top: 59px;\n  left: auto;\n  z-index: 1;\n  margin-left: -200%;\n  border: 2px solid #b3b3b3;\n  background: #ffffff;\n  padding: 20px 30px;\n}\nul.sub-menu li {\n  white-space: nowrap;\n  margin: 0;\n}\nul.sub-menu li a {\n  white-space: nowrap;\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: bold;\n}\nul.sub-menu li a:hover {\n  color: #be0005;\n}\nul.sub-menu > li {\n  display: block;\n  flex-direction: column;\n  flex-wrap: wrap;\n  padding: 0 25px 0 25px;\n  border-right: 2px solid #b3b3b3;\n}\nul.sub-menu > li:first-of-type {\n  padding-left: 0;\n}\nul.sub-menu > li:last-of-type {\n  border: none;\n  padding-right: 0;\n}\nul.sub-menu > li h4 {\n  color: #be0005;\n  font-size: 28px;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  width: 100%;\n}\nul.sub-menu-level {\n  display: flex;\n  flex-direction: column;\n}\nul.sub-menu-level > li {\n  display: flex;\n  justify-content: space-between;\n  margin: 0 0 10px 0;\n}\nul.sub-menu-level > li a {\n  text-transform: none;\n  font-size: 20px;\n}\nul.sub-menu-level > li > h4 {\n  margin-top: 20px;\n}\nul.sub-menu-vertical {\n  display: flex;\n  flex-direction: column;\n}\nul.sub-menu-vertical:first-of-type {\n  margin-right: 30px;\n}\nul.sub-menu-vertical > li {\n  display: inline-block;\n  margin-bottom: 5px;\n}\n@media screen and (max-width: 960px) {\n  .header.scroll {\n    height: 85px;\n  }\n}\n.header.scroll .header-nav {\n  height: 80px;\n}\n.header.scroll .header-logo {\n  height: 80px;\n  transition: all 0.5s;\n}\n@media screen and (max-width: 960px) {\n  .header.scroll .header-logo {\n    height: auto;\n  }\n}\n.header.scroll .header-logo img {\n  width: 70%;\n  display: block;\n  margin: 0 auto;\n}\n@media screen and (max-width: 960px) {\n  .header.scroll .header-logo {\n    height: 51px!important;\n    border: none;\n  }\n  .header.scroll .header-logo a {\n    max-width: 100%!important;\n  }\n}\n.header.scroll .header-nav-info {\n  display: none;\n  transition: all 0.5s;\n}\n@media screen and (max-width: 960px) {\n  .header.scroll .header-nav-info {\n    display: flex;\n  }\n}\n.header.scroll .header-nav-menu_top {\n  display: none;\n}\n.header.scroll .header-nav-callback {\n  transition: all 0.5s;\n  top: 0;\n  height: 80px;\n}\n@media screen and (max-width: 960px) {\n  .header.scroll .header-nav-callback {\n    height: auto;\n  }\n}\n.header.scroll .header-nav-callback a {\n  transition: all 0.5s;\n  height: 80px;\n  width: 135px;\n  position: unset;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  padding: 0 18px;\n}\n@media screen and (max-width: 960px) {\n  .header.scroll .header-nav-callback a {\n    height: auto;\n  }\n}\n.header.scroll .header-nav-callback a span {\n  padding: 0;\n}\n.header.scroll .header-nav-menu_main {\n  transition: all 0.5s;\n  height: 80px;\n}\n@media screen and (max-width: 960px) {\n  .header.scroll .header-nav-menu_main {\n    height: auto;\n  }\n}\n.header.scroll .root {\n  transition: all 0.5s;\n}\n.header.scroll .root:after {\n  top: 34px;\n}\n.header.scroll .root:before {\n  top: 67px;\n}\n.header.scroll .sub-menu {\n  transition: all 0.5s;\n  top: 78px;\n}\n.header-space {\n  width: 100%;\n  height: 161px;\n}\n#regionsSwitcher + label .regions-top {\n  display: none;\n}\n#regionsSwitcher:checked + label {\n  overflow: visible;\n}\n#regionsSwitcher:checked + label .regions-top {\n  cursor: default;\n  display: block;\n  position: absolute;\n  padding: 32px;\n  border: 1px solid #444;\n  background: #ffffff;\n  width: 280px;\n  margin-left: -118px;\n  z-index: 2;\n  top: 40px;\n  left: 0px;\n  pointer-events: none;\n}\n#regionsSwitcher:checked + label .regions-top:after {\n  content: '';\n  display: block;\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: -11px;\n  left: calc(50% - 5px);\n  z-index: 2;\n  background: #ffffff;\n  transform: rotate(45deg);\n  border-left: 1px solid #444;\n  border-top: 1px solid #444;\n}\n#regionsSwitcher:checked + label .regions-top input,\n#regionsSwitcher:checked + label .regions-top a,\n#regionsSwitcher:checked + label .regions-top button {\n  pointer-events: all;\n}\n#regionsSwitcher:checked + label .regions-top a {\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: 400;\n  font-size: 18px;\n  text-transform: none;\n}\n#mobileSearchSwitcher + label + .mobile-search-top {\n  display: none;\n}\n.mobile-header-menu {\n  background: #e3e3e3;\n  display: block;\n  position: fixed;\n  height: calc(100% - 83px);\n  overflow-y: scroll;\n  top: 84px;\n  right: 0;\n}\n.mobile-header-menu .header-nav-info {\n  position: relative;\n}\n.mobile-header-menu .header-nav-info input[type=\"checkbox\"] + label > div,\n.mobile-header-menu .header-nav-info input[type=\"checkbox\"] + label form {\n  display: none;\n}\n.mobile-header-menu .header-nav-info input[type=\"checkbox\"]:checked + label > div,\n.mobile-header-menu .header-nav-info input[type=\"checkbox\"]:checked + label form {\n  display: flex;\n}\n.mobile-header-menu .header-nav-info label {\n  margin: 0;\n  position: unset;\n}\n.mobile-header-menu .header-nav-info .regions-top {\n  justify-content: flex-start;\n  align-items: center;\n  height: 58px;\n  width: 100%;\n  background: #e3e3e3;\n  z-index: 2;\n  pointer-events: all;\n  position: absolute;\n  top: 60px;\n  left: 0px;\n  margin: 0;\n  padding: 0 30px;\n  border: none;\n}\n.mobile-header-menu .header-nav-info .regions-top:after {\n  display: none;\n}\n.mobile-header-menu .header-nav-info .regions-top .region-select {\n  padding: 0;\n}\n.mobile-header-menu .header-nav-info .mobile-search-top {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 58px;\n  width: 100%;\n  background: #e3e3e3;\n  z-index: 2;\n  position: absolute;\n  top: 60px;\n  left: 0px;\n  margin: 0;\n  padding: 0 30px;\n  border: none;\n}\n.mobile-header-menu .header-nav-info .mobile-search-top input {\n  font-size: 18px;\n  border: 1px solid #cbcbcb;\n  box-shadow: inset 0 1px 2px hsla(0, 0%, 4%, 0.1);\n  height: 38px;\n  text-indent: 10px;\n  width: 220px;\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: 400;\n}\n.mobile-header-menu .header-nav-info .mobile-search-top button {\n  background-color: #be0005;\n}\n.mobile-header-menu .header-nav-info .mobile-search-top button em {\n  margin-bottom: -3px;\n  padding: 0 5px;\n}\n.mobile-header-menu [for=\"searchSwitcher\"] {\n  display: none;\n}\n.mobile-header-menu .header-nav-menu {\n  padding: 0;\n}\n.mobile-header-menu .header-nav-menu_top {\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n}\n.mobile-header-menu .header-nav-menu_top a {\n  font-size: 20px;\n  padding: 0;\n}\n.mobile-header-menu .header-nav-menu_top a.active {\n  text-decoration: underline;\n}\n.mobile-header-menu .header-nav-menu_top a:after {\n  display: none;\n}\n.mobile-header-menu .main_nav {\n  width: 100%;\n  flex-wrap: wrap;\n  padding: 0;\n}\n.mobile-header-menu .main_nav > li {\n  width: 100%;\n  height: 56px;\n  display: flex;\n  border-bottom: 2px solid #444;\n  box-sizing: border-box;\n  padding-left: 20px;\n  margin: 0;\n}\n.mobile-header-menu .main_nav .root {\n  padding-right: 40px;\n}\n.mobile-header-menu .main_nav .root:after {\n  width: 40px;\n  height: 100%;\n  background: url(" + ___CSS_LOADER_URL___27___ + ") no-repeat center;\n  top: 0;\n}\n.mobile-header-menu .main_nav .root:before {\n  display: none;\n}\n.mobile-header-menu .main_nav .root ul.sub-menu {\n  display: none;\n  position: fixed;\n  height: calc(100% - 83px);\n  overflow-y: scroll;\n  top: 83px;\n  left: 0;\n  margin: 0;\n  z-index: 1;\n  border: 2px solid #b3b3b3;\n  background: #ffffff;\n  padding: 20px 30px;\n  width: 300px;\n  max-width: 90%;\n  box-sizing: border-box;\n}\n.mobile-header-menu .main_nav .root ul.sub-menu > li {\n  border: none;\n  padding: 0;\n}\n.mobile-header-menu .main_nav .root ul.sub-menu > li:last-of-type {\n  margin-bottom: 100px;\n}\n.mobile-header-menu .main_nav .root ul.sub-menu .sub-menu-level {\n  padding: 0;\n}\n.mobile-header-menu .main_nav .root.active {\n  background-color: #ffffff;\n}\n.mobile-header-menu .main_nav .root.active:after {\n  transform: rotate(180deg);\n}\n.mobile-header-menu .main_nav .root.active ul.sub-menu {\n  display: block;\n}\n@media screen and (max-width: 560px) {\n  .banner {\n    margin-top: 80px;\n  }\n}\n.banner-slogan {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  justify-content: flex-start;\n  align-items: center;\n  top: 0px;\n  left: 0px;\n  padding: 0 120px;\n}\n@media screen and (max-width: 560px) {\n  .banner-slogan {\n    padding: 0 30px;\n  }\n}\n.banner-slogan cite {\n  display: block;\n  margin-top: 218px;\n}\n@media screen and (max-width: 960px) {\n  .banner-slogan cite {\n    margin-top: 60px;\n  }\n}\n@media screen and (max-width: 780px) {\n  .banner-slogan cite {\n    margin-top: 80px;\n  }\n}\n@media screen and (max-width: 560px) {\n  .banner-slogan cite {\n    margin-top: 0;\n  }\n}\n.banner-slogan cite span {\n  display: block;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  color: #ffffff;\n  font-size: 60px;\n  line-height: 90%;\n  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.8);\n}\n@media screen and (max-width: 960px) {\n  .banner-slogan cite span {\n    font-size: 50px;\n  }\n}\n@media screen and (max-width: 780px) {\n  .banner-slogan cite span {\n    font-size: 40px;\n  }\n}\n@media screen and (max-width: 560px) {\n  .banner-slogan cite span {\n    font-size: 30px;\n  }\n}\n.banner-slogan cite span sup {\n  display: inline-block;\n  font-size: 40px;\n  position: relative;\n  margin-top: -5px;\n  margin-left: -5px;\n}\n@media screen and (max-width: 960px) {\n  .banner-slogan cite span sup {\n    font-size: 40px;\n  }\n}\n@media screen and (max-width: 780px) {\n  .banner-slogan cite span sup {\n    font-size: 30px;\n  }\n}\n@media screen and (max-width: 560px) {\n  .banner-slogan cite span sup {\n    font-size: 20px;\n  }\n}\n.pest-menu-callback {\n  display: none;\n}\n@media screen and (max-width: 560px) {\n  .pest-menu-callback {\n    display: flex;\n    position: relative;\n    margin: -20px auto 10px;\n  }\n  .pest-menu-callback.scrolled {\n    box-sizing: border-box;\n    width: 100vw;\n    position: fixed;\n    top: 108px;\n    left: 0;\n    z-index: 10;\n  }\n}\n.pest-menu-items {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  justify-content: center;\n  padding-bottom: 24px;\n  background-color: #ffffff;\n}\n@media screen and (max-width: 560px) {\n  .pest-menu-items {\n    margin-bottom: 0;\n  }\n}\n.pest-menu-item {\n  text-align: center;\n  position: relative;\n  margin: -44px 10px 0 !important;\n  text-decoration: none;\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(15.000000000000002% - 0px);\n}\n@media screen and (max-width: 560px) {\n  .pest-menu-item {\n    margin: 10px 10px 0!important;\n    width: calc(18.333333333333336% - 0px);\n  }\n}\n.pest-menu-item span {\n  display: block;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: 400;\n  font-size: 24px;\n  text-transform: uppercase;\n  color: #444;\n  margin-top: 9px;\n}\n@media screen and (max-width: 560px) {\n  .pest-menu-item span {\n    font-size: 16px;\n  }\n}\n.communication-callback {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(50% - 0px);\n  height: 200px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  background: url(" + ___CSS_LOADER_URL___34___ + ") no-repeat left 0;\n  background-size: cover;\n}\n@media screen and (max-width: 1100px) {\n  .communication-callback {\n    width: calc(100% - 0px);\n  }\n}\n.communication-callback_col {\n  text-align: center;\n  position: relative;\n  padding: 8px 0 15px;\n}\n.communication-callback_col label {\n  position: relative;\n  display: block;\n}\n.communication-callback_col input {\n  width: 300px;\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: 400;\n}\n.communication-callback_col button {\n  display: none;\n  background: #444;\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n.communication-callback_col button.active {\n  display: flex;\n}\n.communication-callback_col ul {\n  width: 300px;\n  position: absolute;\n  top: 47px;\n  left: 0;\n  z-index: 1;\n  border: 1px solid #b3b3b3;\n  background: #ffffff;\n  padding: 10px 0;\n  display: none;\n}\n.communication-callback_col ul li {\n  width: 100%;\n  display: flex;\n  height: 30px;\n}\n.communication-callback_col ul li a {\n  color: #444;\n  padding-left: 10px;\n  text-decoration: none;\n}\n.communication-callback span {\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  color: #0a0a0a;\n  font-size: 26px;\n  text-transform: uppercase;\n}\n.communication-callback em {\n  color: #be0005;\n}\n.communication-feedback {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(50% - 0px);\n  background: url(" + ___CSS_LOADER_URL___35___ + ") no-repeat right 0 #ffffff;\n  position: relative;\n  height: 200px;\n}\n@media screen and (max-width: 1100px) {\n  .communication-feedback {\n    width: calc(100% - 0px);\n  }\n}\n.communication-feedback mark {\n  display: block;\n  background: transparent;\n  margin: 16px;\n}\n.communication-feedback mark span {\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  color: #be0005;\n  font-size: 18px;\n}\n.communication-feedback mark cite {\n  display: block;\n  box-sizing: border-box;\n  background: url(" + ___CSS_LOADER_URL___36___ + ") no-repeat left 10px;\n  padding: 4px 0 4px 82px;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  font-size: 36px;\n}\n@media screen and (max-width: 560px) {\n  .communication-feedback mark cite {\n    font-size: 28px;\n  }\n}\n.communication-feedback mark cite em {\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: 400;\n  display: block;\n  color: #be0005;\n  font-size: 16px;\n}\n.communication-feedback .btn {\n  position: absolute;\n  bottom: 10px;\n  right: 40px;\n}\n@media screen and (max-width: 560px) {\n  .communication-feedback .btn {\n    position: unset;\n    margin: 0 auto 20px;\n  }\n}\n@media screen and (max-width: 560px) {\n  .communication-feedback {\n    flex-direction: column;\n    height: auto;\n  }\n}\n.communication .hr {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(100% - 0px);\n}\n.region-select {\n  position: relative;\n  padding: 8px 0 15px;\n}\n.region-select label {\n  position: relative;\n  display: block;\n  width: 100%;\n}\n.region-select input {\n  width: 100%;\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: 400;\n}\n.region-select input:focus {\n  outline: none;\n}\n.region-select button {\n  background: #444;\n  position: absolute;\n  top: 0;\n  right: -3px;\n}\n.region-select button.active {\n  display: flex;\n}\n.region-select ul {\n  width: 300px;\n  position: absolute;\n  top: 47px;\n  left: 0;\n  z-index: 1;\n  border: 1px solid #b3b3b3;\n  background: #ffffff;\n  padding: 10px 0;\n}\n.region-select ul li {\n  width: 100%;\n  display: flex;\n  height: 30px;\n  overflow: hidden;\n}\n.region-select ul li a {\n  display: block;\n  color: #444;\n  padding-left: 10px;\n  text-decoration: none;\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: 400;\n  text-transform: none;\n  font-size: 18px;\n  white-space: nowrap;\n}\n@keyframes fullexpand {\n  /* В этих ключевых кадрах анимация стационарна */\n  0%,\n  20%,\n  40%,\n  60%,\n  80%,\n  100% {\n    margin-left: 100%;\n    opacity: 0;\n  }\n  /* В этих — оживает */\n  4%,\n  24%,\n  44%,\n  64%,\n  84% {\n    margin-left: 80%;\n    opacity: 0.3;\n  }\n  /* В этих — плавно заполняется */\n  16%,\n  36%,\n  56%,\n  76%,\n  96% {\n    margin-left: 60%;\n    opacity: 0.7;\n  }\n  /* В этих ключевых кадрах индикатор выполнения завершил свой путь */\n  17%,\n  37%,\n  57%,\n  77%,\n  97% {\n    margin-left: 40%;\n    opacity: 0.3;\n  }\n  /* В этих ключевых кадрах индикатор выполнения исчезнет, а затем возобновит цикл */\n  18%,\n  38%,\n  58%,\n  78%,\n  98% {\n    margin-left: 0%;\n    opacity: 0;\n  }\n}\n.slider-box {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(100% - 0px);\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  background-color: #ffffff;\n  padding: 36px 42px 32px 42px;\n}\n.slider-box p {\n  padding: 4px 0 20px;\n  font-size: 17px;\n}\n.slider-box p a {\n  color: #be0005;\n}\n.slider-carousel {\n  position: relative;\n  width: 100%;\n}\n.slider-carousel > a {\n  position: absolute;\n  top: 76px;\n  width: 28px;\n  height: 54px;\n}\n.slider-carousel > ul {\n  display: none;\n  opacity: 0;\n  width: 100%;\n  justify-content: space-around;\n}\n.slider-carousel > ul.active {\n  height: auto;\n  display: flex;\n  opacity: 1;\n}\n.slider-left {\n  left: -24px;\n  background: url(" + ___CSS_LOADER_URL___37___ + ") no-repeat left 0px;\n}\n.slider-right {\n  right: -24px;\n  background: url(" + ___CSS_LOADER_URL___38___ + ") no-repeat left 0px;\n}\n.slider-li {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(18.333333333333336% - 0px);\n  text-align: center;\n}\n@media screen and (max-width: 960px) {\n  .slider-li {\n    width: calc(25% - 0px);\n  }\n}\n@media screen and (max-width: 780px) {\n  .slider-li {\n    width: calc(33.333333333333336% - 0px);\n  }\n}\n@media screen and (max-width: 560px) {\n  .slider-li {\n    width: calc(66.66666666666667% - 0px);\n  }\n}\n.slider-li img {\n  width: 100%;\n  padding-bottom: 2px;\n}\n.slider-li a {\n  color: #0a0a0a;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  text-decoration: none;\n  text-transform: uppercase;\n  font-size: 30px;\n  display: block;\n}\n.slider-li a span {\n  display: block;\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: 400;\n  font-size: 13px;\n}\n.slider-li.inactive {\n  display: none;\n}\n.slider-controls {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 31px;\n  height: 28px;\n}\n.slider-dots {\n  height: 100%;\n  width: 50%;\n  padding-right: 30px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n}\n.slider-dots a {\n  display: inline-block;\n  width: 15px;\n  height: 15px;\n  border: 2px solid #0a0a0a;\n  border-radius: 50%;\n  margin-left: 5px;\n}\n.slider-dots a.active,\n.slider-dots a:hover {\n  background-color: #0a0a0a;\n}\n@media screen and (max-width: 780px) {\n  .slider-dots {\n    display: none;\n  }\n}\n.slider-all {\n  height: 100%;\n  width: 50%;\n  padding-left: 30px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  border-left: 1px solid #0a0a0a;\n}\n.slider-all a {\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  color: #be0005;\n  text-decoration: none;\n  font-size: 24px;\n  display: inline-block;\n  margin-top: 4px;\n}\n@media screen and (max-width: 780px) {\n  .slider-all a {\n    height: 50px;\n    padding: 0 28px;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    background: #be0005;\n    color: #ffffff;\n    cursor: pointer;\n    text-decoration: none;\n    font-size: 26px;\n    line-height: 100%;\n    font-family: \"Bebas Neue\", sans-serif;\n    font-weight: 400;\n  }\n  .slider-all a > * {\n    display: block;\n    margin-top: 7px;\n  }\n}\n@media screen and (max-width: 780px) {\n  .slider-all {\n    border: none;\n    justify-content: center;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n}\n.services-img {\n  width: 50%;\n  min-height: 550px;\n  padding: 46px 30px 10px 101px;\n}\n.services-img h2 {\n  color: #ffffff;\n  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.8);\n  margin-bottom: 12px;\n}\n.services-img p {\n  color: #ffffff;\n  font-size: 18px;\n  line-height: 140%;\n  text-shadow: 0 0 50px #000;\n}\n.cite-box {\n  justify-content: center;\n  align-items: center;\n  background: #323232;\n  padding: 42px;\n  border-bottom: 2px solid #ffffff;\n}\n.cite-box h2 {\n  color: #ffffff;\n}\n.cite-box cite {\n  display: inline-block;\n  width: 70%;\n  padding-left: 75px;\n  background: url(" + ___CSS_LOADER_URL___36___ + ") no-repeat left 5px;\n  background-size: 60px auto;\n  color: #ffffff;\n  font-size: 20px;\n  text-align: left;\n}\n.science-box {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n  justify-content: space-around;\n  background-image: url(" + ___CSS_LOADER_URL___39___ + ");\n  background-position: left bottom;\n  color: #ffffff;\n  padding: 42px;\n}\n@media screen and (max-width: 960px) {\n  .science-box {\n    justify-content: space-between;\n    background-size: auto 100%;\n    background-position: right bottom;\n  }\n}\n@media screen and (max-width: 780px) {\n  .science-box {\n    text-align: center;\n  }\n}\n@media screen and (max-width: 560px) {\n  .science-box {\n    padding-right: 16px;\n    padding-left: 16px;\n  }\n}\n.science-left {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(41.66666666666667% - 0px);\n}\n@media screen and (max-width: 960px) {\n  .science-left {\n    width: calc(50% - 0px);\n  }\n}\n@media screen and (max-width: 780px) {\n  .science-left {\n    width: calc(100% - 0px);\n  }\n}\n.science-left h2 {\n  font-size: 60px;\n}\n.science-left p {\n  color: #ffffff;\n}\n@media screen and (max-width: 780px) {\n  .science-left p {\n    margin-bottom: 32px;\n  }\n}\n.science-right {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(41.66666666666667% - 0px);\n}\n@media screen and (max-width: 960px) {\n  .science-right {\n    width: calc(41.66666666666667% - 0px);\n  }\n}\n@media screen and (max-width: 780px) {\n  .science-right {\n    width: calc(100% - 0px);\n  }\n}\n.science-right mark {\n  display: block;\n  background: url(" + ___CSS_LOADER_URL___40___ + ") no-repeat left 0px;\n  min-height: 80px;\n  color: #ffffff;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  font-size: 40px;\n  padding: 10px 0 0 70px;\n  line-height: 27px;\n  width: 276px;\n  text-align: left;\n  white-space: nowrap;\n}\n@media screen and (max-width: 780px) {\n  .science-right mark {\n    margin: 0 auto;\n  }\n}\n@media screen and (max-width: 560px) {\n  .science-right mark {\n    display: inline-block;\n    font-size: 30px;\n    margin: 0 auto;\n    width: auto;\n  }\n}\n.science-right em {\n  display: block;\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: 400;\n  font-size: 20px;\n}\n.zip-box {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n  height: 70px;\n  justify-content: center;\n  align-items: center;\n  background: #ffffff;\n}\n@media screen and (max-width: 960px) {\n  .zip-box {\n    height: auto;\n    flex-direction: column;\n    padding: 16px;\n  }\n}\n.zip-box.gray {\n  background: #f5f5f5;\n  height: 104px;\n}\n@media screen and (max-width: 960px) {\n  .zip-box.gray {\n    height: auto;\n  }\n}\n.zip-box > div {\n  margin: 7px 30px 0;\n}\n.zip-box span {\n  display: block;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  font-size: 28px;\n  text-transform: uppercase;\n  margin-top: 5px;\n}\n.zip-box em {\n  color: #be0005;\n}\n.footer-box {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n  justify-content: space-between;\n  flex-direction: column;\n  background: #63656a;\n}\n.footer-links {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n  justify-content: space-between;\n  padding: 47px 0 26px;\n}\n@media screen and (max-width: 960px) {\n  .footer-links {\n    justify-content: center;\n  }\n}\n.footer-links > div {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(33.333333333333336% - 0px);\n}\n@media screen and (max-width: 960px) {\n  .footer-links > div {\n    width: calc(100% - 0px);\n  }\n}\n.footer-links h5 {\n  color: #ffffff;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  font-size: 26px;\n  margin-bottom: 2px;\n}\n@media screen and (max-width: 960px) {\n  .footer-links_media,\n  .footer-links_other {\n    text-align: center;\n  }\n}\n.footer-links_media li,\n.footer-links_other li {\n  display: block;\n}\n.footer-links_media a,\n.footer-links_other a {\n  color: #ffffff;\n  font-size: inherit;\n}\n.footer-links_media {\n  text-align: left;\n  padding-left: 100px;\n}\n@media screen and (max-width: 960px) {\n  .footer-links_media {\n    text-align: center;\n    padding: 0;\n  }\n}\n.footer-links_socials {\n  text-align: center;\n}\n@media screen and (max-width: 960px) {\n  .footer-links_socials {\n    text-align: center;\n    padding: 20px 0;\n  }\n}\n.footer-links_socials h5 {\n  font-size: 28px;\n  margin-bottom: 20px;\n}\n.footer-links_socials li {\n  display: inline-block;\n}\n.footer-links_socials li a {\n  display: block;\n  width: 36px;\n  height: 36px;\n  text-indent: -9999px;\n  overflow: hidden;\n  margin: 0 5px;\n}\n.footer-links_socials li a.facebook {\n  background: url(" + ___CSS_LOADER_URL___41___ + ");\n  background-size: 100%;\n}\n.footer-links_socials li a.youtube {\n  background: url(" + ___CSS_LOADER_URL___42___ + ");\n  background-size: 100%;\n}\n.footer-links_socials li a.twitter {\n  background: url(" + ___CSS_LOADER_URL___43___ + ");\n  background-size: 100%;\n}\n.footer-links_socials li a.pinterest {\n  background: url(" + ___CSS_LOADER_URL___44___ + ");\n  background-size: 100%;\n}\n.footer-links_socials li a.email {\n  background: url(" + ___CSS_LOADER_URL___45___ + ");\n  background-size: 100%;\n}\n.footer-links_other {\n  text-align: right;\n  padding-right: 100px;\n}\n@media screen and (max-width: 960px) {\n  .footer-links_other {\n    text-align: center;\n    padding: 0;\n  }\n}\n.footer-copyrights {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 46px;\n  background: #000;\n}\n.footer-copyrights p {\n  color: #ffffff;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  font-size: 24px;\n}\n.footer-terms {\n  display: flex;\n  align-items: center;\n  height: 84px;\n  padding: 0 35px;\n  background: #ffffff;\n}\n.footer-terms a {\n  display: inline-block;\n  margin: 0 5px;\n  color: #0a0a0a;\n  font-size: 14px;\n}\n@media screen and (max-width: 960px) {\n  .footer-terms {\n    justify-content: center;\n    padding: 0;\n  }\n}\n.expertise-box {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(100% - 0px);\n  margin: 0 auto;\n  padding: 67px 118px 0;\n  text-align: center;\n  background: #ffffff;\n}\n@media screen and (max-width: 960px) {\n  .expertise-box {\n    padding: 32px;\n  }\n}\n.expertise-box p {\n  font-family: \"Aleo\", \"Times New Roman\", serif;\n  font-weight: 400;\n  font-size: 22px;\n}\n.expertise-items {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n  justify-content: space-between;\n  margin-top: 15px;\n}\n.expertise-items li {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(16.666666666666668% - 0px);\n  margin-bottom: 30px;\n  text-align: center;\n}\n@media screen and (max-width: 780px) {\n  .expertise-items li {\n    width: calc(25% - 0px);\n  }\n}\n@media screen and (max-width: 560px) {\n  .expertise-items li {\n    width: calc(41.66666666666667% - 0px);\n  }\n}\n.expertise-items li img {\n  width: 50%;\n}\n.expertise-items li span {\n  display: block;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: 400;\n  color: #0a0a0a;\n  font-size: 24px;\n  margin-top: 10px;\n}\n.select-block-container {\n  justify-content: center;\n  align-items: center;\n}\n.select-block-row {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(100% - 0px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-items: center;\n  background: #f5f5f5;\n}\n.select-block-row h2 {\n  margin-top: 20px;\n  white-space: nowrap;\n  margin-right: 10px;\n}\n.breadcrumbs-box {\n  height: 40px;\n  justify-content: flex-start;\n  align-items: center;\n  background: #444;\n  color: #ffffff;\n  padding-left: 20px;\n}\n.breadcrumbs-box a {\n  color: #ffffff;\n}\n.breadcrumbs-box a:hover {\n  text-decoration: underline;\n}\n.breadcrumbs-box em {\n  padding: 0 4px;\n}\n.detail {\n  justify-content: space-between;\n  border-bottom: 2px solid #444;\n  background: #ffffff;\n}\n.detail aside {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(31.666666666666668% - 0px);\n}\n@media screen and (max-width: 780px) {\n  .detail aside {\n    display: none;\n  }\n}\n.detail-content {\n  box-sizing: border-box;\n  word-wrap: break-word;\n  margin-left: 0px;\n  margin-right: 0px;\n  width: calc(68.33333333333333% - 0px);\n  padding-right: 32px;\n  padding-left: 32px;\n}\n@media screen and (max-width: 780px) {\n  .detail-content {\n    width: calc(100% - 0px);\n  }\n}\n.detail-content h1 {\n  font-size: 60px;\n  border-bottom: 1px solid #cbcbcb;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  margin-bottom: 34px;\n}\n.detail-content h2 {\n  font-size: 30px;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  margin: 0;\n}\n.detail-content img {\n  display: block;\n  width: 100%;\n  padding-bottom: 32px;\n}\n.detail-content p {\n  padding-bottom: 32px;\n}\n.share {\n  color: #444;\n  background: #ffffff;\n}\n.share-col {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0px;\n  margin-right: 0px;\n  justify-content: flex-start;\n  align-items: center;\n  padding-left: 32px;\n}\n.share-cell {\n  height: 79px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  border-bottom: 1px solid #444;\n}\n.share-cell span {\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: 400;\n  color: #444;\n  margin-right: 14px;\n}\n.share-cell a {\n  display: block;\n  width: 20px;\n  height: 20px;\n  margin-right: 14px;\n}\n.share-cell a img {\n  width: 20px;\n  height: 20px;\n}\n.region-select label {\n  display: block;\n  width: 100%;\n}\n.region-select-search {\n  width: 100%;\n}\n.region-select-list a {\n  display: block!important;\n  color: #0a0a0a;\n}\n.aside {\n  background: #ffffff;\n}\n.aside-region {\n  width: 100%;\n  padding: 32px;\n  background: url(" + ___CSS_LOADER_URL___46___ + ") no-repeat right 130px #ffffff;\n}\n.aside-region h3 {\n  font-size: 30px;\n}\n.aside-region p {\n  padding-bottom: 16px;\n}\n.aside-region-select {\n  width: 230px;\n}\n.aside-call {\n  width: 100%;\n  padding-top: 42px;\n  padding-bottom: 42px;\n  padding-right: 32px;\n  padding-left: 32px;\n  background: url(" + ___CSS_LOADER_URL___47___ + ");\n}\n.aside-call input[type=\"text\"] {\n  width: 100%;\n  margin: 5px 0;\n}\n.aside-call button {\n  margin: 5px 0;\n  padding: 5px 20px;\n  background: url(" + ___CSS_LOADER_URL___48___ + ") repeat;\n}\n.aside-call button:hover {\n  background: #be0005;\n}\n.aside-call p {\n  padding: 5px 0;\n}\n.aside-call p.tel {\n  padding-bottom: 20px;\n  margin-bottom: 14px;\n  border-bottom: 1px solid #444;\n}\n.aside-call p.tel span {\n  color: #be0005;\n  font-size: 30px;\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n}\n.aside-call mark {\n  display: block;\n  font-size: 14px;\n}\n.aside-info {\n  padding: 32px;\n  text-align: center;\n  background: #be0005;\n}\n.aside-info span {\n  font-family: \"Bebas Neue\", sans-serif;\n  font-weight: bold;\n  font-size: 40px;\n  display: block;\n  margin-bottom: 16px;\n}\n.aside-info mark {\n  color: #ffffff;\n}\n.aside-banner {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n", ""]);



        /***/ }),

    /***/ "./node_modules/css-loader/dist/runtime/api.js":
    /*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        /*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
        module.exports = function (useSourceMap) {
            var list = []; // return the list of modules as css string

            list.toString = function toString() {
                return this.map(function (item) {
                    var content = cssWithMappingToString(item, useSourceMap);

                    if (item[2]) {
                        return '@media ' + item[2] + '{' + content + '}';
                    } else {
                        return content;
                    }
                }).join('');
            }; // import a list of modules into the list


            list.i = function (modules, mediaQuery) {
                if (typeof modules === 'string') {
                    modules = [[null, modules, '']];
                }

                var alreadyImportedModules = {};

                for (var i = 0; i < this.length; i++) {
                    var id = this[i][0];

                    if (id != null) {
                        alreadyImportedModules[id] = true;
                    }
                }

                for (i = 0; i < modules.length; i++) {
                    var item = modules[i]; // skip already imported module
                    // this implementation is not 100% perfect for weird media query combinations
                    // when a module is imported multiple times with different media queries.
                    // I hope this will never occur (Hey this way we have smaller bundles)

                    if (item[0] == null || !alreadyImportedModules[item[0]]) {
                        if (mediaQuery && !item[2]) {
                            item[2] = mediaQuery;
                        } else if (mediaQuery) {
                            item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';
                        }

                        list.push(item);
                    }
                }
            };

            return list;
        };

        function cssWithMappingToString(item, useSourceMap) {
            var content = item[1] || '';
            var cssMapping = item[3];

            if (!cssMapping) {
                return content;
            }

            if (useSourceMap && typeof btoa === 'function') {
                var sourceMapping = toComment(cssMapping);
                var sourceURLs = cssMapping.sources.map(function (source) {
                    return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
                });
                return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
            }

            return [content].join('\n');
        } // Adapted from convert-source-map (MIT)


        function toComment(sourceMap) {
            // eslint-disable-next-line no-undef
            var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
            var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
            return '/*# ' + data + ' */';
        }

        /***/ }),

    /***/ "./node_modules/css-loader/dist/runtime/url-escape.js":
    /*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/url-escape.js ***!
  \************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        module.exports = function escape(url, needQuotes) {
            if (typeof url !== 'string') {
                return url;
            } // If url is already wrapped in quotes, remove them


            if (/^['"].*['"]$/.test(url)) {
                url = url.slice(1, -1);
            } // Should url be wrapped?
            // See https://drafts.csswg.org/css-values-3/#urls


            if (/["'() \t\n]/.test(url) || needQuotes) {
                return '"' + url.replace(/"/g, '\\"').replace(/\n/g, '\\n') + '"';
            }

            return url;
        };

        /***/ }),

    /***/ "./node_modules/events/events.js":
    /*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



        var R = typeof Reflect === 'object' ? Reflect : null
        var ReflectApply = R && typeof R.apply === 'function'
            ? R.apply
            : function ReflectApply(target, receiver, args) {
                return Function.prototype.apply.call(target, receiver, args);
            }

        var ReflectOwnKeys
        if (R && typeof R.ownKeys === 'function') {
            ReflectOwnKeys = R.ownKeys
        } else if (Object.getOwnPropertySymbols) {
            ReflectOwnKeys = function ReflectOwnKeys(target) {
                return Object.getOwnPropertyNames(target)
                    .concat(Object.getOwnPropertySymbols(target));
            };
        } else {
            ReflectOwnKeys = function ReflectOwnKeys(target) {
                return Object.getOwnPropertyNames(target);
            };
        }

        function ProcessEmitWarning(warning) {
            if (console && console.warn) console.warn(warning);
        }

        var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
            return value !== value;
        }

        function EventEmitter() {
            EventEmitter.init.call(this);
        }
        module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
        EventEmitter.EventEmitter = EventEmitter;

        EventEmitter.prototype._events = undefined;
        EventEmitter.prototype._eventsCount = 0;
        EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
        var defaultMaxListeners = 10;

        Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
            enumerable: true,
            get: function() {
                return defaultMaxListeners;
            },
            set: function(arg) {
                if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
                    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
                }
                defaultMaxListeners = arg;
            }
        });

        EventEmitter.init = function() {

            if (this._events === undefined ||
                this._events === Object.getPrototypeOf(this)._events) {
                this._events = Object.create(null);
                this._eventsCount = 0;
            }

            this._maxListeners = this._maxListeners || undefined;
        };

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
        EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
            if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
                throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
            }
            this._maxListeners = n;
            return this;
        };

        function $getMaxListeners(that) {
            if (that._maxListeners === undefined)
                return EventEmitter.defaultMaxListeners;
            return that._maxListeners;
        }

        EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
            return $getMaxListeners(this);
        };

        EventEmitter.prototype.emit = function emit(type) {
            var args = [];
            for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
            var doError = (type === 'error');

            var events = this._events;
            if (events !== undefined)
                doError = (doError && events.error === undefined);
            else if (!doError)
                return false;

            // If there is no 'error' event listener then throw.
            if (doError) {
                var er;
                if (args.length > 0)
                    er = args[0];
                if (er instanceof Error) {
                    // Note: The comments on the `throw` lines are intentional, they show
                    // up in Node's output if this results in an unhandled exception.
                    throw er; // Unhandled 'error' event
                }
                // At least give some kind of context to the user
                var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
                err.context = er;
                throw err; // Unhandled 'error' event
            }

            var handler = events[type];

            if (handler === undefined)
                return false;

            if (typeof handler === 'function') {
                ReflectApply(handler, this, args);
            } else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    ReflectApply(listeners[i], this, args);
            }

            return true;
        };

        function _addListener(target, type, listener, prepend) {
            var m;
            var events;
            var existing;

            if (typeof listener !== 'function') {
                throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
            }

            events = target._events;
            if (events === undefined) {
                events = target._events = Object.create(null);
                target._eventsCount = 0;
            } else {
                // To avoid recursion in the case that type === "newListener"! Before
                // adding it to the listeners, first emit "newListener".
                if (events.newListener !== undefined) {
                    target.emit('newListener', type,
                        listener.listener ? listener.listener : listener);

                    // Re-assign `events` because a newListener handler could have caused the
                    // this._events to be assigned to a new object
                    events = target._events;
                }
                existing = events[type];
            }

            if (existing === undefined) {
                // Optimize the case of one listener. Don't need the extra array object.
                existing = events[type] = listener;
                ++target._eventsCount;
            } else {
                if (typeof existing === 'function') {
                    // Adding the second element, need to change to array.
                    existing = events[type] =
                        prepend ? [listener, existing] : [existing, listener];
                    // If we've already got an array, just append.
                } else if (prepend) {
                    existing.unshift(listener);
                } else {
                    existing.push(listener);
                }

                // Check for listener leak
                m = $getMaxListeners(target);
                if (m > 0 && existing.length > m && !existing.warned) {
                    existing.warned = true;
                    // No error code for this since it is a Warning
                    // eslint-disable-next-line no-restricted-syntax
                    var w = new Error('Possible EventEmitter memory leak detected. ' +
                        existing.length + ' ' + String(type) + ' listeners ' +
                        'added. Use emitter.setMaxListeners() to ' +
                        'increase limit');
                    w.name = 'MaxListenersExceededWarning';
                    w.emitter = target;
                    w.type = type;
                    w.count = existing.length;
                    ProcessEmitWarning(w);
                }
            }

            return target;
        }

        EventEmitter.prototype.addListener = function addListener(type, listener) {
            return _addListener(this, type, listener, false);
        };

        EventEmitter.prototype.on = EventEmitter.prototype.addListener;

        EventEmitter.prototype.prependListener =
            function prependListener(type, listener) {
                return _addListener(this, type, listener, true);
            };

        function onceWrapper() {
            var args = [];
            for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);
            if (!this.fired) {
                this.target.removeListener(this.type, this.wrapFn);
                this.fired = true;
                ReflectApply(this.listener, this.target, args);
            }
        }

        function _onceWrap(target, type, listener) {
            var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
            var wrapped = onceWrapper.bind(state);
            wrapped.listener = listener;
            state.wrapFn = wrapped;
            return wrapped;
        }

        EventEmitter.prototype.once = function once(type, listener) {
            if (typeof listener !== 'function') {
                throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
            }
            this.on(type, _onceWrap(this, type, listener));
            return this;
        };

        EventEmitter.prototype.prependOnceListener =
            function prependOnceListener(type, listener) {
                if (typeof listener !== 'function') {
                    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
                }
                this.prependListener(type, _onceWrap(this, type, listener));
                return this;
            };

// Emits a 'removeListener' event if and only if the listener was removed.
        EventEmitter.prototype.removeListener =
            function removeListener(type, listener) {
                var list, events, position, i, originalListener;

                if (typeof listener !== 'function') {
                    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
                }

                events = this._events;
                if (events === undefined)
                    return this;

                list = events[type];
                if (list === undefined)
                    return this;

                if (list === listener || list.listener === listener) {
                    if (--this._eventsCount === 0)
                        this._events = Object.create(null);
                    else {
                        delete events[type];
                        if (events.removeListener)
                            this.emit('removeListener', type, list.listener || listener);
                    }
                } else if (typeof list !== 'function') {
                    position = -1;

                    for (i = list.length - 1; i >= 0; i--) {
                        if (list[i] === listener || list[i].listener === listener) {
                            originalListener = list[i].listener;
                            position = i;
                            break;
                        }
                    }

                    if (position < 0)
                        return this;

                    if (position === 0)
                        list.shift();
                    else {
                        spliceOne(list, position);
                    }

                    if (list.length === 1)
                        events[type] = list[0];

                    if (events.removeListener !== undefined)
                        this.emit('removeListener', type, originalListener || listener);
                }

                return this;
            };

        EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

        EventEmitter.prototype.removeAllListeners =
            function removeAllListeners(type) {
                var listeners, events, i;

                events = this._events;
                if (events === undefined)
                    return this;

                // not listening for removeListener, no need to emit
                if (events.removeListener === undefined) {
                    if (arguments.length === 0) {
                        this._events = Object.create(null);
                        this._eventsCount = 0;
                    } else if (events[type] !== undefined) {
                        if (--this._eventsCount === 0)
                            this._events = Object.create(null);
                        else
                            delete events[type];
                    }
                    return this;
                }

                // emit removeListener for all listeners on all events
                if (arguments.length === 0) {
                    var keys = Object.keys(events);
                    var key;
                    for (i = 0; i < keys.length; ++i) {
                        key = keys[i];
                        if (key === 'removeListener') continue;
                        this.removeAllListeners(key);
                    }
                    this.removeAllListeners('removeListener');
                    this._events = Object.create(null);
                    this._eventsCount = 0;
                    return this;
                }

                listeners = events[type];

                if (typeof listeners === 'function') {
                    this.removeListener(type, listeners);
                } else if (listeners !== undefined) {
                    // LIFO order
                    for (i = listeners.length - 1; i >= 0; i--) {
                        this.removeListener(type, listeners[i]);
                    }
                }

                return this;
            };

        function _listeners(target, type, unwrap) {
            var events = target._events;

            if (events === undefined)
                return [];

            var evlistener = events[type];
            if (evlistener === undefined)
                return [];

            if (typeof evlistener === 'function')
                return unwrap ? [evlistener.listener || evlistener] : [evlistener];

            return unwrap ?
                unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
        }

        EventEmitter.prototype.listeners = function listeners(type) {
            return _listeners(this, type, true);
        };

        EventEmitter.prototype.rawListeners = function rawListeners(type) {
            return _listeners(this, type, false);
        };

        EventEmitter.listenerCount = function(emitter, type) {
            if (typeof emitter.listenerCount === 'function') {
                return emitter.listenerCount(type);
            } else {
                return listenerCount.call(emitter, type);
            }
        };

        EventEmitter.prototype.listenerCount = listenerCount;
        function listenerCount(type) {
            var events = this._events;

            if (events !== undefined) {
                var evlistener = events[type];

                if (typeof evlistener === 'function') {
                    return 1;
                } else if (evlistener !== undefined) {
                    return evlistener.length;
                }
            }

            return 0;
        }

        EventEmitter.prototype.eventNames = function eventNames() {
            return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
        };

        function arrayClone(arr, n) {
            var copy = new Array(n);
            for (var i = 0; i < n; ++i)
                copy[i] = arr[i];
            return copy;
        }

        function spliceOne(list, index) {
            for (; index + 1 < list.length; index++)
                list[index] = list[index + 1];
            list.pop();
        }

        function unwrapListeners(arr) {
            var ret = new Array(arr.length);
            for (var i = 0; i < ret.length; ++i) {
                ret[i] = arr[i].listener || arr[i];
            }
            return ret;
        }


        /***/ }),

    /***/ "./node_modules/html-entities/index.js":
    /*!*********************************************!*\
  !*** ./node_modules/html-entities/index.js ***!
  \*********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = {
            XmlEntities: __webpack_require__(/*! ./lib/xml-entities.js */ "./node_modules/html-entities/lib/xml-entities.js"),
            Html4Entities: __webpack_require__(/*! ./lib/html4-entities.js */ "./node_modules/html-entities/lib/html4-entities.js"),
            Html5Entities: __webpack_require__(/*! ./lib/html5-entities.js */ "./node_modules/html-entities/lib/html5-entities.js"),
            AllHtmlEntities: __webpack_require__(/*! ./lib/html5-entities.js */ "./node_modules/html-entities/lib/html5-entities.js")
        };


        /***/ }),

    /***/ "./node_modules/html-entities/lib/html4-entities.js":
    /*!**********************************************************!*\
  !*** ./node_modules/html-entities/lib/html4-entities.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];
        var HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];

        var alphaIndex = {};
        var numIndex = {};

        var i = 0;
        var length = HTML_ALPHA.length;
        while (i < length) {
            var a = HTML_ALPHA[i];
            var c = HTML_CODES[i];
            alphaIndex[a] = String.fromCharCode(c);
            numIndex[c] = a;
            i++;
        }

        /**
         * @constructor
         */
        function Html4Entities() {}

        /**
         * @param {String} str
         * @returns {String}
         */
        Html4Entities.prototype.decode = function(str) {
            if (!str || !str.length) {
                return '';
            }
            return str.replace(/&(#?[\w\d]+);?/g, function(s, entity) {
                var chr;
                if (entity.charAt(0) === "#") {
                    var code = entity.charAt(1).toLowerCase() === 'x' ?
                        parseInt(entity.substr(2), 16) :
                        parseInt(entity.substr(1));

                    if (!(isNaN(code) || code < -32768 || code > 65535)) {
                        chr = String.fromCharCode(code);
                    }
                } else {
                    chr = alphaIndex[entity];
                }
                return chr || s;
            });
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html4Entities.decode = function(str) {
            return new Html4Entities().decode(str);
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html4Entities.prototype.encode = function(str) {
            if (!str || !str.length) {
                return '';
            }
            var strLength = str.length;
            var result = '';
            var i = 0;
            while (i < strLength) {
                var alpha = numIndex[str.charCodeAt(i)];
                result += alpha ? "&" + alpha + ";" : str.charAt(i);
                i++;
            }
            return result;
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html4Entities.encode = function(str) {
            return new Html4Entities().encode(str);
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html4Entities.prototype.encodeNonUTF = function(str) {
            if (!str || !str.length) {
                return '';
            }
            var strLength = str.length;
            var result = '';
            var i = 0;
            while (i < strLength) {
                var cc = str.charCodeAt(i);
                var alpha = numIndex[cc];
                if (alpha) {
                    result += "&" + alpha + ";";
                } else if (cc < 32 || cc > 126) {
                    result += "&#" + cc + ";";
                } else {
                    result += str.charAt(i);
                }
                i++;
            }
            return result;
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html4Entities.encodeNonUTF = function(str) {
            return new Html4Entities().encodeNonUTF(str);
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html4Entities.prototype.encodeNonASCII = function(str) {
            if (!str || !str.length) {
                return '';
            }
            var strLength = str.length;
            var result = '';
            var i = 0;
            while (i < strLength) {
                var c = str.charCodeAt(i);
                if (c <= 255) {
                    result += str[i++];
                    continue;
                }
                result += '&#' + c + ';';
                i++;
            }
            return result;
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html4Entities.encodeNonASCII = function(str) {
            return new Html4Entities().encodeNonASCII(str);
        };

        module.exports = Html4Entities;


        /***/ }),

    /***/ "./node_modules/html-entities/lib/html5-entities.js":
    /*!**********************************************************!*\
  !*** ./node_modules/html-entities/lib/html5-entities.js ***!
  \**********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['CloseCurlyDoubleQuote', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['CloseCurlyQuote', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];

        var alphaIndex = {};
        var charIndex = {};

        createIndexes(alphaIndex, charIndex);

        /**
         * @constructor
         */
        function Html5Entities() {}

        /**
         * @param {String} str
         * @returns {String}
         */
        Html5Entities.prototype.decode = function(str) {
            if (!str || !str.length) {
                return '';
            }
            return str.replace(/&(#?[\w\d]+);?/g, function(s, entity) {
                var chr;
                if (entity.charAt(0) === "#") {
                    var code = entity.charAt(1) === 'x' ?
                        parseInt(entity.substr(2).toLowerCase(), 16) :
                        parseInt(entity.substr(1));

                    if (!(isNaN(code) || code < -32768 || code > 65535)) {
                        chr = String.fromCharCode(code);
                    }
                } else {
                    chr = alphaIndex[entity];
                }
                return chr || s;
            });
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html5Entities.decode = function(str) {
            return new Html5Entities().decode(str);
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html5Entities.prototype.encode = function(str) {
            if (!str || !str.length) {
                return '';
            }
            var strLength = str.length;
            var result = '';
            var i = 0;
            while (i < strLength) {
                var charInfo = charIndex[str.charCodeAt(i)];
                if (charInfo) {
                    var alpha = charInfo[str.charCodeAt(i + 1)];
                    if (alpha) {
                        i++;
                    } else {
                        alpha = charInfo[''];
                    }
                    if (alpha) {
                        result += "&" + alpha + ";";
                        i++;
                        continue;
                    }
                }
                result += str.charAt(i);
                i++;
            }
            return result;
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html5Entities.encode = function(str) {
            return new Html5Entities().encode(str);
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html5Entities.prototype.encodeNonUTF = function(str) {
            if (!str || !str.length) {
                return '';
            }
            var strLength = str.length;
            var result = '';
            var i = 0;
            while (i < strLength) {
                var c = str.charCodeAt(i);
                var charInfo = charIndex[c];
                if (charInfo) {
                    var alpha = charInfo[str.charCodeAt(i + 1)];
                    if (alpha) {
                        i++;
                    } else {
                        alpha = charInfo[''];
                    }
                    if (alpha) {
                        result += "&" + alpha + ";";
                        i++;
                        continue;
                    }
                }
                if (c < 32 || c > 126) {
                    result += '&#' + c + ';';
                } else {
                    result += str.charAt(i);
                }
                i++;
            }
            return result;
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html5Entities.encodeNonUTF = function(str) {
            return new Html5Entities().encodeNonUTF(str);
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html5Entities.prototype.encodeNonASCII = function(str) {
            if (!str || !str.length) {
                return '';
            }
            var strLength = str.length;
            var result = '';
            var i = 0;
            while (i < strLength) {
                var c = str.charCodeAt(i);
                if (c <= 255) {
                    result += str[i++];
                    continue;
                }
                result += '&#' + c + ';';
                i++
            }
            return result;
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        Html5Entities.encodeNonASCII = function(str) {
            return new Html5Entities().encodeNonASCII(str);
        };

        /**
         * @param {Object} alphaIndex Passed by reference.
         * @param {Object} charIndex Passed by reference.
         */
        function createIndexes(alphaIndex, charIndex) {
            var i = ENTITIES.length;
            var _results = [];
            while (i--) {
                var e = ENTITIES[i];
                var alpha = e[0];
                var chars = e[1];
                var chr = chars[0];
                var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;
                var charInfo;
                if (addChar) {
                    charInfo = charIndex[chr] = charIndex[chr] || {};
                }
                if (chars[1]) {
                    var chr2 = chars[1];
                    alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);
                    _results.push(addChar && (charInfo[chr2] = alpha));
                } else {
                    alphaIndex[alpha] = String.fromCharCode(chr);
                    _results.push(addChar && (charInfo[''] = alpha));
                }
            }
        }

        module.exports = Html5Entities;


        /***/ }),

    /***/ "./node_modules/html-entities/lib/xml-entities.js":
    /*!********************************************************!*\
  !*** ./node_modules/html-entities/lib/xml-entities.js ***!
  \********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        var ALPHA_INDEX = {
            '&lt': '<',
            '&gt': '>',
            '&quot': '"',
            '&apos': '\'',
            '&amp': '&',
            '&lt;': '<',
            '&gt;': '>',
            '&quot;': '"',
            '&apos;': '\'',
            '&amp;': '&'
        };

        var CHAR_INDEX = {
            60: 'lt',
            62: 'gt',
            34: 'quot',
            39: 'apos',
            38: 'amp'
        };

        var CHAR_S_INDEX = {
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            '\'': '&apos;',
            '&': '&amp;'
        };

        /**
         * @constructor
         */
        function XmlEntities() {}

        /**
         * @param {String} str
         * @returns {String}
         */
        XmlEntities.prototype.encode = function(str) {
            if (!str || !str.length) {
                return '';
            }
            return str.replace(/<|>|"|'|&/g, function(s) {
                return CHAR_S_INDEX[s];
            });
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        XmlEntities.encode = function(str) {
            return new XmlEntities().encode(str);
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        XmlEntities.prototype.decode = function(str) {
            if (!str || !str.length) {
                return '';
            }
            return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {
                if (s.charAt(1) === '#') {
                    var code = s.charAt(2).toLowerCase() === 'x' ?
                        parseInt(s.substr(3), 16) :
                        parseInt(s.substr(2));

                    if (isNaN(code) || code < -32768 || code > 65535) {
                        return '';
                    }
                    return String.fromCharCode(code);
                }
                return ALPHA_INDEX[s] || s;
            });
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        XmlEntities.decode = function(str) {
            return new XmlEntities().decode(str);
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        XmlEntities.prototype.encodeNonUTF = function(str) {
            if (!str || !str.length) {
                return '';
            }
            var strLength = str.length;
            var result = '';
            var i = 0;
            while (i < strLength) {
                var c = str.charCodeAt(i);
                var alpha = CHAR_INDEX[c];
                if (alpha) {
                    result += "&" + alpha + ";";
                    i++;
                    continue;
                }
                if (c < 32 || c > 126) {
                    result += '&#' + c + ';';
                } else {
                    result += str.charAt(i);
                }
                i++;
            }
            return result;
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        XmlEntities.encodeNonUTF = function(str) {
            return new XmlEntities().encodeNonUTF(str);
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        XmlEntities.prototype.encodeNonASCII = function(str) {
            if (!str || !str.length) {
                return '';
            }
            var strLenght = str.length;
            var result = '';
            var i = 0;
            while (i < strLenght) {
                var c = str.charCodeAt(i);
                if (c <= 255) {
                    result += str[i++];
                    continue;
                }
                result += '&#' + c + ';';
                i++;
            }
            return result;
        };

        /**
         * @param {String} str
         * @returns {String}
         */
        XmlEntities.encodeNonASCII = function(str) {
            return new XmlEntities().encodeNonASCII(str);
        };

        module.exports = XmlEntities;


        /***/ }),

    /***/ "./node_modules/jquery/dist/jquery.js":
    /*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
        ( function( global, factory ) {

            "use strict";

            if (  true && typeof module.exports === "object" ) {

                // For CommonJS and CommonJS-like environments where a proper `window`
                // is present, execute the factory and get jQuery.
                // For environments that do not have a `window` with a `document`
                // (such as Node.js), expose a factory as module.exports.
                // This accentuates the need for the creation of a real `window`.
                // e.g. var jQuery = require("jquery")(window);
                // See ticket #14549 for more info.
                module.exports = global.document ?
                    factory( global, true ) :
                    function( w ) {
                        if ( !w.document ) {
                            throw new Error( "jQuery requires a window with a document" );
                        }
                        return factory( w );
                    };
            } else {
                factory( global );
            }

// Pass this if window is not defined yet
        } )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
            "use strict";

            var arr = [];

            var document = window.document;

            var getProto = Object.getPrototypeOf;

            var slice = arr.slice;

            var concat = arr.concat;

            var push = arr.push;

            var indexOf = arr.indexOf;

            var class2type = {};

            var toString = class2type.toString;

            var hasOwn = class2type.hasOwnProperty;

            var fnToString = hasOwn.toString;

            var ObjectFunctionString = fnToString.call( Object );

            var support = {};

            var isFunction = function isFunction( obj ) {

                // Support: Chrome <=57, Firefox <=52
                // In some browsers, typeof returns "function" for HTML <object> elements
                // (i.e., `typeof document.createElement( "object" ) === "function"`).
                // We don't want to classify *any* DOM node as a function.
                return typeof obj === "function" && typeof obj.nodeType !== "number";
            };


            var isWindow = function isWindow( obj ) {
                return obj != null && obj === obj.window;
            };




            var preservedScriptAttributes = {
                type: true,
                src: true,
                noModule: true
            };

            function DOMEval( code, doc, node ) {
                doc = doc || document;

                var i,
                    script = doc.createElement( "script" );

                script.text = code;
                if ( node ) {
                    for ( i in preservedScriptAttributes ) {
                        if ( node[ i ] ) {
                            script[ i ] = node[ i ];
                        }
                    }
                }
                doc.head.appendChild( script ).parentNode.removeChild( script );
            }


            function toType( obj ) {
                if ( obj == null ) {
                    return obj + "";
                }

                // Support: Android <=2.3 only (functionish RegExp)
                return typeof obj === "object" || typeof obj === "function" ?
                    class2type[ toString.call( obj ) ] || "object" :
                    typeof obj;
            }
            /* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



            var
                version = "3.3.1",

                // Define a local copy of jQuery
                jQuery = function( selector, context ) {

                    // The jQuery object is actually just the init constructor 'enhanced'
                    // Need init if jQuery is called (just allow error to be thrown if not included)
                    return new jQuery.fn.init( selector, context );
                },

                // Support: Android <=4.0 only
                // Make sure we trim BOM and NBSP
                rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

            jQuery.fn = jQuery.prototype = {

                // The current version of jQuery being used
                jquery: version,

                constructor: jQuery,

                // The default length of a jQuery object is 0
                length: 0,

                toArray: function() {
                    return slice.call( this );
                },

                // Get the Nth element in the matched element set OR
                // Get the whole matched element set as a clean array
                get: function( num ) {

                    // Return all the elements in a clean array
                    if ( num == null ) {
                        return slice.call( this );
                    }

                    // Return just the one element from the set
                    return num < 0 ? this[ num + this.length ] : this[ num ];
                },

                // Take an array of elements and push it onto the stack
                // (returning the new matched element set)
                pushStack: function( elems ) {

                    // Build a new jQuery matched element set
                    var ret = jQuery.merge( this.constructor(), elems );

                    // Add the old object onto the stack (as a reference)
                    ret.prevObject = this;

                    // Return the newly-formed element set
                    return ret;
                },

                // Execute a callback for every element in the matched set.
                each: function( callback ) {
                    return jQuery.each( this, callback );
                },

                map: function( callback ) {
                    return this.pushStack( jQuery.map( this, function( elem, i ) {
                        return callback.call( elem, i, elem );
                    } ) );
                },

                slice: function() {
                    return this.pushStack( slice.apply( this, arguments ) );
                },

                first: function() {
                    return this.eq( 0 );
                },

                last: function() {
                    return this.eq( -1 );
                },

                eq: function( i ) {
                    var len = this.length,
                        j = +i + ( i < 0 ? len : 0 );
                    return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
                },

                end: function() {
                    return this.prevObject || this.constructor();
                },

                // For internal use only.
                // Behaves like an Array's method, not like a jQuery method.
                push: push,
                sort: arr.sort,
                splice: arr.splice
            };

            jQuery.extend = jQuery.fn.extend = function() {
                var options, name, src, copy, copyIsArray, clone,
                    target = arguments[ 0 ] || {},
                    i = 1,
                    length = arguments.length,
                    deep = false;

                // Handle a deep copy situation
                if ( typeof target === "boolean" ) {
                    deep = target;

                    // Skip the boolean and the target
                    target = arguments[ i ] || {};
                    i++;
                }

                // Handle case when target is a string or something (possible in deep copy)
                if ( typeof target !== "object" && !isFunction( target ) ) {
                    target = {};
                }

                // Extend jQuery itself if only one argument is passed
                if ( i === length ) {
                    target = this;
                    i--;
                }

                for ( ; i < length; i++ ) {

                    // Only deal with non-null/undefined values
                    if ( ( options = arguments[ i ] ) != null ) {

                        // Extend the base object
                        for ( name in options ) {
                            src = target[ name ];
                            copy = options[ name ];

                            // Prevent never-ending loop
                            if ( target === copy ) {
                                continue;
                            }

                            // Recurse if we're merging plain objects or arrays
                            if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
                                ( copyIsArray = Array.isArray( copy ) ) ) ) {

                                if ( copyIsArray ) {
                                    copyIsArray = false;
                                    clone = src && Array.isArray( src ) ? src : [];

                                } else {
                                    clone = src && jQuery.isPlainObject( src ) ? src : {};
                                }

                                // Never move original objects, clone them
                                target[ name ] = jQuery.extend( deep, clone, copy );

                                // Don't bring in undefined values
                            } else if ( copy !== undefined ) {
                                target[ name ] = copy;
                            }
                        }
                    }
                }

                // Return the modified object
                return target;
            };

            jQuery.extend( {

                // Unique for each copy of jQuery on the page
                expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

                // Assume jQuery is ready without the ready module
                isReady: true,

                error: function( msg ) {
                    throw new Error( msg );
                },

                noop: function() {},

                isPlainObject: function( obj ) {
                    var proto, Ctor;

                    // Detect obvious negatives
                    // Use toString instead of jQuery.type to catch host objects
                    if ( !obj || toString.call( obj ) !== "[object Object]" ) {
                        return false;
                    }

                    proto = getProto( obj );

                    // Objects with no prototype (e.g., `Object.create( null )`) are plain
                    if ( !proto ) {
                        return true;
                    }

                    // Objects with prototype are plain iff they were constructed by a global Object function
                    Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
                    return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
                },

                isEmptyObject: function( obj ) {

                    /* eslint-disable no-unused-vars */
                    // See https://github.com/eslint/eslint/issues/6125
                    var name;

                    for ( name in obj ) {
                        return false;
                    }
                    return true;
                },

                // Evaluates a script in a global context
                globalEval: function( code ) {
                    DOMEval( code );
                },

                each: function( obj, callback ) {
                    var length, i = 0;

                    if ( isArrayLike( obj ) ) {
                        length = obj.length;
                        for ( ; i < length; i++ ) {
                            if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
                                break;
                            }
                        }
                    } else {
                        for ( i in obj ) {
                            if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
                                break;
                            }
                        }
                    }

                    return obj;
                },

                // Support: Android <=4.0 only
                trim: function( text ) {
                    return text == null ?
                        "" :
                        ( text + "" ).replace( rtrim, "" );
                },

                // results is for internal usage only
                makeArray: function( arr, results ) {
                    var ret = results || [];

                    if ( arr != null ) {
                        if ( isArrayLike( Object( arr ) ) ) {
                            jQuery.merge( ret,
                                typeof arr === "string" ?
                                    [ arr ] : arr
                            );
                        } else {
                            push.call( ret, arr );
                        }
                    }

                    return ret;
                },

                inArray: function( elem, arr, i ) {
                    return arr == null ? -1 : indexOf.call( arr, elem, i );
                },

                // Support: Android <=4.0 only, PhantomJS 1 only
                // push.apply(_, arraylike) throws on ancient WebKit
                merge: function( first, second ) {
                    var len = +second.length,
                        j = 0,
                        i = first.length;

                    for ( ; j < len; j++ ) {
                        first[ i++ ] = second[ j ];
                    }

                    first.length = i;

                    return first;
                },

                grep: function( elems, callback, invert ) {
                    var callbackInverse,
                        matches = [],
                        i = 0,
                        length = elems.length,
                        callbackExpect = !invert;

                    // Go through the array, only saving the items
                    // that pass the validator function
                    for ( ; i < length; i++ ) {
                        callbackInverse = !callback( elems[ i ], i );
                        if ( callbackInverse !== callbackExpect ) {
                            matches.push( elems[ i ] );
                        }
                    }

                    return matches;
                },

                // arg is for internal usage only
                map: function( elems, callback, arg ) {
                    var length, value,
                        i = 0,
                        ret = [];

                    // Go through the array, translating each of the items to their new values
                    if ( isArrayLike( elems ) ) {
                        length = elems.length;
                        for ( ; i < length; i++ ) {
                            value = callback( elems[ i ], i, arg );

                            if ( value != null ) {
                                ret.push( value );
                            }
                        }

                        // Go through every key on the object,
                    } else {
                        for ( i in elems ) {
                            value = callback( elems[ i ], i, arg );

                            if ( value != null ) {
                                ret.push( value );
                            }
                        }
                    }

                    // Flatten any nested arrays
                    return concat.apply( [], ret );
                },

                // A global GUID counter for objects
                guid: 1,

                // jQuery.support is not used in Core but other projects attach their
                // properties to it so it needs to exist.
                support: support
            } );

            if ( typeof Symbol === "function" ) {
                jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
            }

// Populate the class2type map
            jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
                function( i, name ) {
                    class2type[ "[object " + name + "]" ] = name.toLowerCase();
                } );

            function isArrayLike( obj ) {

                // Support: real iOS 8.2 only (not reproducible in simulator)
                // `in` check used to prevent JIT error (gh-2145)
                // hasOwn isn't used here due to false negatives
                // regarding Nodelist length in IE
                var length = !!obj && "length" in obj && obj.length,
                    type = toType( obj );

                if ( isFunction( obj ) || isWindow( obj ) ) {
                    return false;
                }

                return type === "array" || length === 0 ||
                    typeof length === "number" && length > 0 && ( length - 1 ) in obj;
            }
            var Sizzle =
                /*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
                (function( window ) {

                    var i,
                        support,
                        Expr,
                        getText,
                        isXML,
                        tokenize,
                        compile,
                        select,
                        outermostContext,
                        sortInput,
                        hasDuplicate,

                        // Local document vars
                        setDocument,
                        document,
                        docElem,
                        documentIsHTML,
                        rbuggyQSA,
                        rbuggyMatches,
                        matches,
                        contains,

                        // Instance-specific data
                        expando = "sizzle" + 1 * new Date(),
                        preferredDoc = window.document,
                        dirruns = 0,
                        done = 0,
                        classCache = createCache(),
                        tokenCache = createCache(),
                        compilerCache = createCache(),
                        sortOrder = function( a, b ) {
                            if ( a === b ) {
                                hasDuplicate = true;
                            }
                            return 0;
                        },

                        // Instance methods
                        hasOwn = ({}).hasOwnProperty,
                        arr = [],
                        pop = arr.pop,
                        push_native = arr.push,
                        push = arr.push,
                        slice = arr.slice,
                        // Use a stripped-down indexOf as it's faster than native
                        // https://jsperf.com/thor-indexof-vs-for/5
                        indexOf = function( list, elem ) {
                            var i = 0,
                                len = list.length;
                            for ( ; i < len; i++ ) {
                                if ( list[i] === elem ) {
                                    return i;
                                }
                            }
                            return -1;
                        },

                        booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

                        // Regular expressions

                        // http://www.w3.org/TR/css3-selectors/#whitespace
                        whitespace = "[\\x20\\t\\r\\n\\f]",

                        // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
                        identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

                        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
                        attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
                            // Operator (capture 2)
                            "*([*^$|!~]?=)" + whitespace +
                            // "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
                            "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
                            "*\\]",

                        pseudos = ":(" + identifier + ")(?:\\((" +
                            // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
                            // 1. quoted (capture 3; capture 4 or capture 5)
                            "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
                            // 2. simple (capture 6)
                            "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
                            // 3. anything else (capture 2)
                            ".*" +
                            ")\\)|)",

                        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
                        rwhitespace = new RegExp( whitespace + "+", "g" ),
                        rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

                        rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
                        rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

                        rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

                        rpseudo = new RegExp( pseudos ),
                        ridentifier = new RegExp( "^" + identifier + "$" ),

                        matchExpr = {
                            "ID": new RegExp( "^#(" + identifier + ")" ),
                            "CLASS": new RegExp( "^\\.(" + identifier + ")" ),
                            "TAG": new RegExp( "^(" + identifier + "|[*])" ),
                            "ATTR": new RegExp( "^" + attributes ),
                            "PSEUDO": new RegExp( "^" + pseudos ),
                            "CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
                                "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
                                "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
                            "bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
                            // For use in libraries implementing .is()
                            // We use this for POS matching in `select`
                            "needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
                                whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
                        },

                        rinputs = /^(?:input|select|textarea|button)$/i,
                        rheader = /^h\d$/i,

                        rnative = /^[^{]+\{\s*\[native \w/,

                        // Easily-parseable/retrievable ID or TAG or CLASS selectors
                        rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

                        rsibling = /[+~]/,

                        // CSS escapes
                        // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
                        runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
                        funescape = function( _, escaped, escapedWhitespace ) {
                            var high = "0x" + escaped - 0x10000;
                            // NaN means non-codepoint
                            // Support: Firefox<24
                            // Workaround erroneous numeric interpretation of +"0x"
                            return high !== high || escapedWhitespace ?
                                escaped :
                                high < 0 ?
                                    // BMP codepoint
                                    String.fromCharCode( high + 0x10000 ) :
                                    // Supplemental Plane codepoint (surrogate pair)
                                    String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
                        },

                        // CSS string/identifier serialization
                        // https://drafts.csswg.org/cssom/#common-serializing-idioms
                        rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                        fcssescape = function( ch, asCodePoint ) {
                            if ( asCodePoint ) {

                                // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
                                if ( ch === "\0" ) {
                                    return "\uFFFD";
                                }

                                // Control characters and (dependent upon position) numbers get escaped as code points
                                return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
                            }

                            // Other potentially-special ASCII characters get backslash-escaped
                            return "\\" + ch;
                        },

                        // Used for iframes
                        // See setDocument()
                        // Removing the function wrapper causes a "Permission Denied"
                        // error in IE
                        unloadHandler = function() {
                            setDocument();
                        },

                        disabledAncestor = addCombinator(
                            function( elem ) {
                                return elem.disabled === true && ("form" in elem || "label" in elem);
                            },
                            { dir: "parentNode", next: "legend" }
                        );

// Optimize for push.apply( _, NodeList )
                    try {
                        push.apply(
                            (arr = slice.call( preferredDoc.childNodes )),
                            preferredDoc.childNodes
                        );
                        // Support: Android<4.0
                        // Detect silently failing push.apply
                        arr[ preferredDoc.childNodes.length ].nodeType;
                    } catch ( e ) {
                        push = { apply: arr.length ?

                                // Leverage slice if possible
                                function( target, els ) {
                                    push_native.apply( target, slice.call(els) );
                                } :

                                // Support: IE<9
                                // Otherwise append directly
                                function( target, els ) {
                                    var j = target.length,
                                        i = 0;
                                    // Can't trust NodeList.length
                                    while ( (target[j++] = els[i++]) ) {}
                                    target.length = j - 1;
                                }
                        };
                    }

                    function Sizzle( selector, context, results, seed ) {
                        var m, i, elem, nid, match, groups, newSelector,
                            newContext = context && context.ownerDocument,

                            // nodeType defaults to 9, since context defaults to document
                            nodeType = context ? context.nodeType : 9;

                        results = results || [];

                        // Return early from calls with invalid selector or context
                        if ( typeof selector !== "string" || !selector ||
                            nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

                            return results;
                        }

                        // Try to shortcut find operations (as opposed to filters) in HTML documents
                        if ( !seed ) {

                            if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
                                setDocument( context );
                            }
                            context = context || document;

                            if ( documentIsHTML ) {

                                // If the selector is sufficiently simple, try using a "get*By*" DOM method
                                // (excepting DocumentFragment context, where the methods don't exist)
                                if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

                                    // ID selector
                                    if ( (m = match[1]) ) {

                                        // Document context
                                        if ( nodeType === 9 ) {
                                            if ( (elem = context.getElementById( m )) ) {

                                                // Support: IE, Opera, Webkit
                                                // TODO: identify versions
                                                // getElementById can match elements by name instead of ID
                                                if ( elem.id === m ) {
                                                    results.push( elem );
                                                    return results;
                                                }
                                            } else {
                                                return results;
                                            }

                                            // Element context
                                        } else {

                                            // Support: IE, Opera, Webkit
                                            // TODO: identify versions
                                            // getElementById can match elements by name instead of ID
                                            if ( newContext && (elem = newContext.getElementById( m )) &&
                                                contains( context, elem ) &&
                                                elem.id === m ) {

                                                results.push( elem );
                                                return results;
                                            }
                                        }

                                        // Type selector
                                    } else if ( match[2] ) {
                                        push.apply( results, context.getElementsByTagName( selector ) );
                                        return results;

                                        // Class selector
                                    } else if ( (m = match[3]) && support.getElementsByClassName &&
                                        context.getElementsByClassName ) {

                                        push.apply( results, context.getElementsByClassName( m ) );
                                        return results;
                                    }
                                }

                                // Take advantage of querySelectorAll
                                if ( support.qsa &&
                                    !compilerCache[ selector + " " ] &&
                                    (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

                                    if ( nodeType !== 1 ) {
                                        newContext = context;
                                        newSelector = selector;

                                        // qSA looks outside Element context, which is not what we want
                                        // Thanks to Andrew Dupont for this workaround technique
                                        // Support: IE <=8
                                        // Exclude object elements
                                    } else if ( context.nodeName.toLowerCase() !== "object" ) {

                                        // Capture the context ID, setting it first if necessary
                                        if ( (nid = context.getAttribute( "id" )) ) {
                                            nid = nid.replace( rcssescape, fcssescape );
                                        } else {
                                            context.setAttribute( "id", (nid = expando) );
                                        }

                                        // Prefix every selector in the list
                                        groups = tokenize( selector );
                                        i = groups.length;
                                        while ( i-- ) {
                                            groups[i] = "#" + nid + " " + toSelector( groups[i] );
                                        }
                                        newSelector = groups.join( "," );

                                        // Expand context for sibling selectors
                                        newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
                                            context;
                                    }

                                    if ( newSelector ) {
                                        try {
                                            push.apply( results,
                                                newContext.querySelectorAll( newSelector )
                                            );
                                            return results;
                                        } catch ( qsaError ) {
                                        } finally {
                                            if ( nid === expando ) {
                                                context.removeAttribute( "id" );
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        // All others
                        return select( selector.replace( rtrim, "$1" ), context, results, seed );
                    }

                    /**
                     * Create key-value caches of limited size
                     * @returns {function(string, object)} Returns the Object data after storing it on itself with
                     *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
                     *	deleting the oldest entry
                     */
                    function createCache() {
                        var keys = [];

                        function cache( key, value ) {
                            // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
                            if ( keys.push( key + " " ) > Expr.cacheLength ) {
                                // Only keep the most recent entries
                                delete cache[ keys.shift() ];
                            }
                            return (cache[ key + " " ] = value);
                        }
                        return cache;
                    }

                    /**
                     * Mark a function for special use by Sizzle
                     * @param {Function} fn The function to mark
                     */
                    function markFunction( fn ) {
                        fn[ expando ] = true;
                        return fn;
                    }

                    /**
                     * Support testing using an element
                     * @param {Function} fn Passed the created element and returns a boolean result
                     */
                    function assert( fn ) {
                        var el = document.createElement("fieldset");

                        try {
                            return !!fn( el );
                        } catch (e) {
                            return false;
                        } finally {
                            // Remove from its parent by default
                            if ( el.parentNode ) {
                                el.parentNode.removeChild( el );
                            }
                            // release memory in IE
                            el = null;
                        }
                    }

                    /**
                     * Adds the same handler for all of the specified attrs
                     * @param {String} attrs Pipe-separated list of attributes
                     * @param {Function} handler The method that will be applied
                     */
                    function addHandle( attrs, handler ) {
                        var arr = attrs.split("|"),
                            i = arr.length;

                        while ( i-- ) {
                            Expr.attrHandle[ arr[i] ] = handler;
                        }
                    }

                    /**
                     * Checks document order of two siblings
                     * @param {Element} a
                     * @param {Element} b
                     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
                     */
                    function siblingCheck( a, b ) {
                        var cur = b && a,
                            diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
                                a.sourceIndex - b.sourceIndex;

                        // Use IE sourceIndex if available on both nodes
                        if ( diff ) {
                            return diff;
                        }

                        // Check if b follows a
                        if ( cur ) {
                            while ( (cur = cur.nextSibling) ) {
                                if ( cur === b ) {
                                    return -1;
                                }
                            }
                        }

                        return a ? 1 : -1;
                    }

                    /**
                     * Returns a function to use in pseudos for input types
                     * @param {String} type
                     */
                    function createInputPseudo( type ) {
                        return function( elem ) {
                            var name = elem.nodeName.toLowerCase();
                            return name === "input" && elem.type === type;
                        };
                    }

                    /**
                     * Returns a function to use in pseudos for buttons
                     * @param {String} type
                     */
                    function createButtonPseudo( type ) {
                        return function( elem ) {
                            var name = elem.nodeName.toLowerCase();
                            return (name === "input" || name === "button") && elem.type === type;
                        };
                    }

                    /**
                     * Returns a function to use in pseudos for :enabled/:disabled
                     * @param {Boolean} disabled true for :disabled; false for :enabled
                     */
                    function createDisabledPseudo( disabled ) {

                        // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
                        return function( elem ) {

                            // Only certain elements can match :enabled or :disabled
                            // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
                            // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
                            if ( "form" in elem ) {

                                // Check for inherited disabledness on relevant non-disabled elements:
                                // * listed form-associated elements in a disabled fieldset
                                //   https://html.spec.whatwg.org/multipage/forms.html#category-listed
                                //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
                                // * option elements in a disabled optgroup
                                //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
                                // All such elements have a "form" property.
                                if ( elem.parentNode && elem.disabled === false ) {

                                    // Option elements defer to a parent optgroup if present
                                    if ( "label" in elem ) {
                                        if ( "label" in elem.parentNode ) {
                                            return elem.parentNode.disabled === disabled;
                                        } else {
                                            return elem.disabled === disabled;
                                        }
                                    }

                                    // Support: IE 6 - 11
                                    // Use the isDisabled shortcut property to check for disabled fieldset ancestors
                                    return elem.isDisabled === disabled ||

                                        // Where there is no isDisabled, check manually
                                        /* jshint -W018 */
                                        elem.isDisabled !== !disabled &&
                                        disabledAncestor( elem ) === disabled;
                                }

                                return elem.disabled === disabled;

                                // Try to winnow out elements that can't be disabled before trusting the disabled property.
                                // Some victims get caught in our net (label, legend, menu, track), but it shouldn't
                                // even exist on them, let alone have a boolean value.
                            } else if ( "label" in elem ) {
                                return elem.disabled === disabled;
                            }

                            // Remaining elements are neither :enabled nor :disabled
                            return false;
                        };
                    }

                    /**
                     * Returns a function to use in pseudos for positionals
                     * @param {Function} fn
                     */
                    function createPositionalPseudo( fn ) {
                        return markFunction(function( argument ) {
                            argument = +argument;
                            return markFunction(function( seed, matches ) {
                                var j,
                                    matchIndexes = fn( [], seed.length, argument ),
                                    i = matchIndexes.length;

                                // Match elements found at the specified indexes
                                while ( i-- ) {
                                    if ( seed[ (j = matchIndexes[i]) ] ) {
                                        seed[j] = !(matches[j] = seed[j]);
                                    }
                                }
                            });
                        });
                    }

                    /**
                     * Checks a node for validity as a Sizzle context
                     * @param {Element|Object=} context
                     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
                     */
                    function testContext( context ) {
                        return context && typeof context.getElementsByTagName !== "undefined" && context;
                    }

// Expose support vars for convenience
                    support = Sizzle.support = {};

                    /**
                     * Detects XML nodes
                     * @param {Element|Object} elem An element or a document
                     * @returns {Boolean} True iff elem is a non-HTML XML node
                     */
                    isXML = Sizzle.isXML = function( elem ) {
                        // documentElement is verified for cases where it doesn't yet exist
                        // (such as loading iframes in IE - #4833)
                        var documentElement = elem && (elem.ownerDocument || elem).documentElement;
                        return documentElement ? documentElement.nodeName !== "HTML" : false;
                    };

                    /**
                     * Sets document-related variables once based on the current document
                     * @param {Element|Object} [doc] An element or document object to use to set the document
                     * @returns {Object} Returns the current document
                     */
                    setDocument = Sizzle.setDocument = function( node ) {
                        var hasCompare, subWindow,
                            doc = node ? node.ownerDocument || node : preferredDoc;

                        // Return early if doc is invalid or already selected
                        if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
                            return document;
                        }

                        // Update global variables
                        document = doc;
                        docElem = document.documentElement;
                        documentIsHTML = !isXML( document );

                        // Support: IE 9-11, Edge
                        // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
                        if ( preferredDoc !== document &&
                            (subWindow = document.defaultView) && subWindow.top !== subWindow ) {

                            // Support: IE 11, Edge
                            if ( subWindow.addEventListener ) {
                                subWindow.addEventListener( "unload", unloadHandler, false );

                                // Support: IE 9 - 10 only
                            } else if ( subWindow.attachEvent ) {
                                subWindow.attachEvent( "onunload", unloadHandler );
                            }
                        }

                        /* Attributes
	---------------------------------------------------------------------- */

                        // Support: IE<8
                        // Verify that getAttribute really returns attributes and not properties
                        // (excepting IE8 booleans)
                        support.attributes = assert(function( el ) {
                            el.className = "i";
                            return !el.getAttribute("className");
                        });

                        /* getElement(s)By*
	---------------------------------------------------------------------- */

                        // Check if getElementsByTagName("*") returns only elements
                        support.getElementsByTagName = assert(function( el ) {
                            el.appendChild( document.createComment("") );
                            return !el.getElementsByTagName("*").length;
                        });

                        // Support: IE<9
                        support.getElementsByClassName = rnative.test( document.getElementsByClassName );

                        // Support: IE<10
                        // Check if getElementById returns elements by name
                        // The broken getElementById methods don't pick up programmatically-set names,
                        // so use a roundabout getElementsByName test
                        support.getById = assert(function( el ) {
                            docElem.appendChild( el ).id = expando;
                            return !document.getElementsByName || !document.getElementsByName( expando ).length;
                        });

                        // ID filter and find
                        if ( support.getById ) {
                            Expr.filter["ID"] = function( id ) {
                                var attrId = id.replace( runescape, funescape );
                                return function( elem ) {
                                    return elem.getAttribute("id") === attrId;
                                };
                            };
                            Expr.find["ID"] = function( id, context ) {
                                if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
                                    var elem = context.getElementById( id );
                                    return elem ? [ elem ] : [];
                                }
                            };
                        } else {
                            Expr.filter["ID"] =  function( id ) {
                                var attrId = id.replace( runescape, funescape );
                                return function( elem ) {
                                    var node = typeof elem.getAttributeNode !== "undefined" &&
                                        elem.getAttributeNode("id");
                                    return node && node.value === attrId;
                                };
                            };

                            // Support: IE 6 - 7 only
                            // getElementById is not reliable as a find shortcut
                            Expr.find["ID"] = function( id, context ) {
                                if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
                                    var node, i, elems,
                                        elem = context.getElementById( id );

                                    if ( elem ) {

                                        // Verify the id attribute
                                        node = elem.getAttributeNode("id");
                                        if ( node && node.value === id ) {
                                            return [ elem ];
                                        }

                                        // Fall back on getElementsByName
                                        elems = context.getElementsByName( id );
                                        i = 0;
                                        while ( (elem = elems[i++]) ) {
                                            node = elem.getAttributeNode("id");
                                            if ( node && node.value === id ) {
                                                return [ elem ];
                                            }
                                        }
                                    }

                                    return [];
                                }
                            };
                        }

                        // Tag
                        Expr.find["TAG"] = support.getElementsByTagName ?
                            function( tag, context ) {
                                if ( typeof context.getElementsByTagName !== "undefined" ) {
                                    return context.getElementsByTagName( tag );

                                    // DocumentFragment nodes don't have gEBTN
                                } else if ( support.qsa ) {
                                    return context.querySelectorAll( tag );
                                }
                            } :

                            function( tag, context ) {
                                var elem,
                                    tmp = [],
                                    i = 0,
                                    // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
                                    results = context.getElementsByTagName( tag );

                                // Filter out possible comments
                                if ( tag === "*" ) {
                                    while ( (elem = results[i++]) ) {
                                        if ( elem.nodeType === 1 ) {
                                            tmp.push( elem );
                                        }
                                    }

                                    return tmp;
                                }
                                return results;
                            };

                        // Class
                        Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
                            if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
                                return context.getElementsByClassName( className );
                            }
                        };

                        /* QSA/matchesSelector
	---------------------------------------------------------------------- */

                        // QSA and matchesSelector support

                        // matchesSelector(:active) reports false when true (IE9/Opera 11.5)
                        rbuggyMatches = [];

                        // qSa(:focus) reports false when true (Chrome 21)
                        // We allow this because of a bug in IE8/9 that throws an error
                        // whenever `document.activeElement` is accessed on an iframe
                        // So, we allow :focus to pass through QSA all the time to avoid the IE error
                        // See https://bugs.jquery.com/ticket/13378
                        rbuggyQSA = [];

                        if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
                            // Build QSA regex
                            // Regex strategy adopted from Diego Perini
                            assert(function( el ) {
                                // Select is set to empty string on purpose
                                // This is to test IE's treatment of not explicitly
                                // setting a boolean content attribute,
                                // since its presence should be enough
                                // https://bugs.jquery.com/ticket/12359
                                docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
                                    "<select id='" + expando + "-\r\\' msallowcapture=''>" +
                                    "<option selected=''></option></select>";

                                // Support: IE8, Opera 11-12.16
                                // Nothing should be selected when empty strings follow ^= or $= or *=
                                // The test attribute must be unknown in Opera but "safe" for WinRT
                                // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
                                if ( el.querySelectorAll("[msallowcapture^='']").length ) {
                                    rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
                                }

                                // Support: IE8
                                // Boolean attributes and "value" are not treated correctly
                                if ( !el.querySelectorAll("[selected]").length ) {
                                    rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
                                }

                                // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
                                if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
                                    rbuggyQSA.push("~=");
                                }

                                // Webkit/Opera - :checked should return selected option elements
                                // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                                // IE8 throws error here and will not see later tests
                                if ( !el.querySelectorAll(":checked").length ) {
                                    rbuggyQSA.push(":checked");
                                }

                                // Support: Safari 8+, iOS 8+
                                // https://bugs.webkit.org/show_bug.cgi?id=136851
                                // In-page `selector#id sibling-combinator selector` fails
                                if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
                                    rbuggyQSA.push(".#.+[+~]");
                                }
                            });

                            assert(function( el ) {
                                el.innerHTML = "<a href='' disabled='disabled'></a>" +
                                    "<select disabled='disabled'><option/></select>";

                                // Support: Windows 8 Native Apps
                                // The type and name attributes are restricted during .innerHTML assignment
                                var input = document.createElement("input");
                                input.setAttribute( "type", "hidden" );
                                el.appendChild( input ).setAttribute( "name", "D" );

                                // Support: IE8
                                // Enforce case-sensitivity of name attribute
                                if ( el.querySelectorAll("[name=d]").length ) {
                                    rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
                                }

                                // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
                                // IE8 throws error here and will not see later tests
                                if ( el.querySelectorAll(":enabled").length !== 2 ) {
                                    rbuggyQSA.push( ":enabled", ":disabled" );
                                }

                                // Support: IE9-11+
                                // IE's :disabled selector does not pick up the children of disabled fieldsets
                                docElem.appendChild( el ).disabled = true;
                                if ( el.querySelectorAll(":disabled").length !== 2 ) {
                                    rbuggyQSA.push( ":enabled", ":disabled" );
                                }

                                // Opera 10-11 does not throw on post-comma invalid pseudos
                                el.querySelectorAll("*,:x");
                                rbuggyQSA.push(",.*:");
                            });
                        }

                        if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
                            docElem.webkitMatchesSelector ||
                            docElem.mozMatchesSelector ||
                            docElem.oMatchesSelector ||
                            docElem.msMatchesSelector) )) ) {

                            assert(function( el ) {
                                // Check to see if it's possible to do matchesSelector
                                // on a disconnected node (IE 9)
                                support.disconnectedMatch = matches.call( el, "*" );

                                // This should fail with an exception
                                // Gecko does not error, returns false instead
                                matches.call( el, "[s!='']:x" );
                                rbuggyMatches.push( "!=", pseudos );
                            });
                        }

                        rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
                        rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

                        /* Contains
	---------------------------------------------------------------------- */
                        hasCompare = rnative.test( docElem.compareDocumentPosition );

                        // Element contains another
                        // Purposefully self-exclusive
                        // As in, an element does not contain itself
                        contains = hasCompare || rnative.test( docElem.contains ) ?
                            function( a, b ) {
                                var adown = a.nodeType === 9 ? a.documentElement : a,
                                    bup = b && b.parentNode;
                                return a === bup || !!( bup && bup.nodeType === 1 && (
                                    adown.contains ?
                                        adown.contains( bup ) :
                                        a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
                                ));
                            } :
                            function( a, b ) {
                                if ( b ) {
                                    while ( (b = b.parentNode) ) {
                                        if ( b === a ) {
                                            return true;
                                        }
                                    }
                                }
                                return false;
                            };

                        /* Sorting
	---------------------------------------------------------------------- */

                        // Document order sorting
                        sortOrder = hasCompare ?
                            function( a, b ) {

                                // Flag for duplicate removal
                                if ( a === b ) {
                                    hasDuplicate = true;
                                    return 0;
                                }

                                // Sort on method existence if only one input has compareDocumentPosition
                                var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                                if ( compare ) {
                                    return compare;
                                }

                                // Calculate position if both inputs belong to the same document
                                compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
                                    a.compareDocumentPosition( b ) :

                                    // Otherwise we know they are disconnected
                                    1;

                                // Disconnected nodes
                                if ( compare & 1 ||
                                    (!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

                                    // Choose the first element that is related to our preferred document
                                    if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
                                        return -1;
                                    }
                                    if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
                                        return 1;
                                    }

                                    // Maintain original order
                                    return sortInput ?
                                        ( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
                                        0;
                                }

                                return compare & 4 ? -1 : 1;
                            } :
                            function( a, b ) {
                                // Exit early if the nodes are identical
                                if ( a === b ) {
                                    hasDuplicate = true;
                                    return 0;
                                }

                                var cur,
                                    i = 0,
                                    aup = a.parentNode,
                                    bup = b.parentNode,
                                    ap = [ a ],
                                    bp = [ b ];

                                // Parentless nodes are either documents or disconnected
                                if ( !aup || !bup ) {
                                    return a === document ? -1 :
                                        b === document ? 1 :
                                            aup ? -1 :
                                                bup ? 1 :
                                                    sortInput ?
                                                        ( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
                                                        0;

                                    // If the nodes are siblings, we can do a quick check
                                } else if ( aup === bup ) {
                                    return siblingCheck( a, b );
                                }

                                // Otherwise we need full lists of their ancestors for comparison
                                cur = a;
                                while ( (cur = cur.parentNode) ) {
                                    ap.unshift( cur );
                                }
                                cur = b;
                                while ( (cur = cur.parentNode) ) {
                                    bp.unshift( cur );
                                }

                                // Walk down the tree looking for a discrepancy
                                while ( ap[i] === bp[i] ) {
                                    i++;
                                }

                                return i ?
                                    // Do a sibling check if the nodes have a common ancestor
                                    siblingCheck( ap[i], bp[i] ) :

                                    // Otherwise nodes in our document sort first
                                    ap[i] === preferredDoc ? -1 :
                                        bp[i] === preferredDoc ? 1 :
                                            0;
                            };

                        return document;
                    };

                    Sizzle.matches = function( expr, elements ) {
                        return Sizzle( expr, null, null, elements );
                    };

                    Sizzle.matchesSelector = function( elem, expr ) {
                        // Set document vars if needed
                        if ( ( elem.ownerDocument || elem ) !== document ) {
                            setDocument( elem );
                        }

                        // Make sure that attribute selectors are quoted
                        expr = expr.replace( rattributeQuotes, "='$1']" );

                        if ( support.matchesSelector && documentIsHTML &&
                            !compilerCache[ expr + " " ] &&
                            ( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
                            ( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

                            try {
                                var ret = matches.call( elem, expr );

                                // IE 9's matchesSelector returns false on disconnected nodes
                                if ( ret || support.disconnectedMatch ||
                                    // As well, disconnected nodes are said to be in a document
                                    // fragment in IE 9
                                    elem.document && elem.document.nodeType !== 11 ) {
                                    return ret;
                                }
                            } catch (e) {}
                        }

                        return Sizzle( expr, document, null, [ elem ] ).length > 0;
                    };

                    Sizzle.contains = function( context, elem ) {
                        // Set document vars if needed
                        if ( ( context.ownerDocument || context ) !== document ) {
                            setDocument( context );
                        }
                        return contains( context, elem );
                    };

                    Sizzle.attr = function( elem, name ) {
                        // Set document vars if needed
                        if ( ( elem.ownerDocument || elem ) !== document ) {
                            setDocument( elem );
                        }

                        var fn = Expr.attrHandle[ name.toLowerCase() ],
                            // Don't get fooled by Object.prototype properties (jQuery #13807)
                            val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
                                fn( elem, name, !documentIsHTML ) :
                                undefined;

                        return val !== undefined ?
                            val :
                            support.attributes || !documentIsHTML ?
                                elem.getAttribute( name ) :
                                (val = elem.getAttributeNode(name)) && val.specified ?
                                    val.value :
                                    null;
                    };

                    Sizzle.escape = function( sel ) {
                        return (sel + "").replace( rcssescape, fcssescape );
                    };

                    Sizzle.error = function( msg ) {
                        throw new Error( "Syntax error, unrecognized expression: " + msg );
                    };

                    /**
                     * Document sorting and removing duplicates
                     * @param {ArrayLike} results
                     */
                    Sizzle.uniqueSort = function( results ) {
                        var elem,
                            duplicates = [],
                            j = 0,
                            i = 0;

                        // Unless we *know* we can detect duplicates, assume their presence
                        hasDuplicate = !support.detectDuplicates;
                        sortInput = !support.sortStable && results.slice( 0 );
                        results.sort( sortOrder );

                        if ( hasDuplicate ) {
                            while ( (elem = results[i++]) ) {
                                if ( elem === results[ i ] ) {
                                    j = duplicates.push( i );
                                }
                            }
                            while ( j-- ) {
                                results.splice( duplicates[ j ], 1 );
                            }
                        }

                        // Clear input after sorting to release objects
                        // See https://github.com/jquery/sizzle/pull/225
                        sortInput = null;

                        return results;
                    };

                    /**
                     * Utility function for retrieving the text value of an array of DOM nodes
                     * @param {Array|Element} elem
                     */
                    getText = Sizzle.getText = function( elem ) {
                        var node,
                            ret = "",
                            i = 0,
                            nodeType = elem.nodeType;

                        if ( !nodeType ) {
                            // If no nodeType, this is expected to be an array
                            while ( (node = elem[i++]) ) {
                                // Do not traverse comment nodes
                                ret += getText( node );
                            }
                        } else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
                            // Use textContent for elements
                            // innerText usage removed for consistency of new lines (jQuery #11153)
                            if ( typeof elem.textContent === "string" ) {
                                return elem.textContent;
                            } else {
                                // Traverse its children
                                for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
                                    ret += getText( elem );
                                }
                            }
                        } else if ( nodeType === 3 || nodeType === 4 ) {
                            return elem.nodeValue;
                        }
                        // Do not include comment or processing instruction nodes

                        return ret;
                    };

                    Expr = Sizzle.selectors = {

                        // Can be adjusted by the user
                        cacheLength: 50,

                        createPseudo: markFunction,

                        match: matchExpr,

                        attrHandle: {},

                        find: {},

                        relative: {
                            ">": { dir: "parentNode", first: true },
                            " ": { dir: "parentNode" },
                            "+": { dir: "previousSibling", first: true },
                            "~": { dir: "previousSibling" }
                        },

                        preFilter: {
                            "ATTR": function( match ) {
                                match[1] = match[1].replace( runescape, funescape );

                                // Move the given value to match[3] whether quoted or unquoted
                                match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

                                if ( match[2] === "~=" ) {
                                    match[3] = " " + match[3] + " ";
                                }

                                return match.slice( 0, 4 );
                            },

                            "CHILD": function( match ) {
                                /* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
                                match[1] = match[1].toLowerCase();

                                if ( match[1].slice( 0, 3 ) === "nth" ) {
                                    // nth-* requires argument
                                    if ( !match[3] ) {
                                        Sizzle.error( match[0] );
                                    }

                                    // numeric x and y parameters for Expr.filter.CHILD
                                    // remember that false/true cast respectively to 0/1
                                    match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
                                    match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

                                    // other types prohibit arguments
                                } else if ( match[3] ) {
                                    Sizzle.error( match[0] );
                                }

                                return match;
                            },

                            "PSEUDO": function( match ) {
                                var excess,
                                    unquoted = !match[6] && match[2];

                                if ( matchExpr["CHILD"].test( match[0] ) ) {
                                    return null;
                                }

                                // Accept quoted arguments as-is
                                if ( match[3] ) {
                                    match[2] = match[4] || match[5] || "";

                                    // Strip excess characters from unquoted arguments
                                } else if ( unquoted && rpseudo.test( unquoted ) &&
                                    // Get excess from tokenize (recursively)
                                    (excess = tokenize( unquoted, true )) &&
                                    // advance to the next closing parenthesis
                                    (excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

                                    // excess is a negative index
                                    match[0] = match[0].slice( 0, excess );
                                    match[2] = unquoted.slice( 0, excess );
                                }

                                // Return only captures needed by the pseudo filter method (type and argument)
                                return match.slice( 0, 3 );
                            }
                        },

                        filter: {

                            "TAG": function( nodeNameSelector ) {
                                var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
                                return nodeNameSelector === "*" ?
                                    function() { return true; } :
                                    function( elem ) {
                                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                                    };
                            },

                            "CLASS": function( className ) {
                                var pattern = classCache[ className + " " ];

                                return pattern ||
                                    (pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
                                    classCache( className, function( elem ) {
                                        return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
                                    });
                            },

                            "ATTR": function( name, operator, check ) {
                                return function( elem ) {
                                    var result = Sizzle.attr( elem, name );

                                    if ( result == null ) {
                                        return operator === "!=";
                                    }
                                    if ( !operator ) {
                                        return true;
                                    }

                                    result += "";

                                    return operator === "=" ? result === check :
                                        operator === "!=" ? result !== check :
                                            operator === "^=" ? check && result.indexOf( check ) === 0 :
                                                operator === "*=" ? check && result.indexOf( check ) > -1 :
                                                    operator === "$=" ? check && result.slice( -check.length ) === check :
                                                        operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
                                                            operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
                                                                false;
                                };
                            },

                            "CHILD": function( type, what, argument, first, last ) {
                                var simple = type.slice( 0, 3 ) !== "nth",
                                    forward = type.slice( -4 ) !== "last",
                                    ofType = what === "of-type";

                                return first === 1 && last === 0 ?

                                    // Shortcut for :nth-*(n)
                                    function( elem ) {
                                        return !!elem.parentNode;
                                    } :

                                    function( elem, context, xml ) {
                                        var cache, uniqueCache, outerCache, node, nodeIndex, start,
                                            dir = simple !== forward ? "nextSibling" : "previousSibling",
                                            parent = elem.parentNode,
                                            name = ofType && elem.nodeName.toLowerCase(),
                                            useCache = !xml && !ofType,
                                            diff = false;

                                        if ( parent ) {

                                            // :(first|last|only)-(child|of-type)
                                            if ( simple ) {
                                                while ( dir ) {
                                                    node = elem;
                                                    while ( (node = node[ dir ]) ) {
                                                        if ( ofType ?
                                                            node.nodeName.toLowerCase() === name :
                                                            node.nodeType === 1 ) {

                                                            return false;
                                                        }
                                                    }
                                                    // Reverse direction for :only-* (if we haven't yet done so)
                                                    start = dir = type === "only" && !start && "nextSibling";
                                                }
                                                return true;
                                            }

                                            start = [ forward ? parent.firstChild : parent.lastChild ];

                                            // non-xml :nth-child(...) stores cache data on `parent`
                                            if ( forward && useCache ) {

                                                // Seek `elem` from a previously-cached index

                                                // ...in a gzip-friendly way
                                                node = parent;
                                                outerCache = node[ expando ] || (node[ expando ] = {});

                                                // Support: IE <9 only
                                                // Defend against cloned attroperties (jQuery gh-1709)
                                                uniqueCache = outerCache[ node.uniqueID ] ||
                                                    (outerCache[ node.uniqueID ] = {});

                                                cache = uniqueCache[ type ] || [];
                                                nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
                                                diff = nodeIndex && cache[ 2 ];
                                                node = nodeIndex && parent.childNodes[ nodeIndex ];

                                                while ( (node = ++nodeIndex && node && node[ dir ] ||

                                                    // Fallback to seeking `elem` from the start
                                                    (diff = nodeIndex = 0) || start.pop()) ) {

                                                    // When found, cache indexes on `parent` and break
                                                    if ( node.nodeType === 1 && ++diff && node === elem ) {
                                                        uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
                                                        break;
                                                    }
                                                }

                                            } else {
                                                // Use previously-cached element index if available
                                                if ( useCache ) {
                                                    // ...in a gzip-friendly way
                                                    node = elem;
                                                    outerCache = node[ expando ] || (node[ expando ] = {});

                                                    // Support: IE <9 only
                                                    // Defend against cloned attroperties (jQuery gh-1709)
                                                    uniqueCache = outerCache[ node.uniqueID ] ||
                                                        (outerCache[ node.uniqueID ] = {});

                                                    cache = uniqueCache[ type ] || [];
                                                    nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
                                                    diff = nodeIndex;
                                                }

                                                // xml :nth-child(...)
                                                // or :nth-last-child(...) or :nth(-last)?-of-type(...)
                                                if ( diff === false ) {
                                                    // Use the same loop as above to seek `elem` from the start
                                                    while ( (node = ++nodeIndex && node && node[ dir ] ||
                                                        (diff = nodeIndex = 0) || start.pop()) ) {

                                                        if ( ( ofType ?
                                                            node.nodeName.toLowerCase() === name :
                                                            node.nodeType === 1 ) &&
                                                            ++diff ) {

                                                            // Cache the index of each encountered element
                                                            if ( useCache ) {
                                                                outerCache = node[ expando ] || (node[ expando ] = {});

                                                                // Support: IE <9 only
                                                                // Defend against cloned attroperties (jQuery gh-1709)
                                                                uniqueCache = outerCache[ node.uniqueID ] ||
                                                                    (outerCache[ node.uniqueID ] = {});

                                                                uniqueCache[ type ] = [ dirruns, diff ];
                                                            }

                                                            if ( node === elem ) {
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                            }

                                            // Incorporate the offset, then check against cycle size
                                            diff -= last;
                                            return diff === first || ( diff % first === 0 && diff / first >= 0 );
                                        }
                                    };
                            },

                            "PSEUDO": function( pseudo, argument ) {
                                // pseudo-class names are case-insensitive
                                // http://www.w3.org/TR/selectors/#pseudo-classes
                                // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
                                // Remember that setFilters inherits from pseudos
                                var args,
                                    fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
                                        Sizzle.error( "unsupported pseudo: " + pseudo );

                                // The user may use createPseudo to indicate that
                                // arguments are needed to create the filter function
                                // just as Sizzle does
                                if ( fn[ expando ] ) {
                                    return fn( argument );
                                }

                                // But maintain support for old signatures
                                if ( fn.length > 1 ) {
                                    args = [ pseudo, pseudo, "", argument ];
                                    return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
                                        markFunction(function( seed, matches ) {
                                            var idx,
                                                matched = fn( seed, argument ),
                                                i = matched.length;
                                            while ( i-- ) {
                                                idx = indexOf( seed, matched[i] );
                                                seed[ idx ] = !( matches[ idx ] = matched[i] );
                                            }
                                        }) :
                                        function( elem ) {
                                            return fn( elem, 0, args );
                                        };
                                }

                                return fn;
                            }
                        },

                        pseudos: {
                            // Potentially complex pseudos
                            "not": markFunction(function( selector ) {
                                // Trim the selector passed to compile
                                // to avoid treating leading and trailing
                                // spaces as combinators
                                var input = [],
                                    results = [],
                                    matcher = compile( selector.replace( rtrim, "$1" ) );

                                return matcher[ expando ] ?
                                    markFunction(function( seed, matches, context, xml ) {
                                        var elem,
                                            unmatched = matcher( seed, null, xml, [] ),
                                            i = seed.length;

                                        // Match elements unmatched by `matcher`
                                        while ( i-- ) {
                                            if ( (elem = unmatched[i]) ) {
                                                seed[i] = !(matches[i] = elem);
                                            }
                                        }
                                    }) :
                                    function( elem, context, xml ) {
                                        input[0] = elem;
                                        matcher( input, null, xml, results );
                                        // Don't keep the element (issue #299)
                                        input[0] = null;
                                        return !results.pop();
                                    };
                            }),

                            "has": markFunction(function( selector ) {
                                return function( elem ) {
                                    return Sizzle( selector, elem ).length > 0;
                                };
                            }),

                            "contains": markFunction(function( text ) {
                                text = text.replace( runescape, funescape );
                                return function( elem ) {
                                    return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
                                };
                            }),

                            // "Whether an element is represented by a :lang() selector
                            // is based solely on the element's language value
                            // being equal to the identifier C,
                            // or beginning with the identifier C immediately followed by "-".
                            // The matching of C against the element's language value is performed case-insensitively.
                            // The identifier C does not have to be a valid language name."
                            // http://www.w3.org/TR/selectors/#lang-pseudo
                            "lang": markFunction( function( lang ) {
                                // lang value must be a valid identifier
                                if ( !ridentifier.test(lang || "") ) {
                                    Sizzle.error( "unsupported lang: " + lang );
                                }
                                lang = lang.replace( runescape, funescape ).toLowerCase();
                                return function( elem ) {
                                    var elemLang;
                                    do {
                                        if ( (elemLang = documentIsHTML ?
                                            elem.lang :
                                            elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

                                            elemLang = elemLang.toLowerCase();
                                            return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
                                        }
                                    } while ( (elem = elem.parentNode) && elem.nodeType === 1 );
                                    return false;
                                };
                            }),

                            // Miscellaneous
                            "target": function( elem ) {
                                var hash = window.location && window.location.hash;
                                return hash && hash.slice( 1 ) === elem.id;
                            },

                            "root": function( elem ) {
                                return elem === docElem;
                            },

                            "focus": function( elem ) {
                                return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
                            },

                            // Boolean properties
                            "enabled": createDisabledPseudo( false ),
                            "disabled": createDisabledPseudo( true ),

                            "checked": function( elem ) {
                                // In CSS3, :checked should return both checked and selected elements
                                // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                                var nodeName = elem.nodeName.toLowerCase();
                                return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
                            },

                            "selected": function( elem ) {
                                // Accessing this property makes selected-by-default
                                // options in Safari work properly
                                if ( elem.parentNode ) {
                                    elem.parentNode.selectedIndex;
                                }

                                return elem.selected === true;
                            },

                            // Contents
                            "empty": function( elem ) {
                                // http://www.w3.org/TR/selectors/#empty-pseudo
                                // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
                                //   but not by others (comment: 8; processing instruction: 7; etc.)
                                // nodeType < 6 works because attributes (2) do not appear as children
                                for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
                                    if ( elem.nodeType < 6 ) {
                                        return false;
                                    }
                                }
                                return true;
                            },

                            "parent": function( elem ) {
                                return !Expr.pseudos["empty"]( elem );
                            },

                            // Element/input types
                            "header": function( elem ) {
                                return rheader.test( elem.nodeName );
                            },

                            "input": function( elem ) {
                                return rinputs.test( elem.nodeName );
                            },

                            "button": function( elem ) {
                                var name = elem.nodeName.toLowerCase();
                                return name === "input" && elem.type === "button" || name === "button";
                            },

                            "text": function( elem ) {
                                var attr;
                                return elem.nodeName.toLowerCase() === "input" &&
                                    elem.type === "text" &&

                                    // Support: IE<8
                                    // New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
                                    ( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
                            },

                            // Position-in-collection
                            "first": createPositionalPseudo(function() {
                                return [ 0 ];
                            }),

                            "last": createPositionalPseudo(function( matchIndexes, length ) {
                                return [ length - 1 ];
                            }),

                            "eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
                                return [ argument < 0 ? argument + length : argument ];
                            }),

                            "even": createPositionalPseudo(function( matchIndexes, length ) {
                                var i = 0;
                                for ( ; i < length; i += 2 ) {
                                    matchIndexes.push( i );
                                }
                                return matchIndexes;
                            }),

                            "odd": createPositionalPseudo(function( matchIndexes, length ) {
                                var i = 1;
                                for ( ; i < length; i += 2 ) {
                                    matchIndexes.push( i );
                                }
                                return matchIndexes;
                            }),

                            "lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
                                var i = argument < 0 ? argument + length : argument;
                                for ( ; --i >= 0; ) {
                                    matchIndexes.push( i );
                                }
                                return matchIndexes;
                            }),

                            "gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
                                var i = argument < 0 ? argument + length : argument;
                                for ( ; ++i < length; ) {
                                    matchIndexes.push( i );
                                }
                                return matchIndexes;
                            })
                        }
                    };

                    Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
                    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
                        Expr.pseudos[ i ] = createInputPseudo( i );
                    }
                    for ( i in { submit: true, reset: true } ) {
                        Expr.pseudos[ i ] = createButtonPseudo( i );
                    }

// Easy API for creating new setFilters
                    function setFilters() {}
                    setFilters.prototype = Expr.filters = Expr.pseudos;
                    Expr.setFilters = new setFilters();

                    tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
                        var matched, match, tokens, type,
                            soFar, groups, preFilters,
                            cached = tokenCache[ selector + " " ];

                        if ( cached ) {
                            return parseOnly ? 0 : cached.slice( 0 );
                        }

                        soFar = selector;
                        groups = [];
                        preFilters = Expr.preFilter;

                        while ( soFar ) {

                            // Comma and first run
                            if ( !matched || (match = rcomma.exec( soFar )) ) {
                                if ( match ) {
                                    // Don't consume trailing commas as valid
                                    soFar = soFar.slice( match[0].length ) || soFar;
                                }
                                groups.push( (tokens = []) );
                            }

                            matched = false;

                            // Combinators
                            if ( (match = rcombinators.exec( soFar )) ) {
                                matched = match.shift();
                                tokens.push({
                                    value: matched,
                                    // Cast descendant combinators to space
                                    type: match[0].replace( rtrim, " " )
                                });
                                soFar = soFar.slice( matched.length );
                            }

                            // Filters
                            for ( type in Expr.filter ) {
                                if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
                                    (match = preFilters[ type ]( match ))) ) {
                                    matched = match.shift();
                                    tokens.push({
                                        value: matched,
                                        type: type,
                                        matches: match
                                    });
                                    soFar = soFar.slice( matched.length );
                                }
                            }

                            if ( !matched ) {
                                break;
                            }
                        }

                        // Return the length of the invalid excess
                        // if we're just parsing
                        // Otherwise, throw an error or return tokens
                        return parseOnly ?
                            soFar.length :
                            soFar ?
                                Sizzle.error( selector ) :
                                // Cache the tokens
                                tokenCache( selector, groups ).slice( 0 );
                    };

                    function toSelector( tokens ) {
                        var i = 0,
                            len = tokens.length,
                            selector = "";
                        for ( ; i < len; i++ ) {
                            selector += tokens[i].value;
                        }
                        return selector;
                    }

                    function addCombinator( matcher, combinator, base ) {
                        var dir = combinator.dir,
                            skip = combinator.next,
                            key = skip || dir,
                            checkNonElements = base && key === "parentNode",
                            doneName = done++;

                        return combinator.first ?
                            // Check against closest ancestor/preceding element
                            function( elem, context, xml ) {
                                while ( (elem = elem[ dir ]) ) {
                                    if ( elem.nodeType === 1 || checkNonElements ) {
                                        return matcher( elem, context, xml );
                                    }
                                }
                                return false;
                            } :

                            // Check against all ancestor/preceding elements
                            function( elem, context, xml ) {
                                var oldCache, uniqueCache, outerCache,
                                    newCache = [ dirruns, doneName ];

                                // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
                                if ( xml ) {
                                    while ( (elem = elem[ dir ]) ) {
                                        if ( elem.nodeType === 1 || checkNonElements ) {
                                            if ( matcher( elem, context, xml ) ) {
                                                return true;
                                            }
                                        }
                                    }
                                } else {
                                    while ( (elem = elem[ dir ]) ) {
                                        if ( elem.nodeType === 1 || checkNonElements ) {
                                            outerCache = elem[ expando ] || (elem[ expando ] = {});

                                            // Support: IE <9 only
                                            // Defend against cloned attroperties (jQuery gh-1709)
                                            uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

                                            if ( skip && skip === elem.nodeName.toLowerCase() ) {
                                                elem = elem[ dir ] || elem;
                                            } else if ( (oldCache = uniqueCache[ key ]) &&
                                                oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

                                                // Assign to newCache so results back-propagate to previous elements
                                                return (newCache[ 2 ] = oldCache[ 2 ]);
                                            } else {
                                                // Reuse newcache so results back-propagate to previous elements
                                                uniqueCache[ key ] = newCache;

                                                // A match means we're done; a fail means we have to keep checking
                                                if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
                                                    return true;
                                                }
                                            }
                                        }
                                    }
                                }
                                return false;
                            };
                    }

                    function elementMatcher( matchers ) {
                        return matchers.length > 1 ?
                            function( elem, context, xml ) {
                                var i = matchers.length;
                                while ( i-- ) {
                                    if ( !matchers[i]( elem, context, xml ) ) {
                                        return false;
                                    }
                                }
                                return true;
                            } :
                            matchers[0];
                    }

                    function multipleContexts( selector, contexts, results ) {
                        var i = 0,
                            len = contexts.length;
                        for ( ; i < len; i++ ) {
                            Sizzle( selector, contexts[i], results );
                        }
                        return results;
                    }

                    function condense( unmatched, map, filter, context, xml ) {
                        var elem,
                            newUnmatched = [],
                            i = 0,
                            len = unmatched.length,
                            mapped = map != null;

                        for ( ; i < len; i++ ) {
                            if ( (elem = unmatched[i]) ) {
                                if ( !filter || filter( elem, context, xml ) ) {
                                    newUnmatched.push( elem );
                                    if ( mapped ) {
                                        map.push( i );
                                    }
                                }
                            }
                        }

                        return newUnmatched;
                    }

                    function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
                        if ( postFilter && !postFilter[ expando ] ) {
                            postFilter = setMatcher( postFilter );
                        }
                        if ( postFinder && !postFinder[ expando ] ) {
                            postFinder = setMatcher( postFinder, postSelector );
                        }
                        return markFunction(function( seed, results, context, xml ) {
                            var temp, i, elem,
                                preMap = [],
                                postMap = [],
                                preexisting = results.length,

                                // Get initial elements from seed or context
                                elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

                                // Prefilter to get matcher input, preserving a map for seed-results synchronization
                                matcherIn = preFilter && ( seed || !selector ) ?
                                    condense( elems, preMap, preFilter, context, xml ) :
                                    elems,

                                matcherOut = matcher ?
                                    // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
                                    postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

                                        // ...intermediate processing is necessary
                                        [] :

                                        // ...otherwise use results directly
                                        results :
                                    matcherIn;

                            // Find primary matches
                            if ( matcher ) {
                                matcher( matcherIn, matcherOut, context, xml );
                            }

                            // Apply postFilter
                            if ( postFilter ) {
                                temp = condense( matcherOut, postMap );
                                postFilter( temp, [], context, xml );

                                // Un-match failing elements by moving them back to matcherIn
                                i = temp.length;
                                while ( i-- ) {
                                    if ( (elem = temp[i]) ) {
                                        matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
                                    }
                                }
                            }

                            if ( seed ) {
                                if ( postFinder || preFilter ) {
                                    if ( postFinder ) {
                                        // Get the final matcherOut by condensing this intermediate into postFinder contexts
                                        temp = [];
                                        i = matcherOut.length;
                                        while ( i-- ) {
                                            if ( (elem = matcherOut[i]) ) {
                                                // Restore matcherIn since elem is not yet a final match
                                                temp.push( (matcherIn[i] = elem) );
                                            }
                                        }
                                        postFinder( null, (matcherOut = []), temp, xml );
                                    }

                                    // Move matched elements from seed to results to keep them synchronized
                                    i = matcherOut.length;
                                    while ( i-- ) {
                                        if ( (elem = matcherOut[i]) &&
                                            (temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

                                            seed[temp] = !(results[temp] = elem);
                                        }
                                    }
                                }

                                // Add elements to results, through postFinder if defined
                            } else {
                                matcherOut = condense(
                                    matcherOut === results ?
                                        matcherOut.splice( preexisting, matcherOut.length ) :
                                        matcherOut
                                );
                                if ( postFinder ) {
                                    postFinder( null, results, matcherOut, xml );
                                } else {
                                    push.apply( results, matcherOut );
                                }
                            }
                        });
                    }

                    function matcherFromTokens( tokens ) {
                        var checkContext, matcher, j,
                            len = tokens.length,
                            leadingRelative = Expr.relative[ tokens[0].type ],
                            implicitRelative = leadingRelative || Expr.relative[" "],
                            i = leadingRelative ? 1 : 0,

                            // The foundational matcher ensures that elements are reachable from top-level context(s)
                            matchContext = addCombinator( function( elem ) {
                                return elem === checkContext;
                            }, implicitRelative, true ),
                            matchAnyContext = addCombinator( function( elem ) {
                                return indexOf( checkContext, elem ) > -1;
                            }, implicitRelative, true ),
                            matchers = [ function( elem, context, xml ) {
                                var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
                                    (checkContext = context).nodeType ?
                                        matchContext( elem, context, xml ) :
                                        matchAnyContext( elem, context, xml ) );
                                // Avoid hanging onto element (issue #299)
                                checkContext = null;
                                return ret;
                            } ];

                        for ( ; i < len; i++ ) {
                            if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
                                matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
                            } else {
                                matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

                                // Return special upon seeing a positional matcher
                                if ( matcher[ expando ] ) {
                                    // Find the next relative operator (if any) for proper handling
                                    j = ++i;
                                    for ( ; j < len; j++ ) {
                                        if ( Expr.relative[ tokens[j].type ] ) {
                                            break;
                                        }
                                    }
                                    return setMatcher(
                                        i > 1 && elementMatcher( matchers ),
                                        i > 1 && toSelector(
                                        // If the preceding token was a descendant combinator, insert an implicit any-element `*`
                                        tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
                                        ).replace( rtrim, "$1" ),
                                        matcher,
                                        i < j && matcherFromTokens( tokens.slice( i, j ) ),
                                        j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
                                        j < len && toSelector( tokens )
                                    );
                                }
                                matchers.push( matcher );
                            }
                        }

                        return elementMatcher( matchers );
                    }

                    function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
                        var bySet = setMatchers.length > 0,
                            byElement = elementMatchers.length > 0,
                            superMatcher = function( seed, context, xml, results, outermost ) {
                                var elem, j, matcher,
                                    matchedCount = 0,
                                    i = "0",
                                    unmatched = seed && [],
                                    setMatched = [],
                                    contextBackup = outermostContext,
                                    // We must always have either seed elements or outermost context
                                    elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
                                    // Use integer dirruns iff this is the outermost matcher
                                    dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
                                    len = elems.length;

                                if ( outermost ) {
                                    outermostContext = context === document || context || outermost;
                                }

                                // Add elements passing elementMatchers directly to results
                                // Support: IE<9, Safari
                                // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
                                for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
                                    if ( byElement && elem ) {
                                        j = 0;
                                        if ( !context && elem.ownerDocument !== document ) {
                                            setDocument( elem );
                                            xml = !documentIsHTML;
                                        }
                                        while ( (matcher = elementMatchers[j++]) ) {
                                            if ( matcher( elem, context || document, xml) ) {
                                                results.push( elem );
                                                break;
                                            }
                                        }
                                        if ( outermost ) {
                                            dirruns = dirrunsUnique;
                                        }
                                    }

                                    // Track unmatched elements for set filters
                                    if ( bySet ) {
                                        // They will have gone through all possible matchers
                                        if ( (elem = !matcher && elem) ) {
                                            matchedCount--;
                                        }

                                        // Lengthen the array for every element, matched or not
                                        if ( seed ) {
                                            unmatched.push( elem );
                                        }
                                    }
                                }

                                // `i` is now the count of elements visited above, and adding it to `matchedCount`
                                // makes the latter nonnegative.
                                matchedCount += i;

                                // Apply set filters to unmatched elements
                                // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
                                // equals `i`), unless we didn't visit _any_ elements in the above loop because we have
                                // no element matchers and no seed.
                                // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
                                // case, which will result in a "00" `matchedCount` that differs from `i` but is also
                                // numerically zero.
                                if ( bySet && i !== matchedCount ) {
                                    j = 0;
                                    while ( (matcher = setMatchers[j++]) ) {
                                        matcher( unmatched, setMatched, context, xml );
                                    }

                                    if ( seed ) {
                                        // Reintegrate element matches to eliminate the need for sorting
                                        if ( matchedCount > 0 ) {
                                            while ( i-- ) {
                                                if ( !(unmatched[i] || setMatched[i]) ) {
                                                    setMatched[i] = pop.call( results );
                                                }
                                            }
                                        }

                                        // Discard index placeholder values to get only actual matches
                                        setMatched = condense( setMatched );
                                    }

                                    // Add matches to results
                                    push.apply( results, setMatched );

                                    // Seedless set matches succeeding multiple successful matchers stipulate sorting
                                    if ( outermost && !seed && setMatched.length > 0 &&
                                        ( matchedCount + setMatchers.length ) > 1 ) {

                                        Sizzle.uniqueSort( results );
                                    }
                                }

                                // Override manipulation of globals by nested matchers
                                if ( outermost ) {
                                    dirruns = dirrunsUnique;
                                    outermostContext = contextBackup;
                                }

                                return unmatched;
                            };

                        return bySet ?
                            markFunction( superMatcher ) :
                            superMatcher;
                    }

                    compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
                        var i,
                            setMatchers = [],
                            elementMatchers = [],
                            cached = compilerCache[ selector + " " ];

                        if ( !cached ) {
                            // Generate a function of recursive functions that can be used to check each element
                            if ( !match ) {
                                match = tokenize( selector );
                            }
                            i = match.length;
                            while ( i-- ) {
                                cached = matcherFromTokens( match[i] );
                                if ( cached[ expando ] ) {
                                    setMatchers.push( cached );
                                } else {
                                    elementMatchers.push( cached );
                                }
                            }

                            // Cache the compiled function
                            cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

                            // Save selector and tokenization
                            cached.selector = selector;
                        }
                        return cached;
                    };

                    /**
                     * A low-level selection function that works with Sizzle's compiled
                     *  selector functions
                     * @param {String|Function} selector A selector or a pre-compiled
                     *  selector function built with Sizzle.compile
                     * @param {Element} context
                     * @param {Array} [results]
                     * @param {Array} [seed] A set of elements to match against
                     */
                    select = Sizzle.select = function( selector, context, results, seed ) {
                        var i, tokens, token, type, find,
                            compiled = typeof selector === "function" && selector,
                            match = !seed && tokenize( (selector = compiled.selector || selector) );

                        results = results || [];

                        // Try to minimize operations if there is only one selector in the list and no seed
                        // (the latter of which guarantees us context)
                        if ( match.length === 1 ) {

                            // Reduce context if the leading compound selector is an ID
                            tokens = match[0] = match[0].slice( 0 );
                            if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
                                context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

                                context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
                                if ( !context ) {
                                    return results;

                                    // Precompiled matchers will still verify ancestry, so step up a level
                                } else if ( compiled ) {
                                    context = context.parentNode;
                                }

                                selector = selector.slice( tokens.shift().value.length );
                            }

                            // Fetch a seed set for right-to-left matching
                            i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
                            while ( i-- ) {
                                token = tokens[i];

                                // Abort if we hit a combinator
                                if ( Expr.relative[ (type = token.type) ] ) {
                                    break;
                                }
                                if ( (find = Expr.find[ type ]) ) {
                                    // Search, expanding context for leading sibling combinators
                                    if ( (seed = find(
                                        token.matches[0].replace( runescape, funescape ),
                                        rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
                                    )) ) {

                                        // If seed is empty or no tokens remain, we can return early
                                        tokens.splice( i, 1 );
                                        selector = seed.length && toSelector( tokens );
                                        if ( !selector ) {
                                            push.apply( results, seed );
                                            return results;
                                        }

                                        break;
                                    }
                                }
                            }
                        }

                        // Compile and execute a filtering function if one is not provided
                        // Provide `match` to avoid retokenization if we modified the selector above
                        ( compiled || compile( selector, match ) )(
                            seed,
                            context,
                            !documentIsHTML,
                            results,
                            !context || rsibling.test( selector ) && testContext( context.parentNode ) || context
                        );
                        return results;
                    };

// One-time assignments

// Sort stability
                    support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
                    support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
                    setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
                    support.sortDetached = assert(function( el ) {
                        // Should return 1, but returns 4 (following)
                        return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
                    });

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
                    if ( !assert(function( el ) {
                        el.innerHTML = "<a href='#'></a>";
                        return el.firstChild.getAttribute("href") === "#" ;
                    }) ) {
                        addHandle( "type|href|height|width", function( elem, name, isXML ) {
                            if ( !isXML ) {
                                return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
                            }
                        });
                    }

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
                    if ( !support.attributes || !assert(function( el ) {
                        el.innerHTML = "<input/>";
                        el.firstChild.setAttribute( "value", "" );
                        return el.firstChild.getAttribute( "value" ) === "";
                    }) ) {
                        addHandle( "value", function( elem, name, isXML ) {
                            if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
                                return elem.defaultValue;
                            }
                        });
                    }

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
                    if ( !assert(function( el ) {
                        return el.getAttribute("disabled") == null;
                    }) ) {
                        addHandle( booleans, function( elem, name, isXML ) {
                            var val;
                            if ( !isXML ) {
                                return elem[ name ] === true ? name.toLowerCase() :
                                    (val = elem.getAttributeNode( name )) && val.specified ?
                                        val.value :
                                        null;
                            }
                        });
                    }

                    return Sizzle;

                })( window );



            jQuery.find = Sizzle;
            jQuery.expr = Sizzle.selectors;

// Deprecated
            jQuery.expr[ ":" ] = jQuery.expr.pseudos;
            jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
            jQuery.text = Sizzle.getText;
            jQuery.isXMLDoc = Sizzle.isXML;
            jQuery.contains = Sizzle.contains;
            jQuery.escapeSelector = Sizzle.escape;




            var dir = function( elem, dir, until ) {
                var matched = [],
                    truncate = until !== undefined;

                while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
                    if ( elem.nodeType === 1 ) {
                        if ( truncate && jQuery( elem ).is( until ) ) {
                            break;
                        }
                        matched.push( elem );
                    }
                }
                return matched;
            };


            var siblings = function( n, elem ) {
                var matched = [];

                for ( ; n; n = n.nextSibling ) {
                    if ( n.nodeType === 1 && n !== elem ) {
                        matched.push( n );
                    }
                }

                return matched;
            };


            var rneedsContext = jQuery.expr.match.needsContext;



            function nodeName( elem, name ) {

                return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

            };
            var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
            function winnow( elements, qualifier, not ) {
                if ( isFunction( qualifier ) ) {
                    return jQuery.grep( elements, function( elem, i ) {
                        return !!qualifier.call( elem, i, elem ) !== not;
                    } );
                }

                // Single element
                if ( qualifier.nodeType ) {
                    return jQuery.grep( elements, function( elem ) {
                        return ( elem === qualifier ) !== not;
                    } );
                }

                // Arraylike of elements (jQuery, arguments, Array)
                if ( typeof qualifier !== "string" ) {
                    return jQuery.grep( elements, function( elem ) {
                        return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
                    } );
                }

                // Filtered directly for both simple and complex selectors
                return jQuery.filter( qualifier, elements, not );
            }

            jQuery.filter = function( expr, elems, not ) {
                var elem = elems[ 0 ];

                if ( not ) {
                    expr = ":not(" + expr + ")";
                }

                if ( elems.length === 1 && elem.nodeType === 1 ) {
                    return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
                }

                return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
                    return elem.nodeType === 1;
                } ) );
            };

            jQuery.fn.extend( {
                find: function( selector ) {
                    var i, ret,
                        len = this.length,
                        self = this;

                    if ( typeof selector !== "string" ) {
                        return this.pushStack( jQuery( selector ).filter( function() {
                            for ( i = 0; i < len; i++ ) {
                                if ( jQuery.contains( self[ i ], this ) ) {
                                    return true;
                                }
                            }
                        } ) );
                    }

                    ret = this.pushStack( [] );

                    for ( i = 0; i < len; i++ ) {
                        jQuery.find( selector, self[ i ], ret );
                    }

                    return len > 1 ? jQuery.uniqueSort( ret ) : ret;
                },
                filter: function( selector ) {
                    return this.pushStack( winnow( this, selector || [], false ) );
                },
                not: function( selector ) {
                    return this.pushStack( winnow( this, selector || [], true ) );
                },
                is: function( selector ) {
                    return !!winnow(
                        this,

                        // If this is a positional/relative selector, check membership in the returned set
                        // so $("p:first").is("p:last") won't return true for a doc with two "p".
                        typeof selector === "string" && rneedsContext.test( selector ) ?
                            jQuery( selector ) :
                            selector || [],
                        false
                    ).length;
                }
            } );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
            var rootjQuery,

                // A simple way to check for HTML strings
                // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
                // Strict HTML recognition (#11290: must start with <)
                // Shortcut simple #id case for speed
                rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

                init = jQuery.fn.init = function( selector, context, root ) {
                    var match, elem;

                    // HANDLE: $(""), $(null), $(undefined), $(false)
                    if ( !selector ) {
                        return this;
                    }

                    // Method init() accepts an alternate rootjQuery
                    // so migrate can support jQuery.sub (gh-2101)
                    root = root || rootjQuery;

                    // Handle HTML strings
                    if ( typeof selector === "string" ) {
                        if ( selector[ 0 ] === "<" &&
                            selector[ selector.length - 1 ] === ">" &&
                            selector.length >= 3 ) {

                            // Assume that strings that start and end with <> are HTML and skip the regex check
                            match = [ null, selector, null ];

                        } else {
                            match = rquickExpr.exec( selector );
                        }

                        // Match html or make sure no context is specified for #id
                        if ( match && ( match[ 1 ] || !context ) ) {

                            // HANDLE: $(html) -> $(array)
                            if ( match[ 1 ] ) {
                                context = context instanceof jQuery ? context[ 0 ] : context;

                                // Option to run scripts is true for back-compat
                                // Intentionally let the error be thrown if parseHTML is not present
                                jQuery.merge( this, jQuery.parseHTML(
                                    match[ 1 ],
                                    context && context.nodeType ? context.ownerDocument || context : document,
                                    true
                                ) );

                                // HANDLE: $(html, props)
                                if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
                                    for ( match in context ) {

                                        // Properties of context are called as methods if possible
                                        if ( isFunction( this[ match ] ) ) {
                                            this[ match ]( context[ match ] );

                                            // ...and otherwise set as attributes
                                        } else {
                                            this.attr( match, context[ match ] );
                                        }
                                    }
                                }

                                return this;

                                // HANDLE: $(#id)
                            } else {
                                elem = document.getElementById( match[ 2 ] );

                                if ( elem ) {

                                    // Inject the element directly into the jQuery object
                                    this[ 0 ] = elem;
                                    this.length = 1;
                                }
                                return this;
                            }

                            // HANDLE: $(expr, $(...))
                        } else if ( !context || context.jquery ) {
                            return ( context || root ).find( selector );

                            // HANDLE: $(expr, context)
                            // (which is just equivalent to: $(context).find(expr)
                        } else {
                            return this.constructor( context ).find( selector );
                        }

                        // HANDLE: $(DOMElement)
                    } else if ( selector.nodeType ) {
                        this[ 0 ] = selector;
                        this.length = 1;
                        return this;

                        // HANDLE: $(function)
                        // Shortcut for document ready
                    } else if ( isFunction( selector ) ) {
                        return root.ready !== undefined ?
                            root.ready( selector ) :

                            // Execute immediately if ready is not present
                            selector( jQuery );
                    }

                    return jQuery.makeArray( selector, this );
                };

// Give the init function the jQuery prototype for later instantiation
            init.prototype = jQuery.fn;

// Initialize central reference
            rootjQuery = jQuery( document );


            var rparentsprev = /^(?:parents|prev(?:Until|All))/,

                // Methods guaranteed to produce a unique set when starting from a unique set
                guaranteedUnique = {
                    children: true,
                    contents: true,
                    next: true,
                    prev: true
                };

            jQuery.fn.extend( {
                has: function( target ) {
                    var targets = jQuery( target, this ),
                        l = targets.length;

                    return this.filter( function() {
                        var i = 0;
                        for ( ; i < l; i++ ) {
                            if ( jQuery.contains( this, targets[ i ] ) ) {
                                return true;
                            }
                        }
                    } );
                },

                closest: function( selectors, context ) {
                    var cur,
                        i = 0,
                        l = this.length,
                        matched = [],
                        targets = typeof selectors !== "string" && jQuery( selectors );

                    // Positional selectors never match, since there's no _selection_ context
                    if ( !rneedsContext.test( selectors ) ) {
                        for ( ; i < l; i++ ) {
                            for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

                                // Always skip document fragments
                                if ( cur.nodeType < 11 && ( targets ?
                                    targets.index( cur ) > -1 :

                                    // Don't pass non-elements to Sizzle
                                    cur.nodeType === 1 &&
                                    jQuery.find.matchesSelector( cur, selectors ) ) ) {

                                    matched.push( cur );
                                    break;
                                }
                            }
                        }
                    }

                    return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
                },

                // Determine the position of an element within the set
                index: function( elem ) {

                    // No argument, return index in parent
                    if ( !elem ) {
                        return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
                    }

                    // Index in selector
                    if ( typeof elem === "string" ) {
                        return indexOf.call( jQuery( elem ), this[ 0 ] );
                    }

                    // Locate the position of the desired element
                    return indexOf.call( this,

                        // If it receives a jQuery object, the first element is used
                        elem.jquery ? elem[ 0 ] : elem
                    );
                },

                add: function( selector, context ) {
                    return this.pushStack(
                        jQuery.uniqueSort(
                            jQuery.merge( this.get(), jQuery( selector, context ) )
                        )
                    );
                },

                addBack: function( selector ) {
                    return this.add( selector == null ?
                        this.prevObject : this.prevObject.filter( selector )
                    );
                }
            } );

            function sibling( cur, dir ) {
                while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
                return cur;
            }

            jQuery.each( {
                parent: function( elem ) {
                    var parent = elem.parentNode;
                    return parent && parent.nodeType !== 11 ? parent : null;
                },
                parents: function( elem ) {
                    return dir( elem, "parentNode" );
                },
                parentsUntil: function( elem, i, until ) {
                    return dir( elem, "parentNode", until );
                },
                next: function( elem ) {
                    return sibling( elem, "nextSibling" );
                },
                prev: function( elem ) {
                    return sibling( elem, "previousSibling" );
                },
                nextAll: function( elem ) {
                    return dir( elem, "nextSibling" );
                },
                prevAll: function( elem ) {
                    return dir( elem, "previousSibling" );
                },
                nextUntil: function( elem, i, until ) {
                    return dir( elem, "nextSibling", until );
                },
                prevUntil: function( elem, i, until ) {
                    return dir( elem, "previousSibling", until );
                },
                siblings: function( elem ) {
                    return siblings( ( elem.parentNode || {} ).firstChild, elem );
                },
                children: function( elem ) {
                    return siblings( elem.firstChild );
                },
                contents: function( elem ) {
                    if ( nodeName( elem, "iframe" ) ) {
                        return elem.contentDocument;
                    }

                    // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
                    // Treat the template element as a regular one in browsers that
                    // don't support it.
                    if ( nodeName( elem, "template" ) ) {
                        elem = elem.content || elem;
                    }

                    return jQuery.merge( [], elem.childNodes );
                }
            }, function( name, fn ) {
                jQuery.fn[ name ] = function( until, selector ) {
                    var matched = jQuery.map( this, fn, until );

                    if ( name.slice( -5 ) !== "Until" ) {
                        selector = until;
                    }

                    if ( selector && typeof selector === "string" ) {
                        matched = jQuery.filter( selector, matched );
                    }

                    if ( this.length > 1 ) {

                        // Remove duplicates
                        if ( !guaranteedUnique[ name ] ) {
                            jQuery.uniqueSort( matched );
                        }

                        // Reverse order for parents* and prev-derivatives
                        if ( rparentsprev.test( name ) ) {
                            matched.reverse();
                        }
                    }

                    return this.pushStack( matched );
                };
            } );
            var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
            function createOptions( options ) {
                var object = {};
                jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
                    object[ flag ] = true;
                } );
                return object;
            }

            /*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
            jQuery.Callbacks = function( options ) {

                // Convert options from String-formatted to Object-formatted if needed
                // (we check in cache first)
                options = typeof options === "string" ?
                    createOptions( options ) :
                    jQuery.extend( {}, options );

                var // Flag to know if list is currently firing
                    firing,

                    // Last fire value for non-forgettable lists
                    memory,

                    // Flag to know if list was already fired
                    fired,

                    // Flag to prevent firing
                    locked,

                    // Actual callback list
                    list = [],

                    // Queue of execution data for repeatable lists
                    queue = [],

                    // Index of currently firing callback (modified by add/remove as needed)
                    firingIndex = -1,

                    // Fire callbacks
                    fire = function() {

                        // Enforce single-firing
                        locked = locked || options.once;

                        // Execute callbacks for all pending executions,
                        // respecting firingIndex overrides and runtime changes
                        fired = firing = true;
                        for ( ; queue.length; firingIndex = -1 ) {
                            memory = queue.shift();
                            while ( ++firingIndex < list.length ) {

                                // Run callback and check for early termination
                                if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
                                    options.stopOnFalse ) {

                                    // Jump to end and forget the data so .add doesn't re-fire
                                    firingIndex = list.length;
                                    memory = false;
                                }
                            }
                        }

                        // Forget the data if we're done with it
                        if ( !options.memory ) {
                            memory = false;
                        }

                        firing = false;

                        // Clean up if we're done firing for good
                        if ( locked ) {

                            // Keep an empty list if we have data for future add calls
                            if ( memory ) {
                                list = [];

                                // Otherwise, this object is spent
                            } else {
                                list = "";
                            }
                        }
                    },

                    // Actual Callbacks object
                    self = {

                        // Add a callback or a collection of callbacks to the list
                        add: function() {
                            if ( list ) {

                                // If we have memory from a past run, we should fire after adding
                                if ( memory && !firing ) {
                                    firingIndex = list.length - 1;
                                    queue.push( memory );
                                }

                                ( function add( args ) {
                                    jQuery.each( args, function( _, arg ) {
                                        if ( isFunction( arg ) ) {
                                            if ( !options.unique || !self.has( arg ) ) {
                                                list.push( arg );
                                            }
                                        } else if ( arg && arg.length && toType( arg ) !== "string" ) {

                                            // Inspect recursively
                                            add( arg );
                                        }
                                    } );
                                } )( arguments );

                                if ( memory && !firing ) {
                                    fire();
                                }
                            }
                            return this;
                        },

                        // Remove a callback from the list
                        remove: function() {
                            jQuery.each( arguments, function( _, arg ) {
                                var index;
                                while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
                                    list.splice( index, 1 );

                                    // Handle firing indexes
                                    if ( index <= firingIndex ) {
                                        firingIndex--;
                                    }
                                }
                            } );
                            return this;
                        },

                        // Check if a given callback is in the list.
                        // If no argument is given, return whether or not list has callbacks attached.
                        has: function( fn ) {
                            return fn ?
                                jQuery.inArray( fn, list ) > -1 :
                                list.length > 0;
                        },

                        // Remove all callbacks from the list
                        empty: function() {
                            if ( list ) {
                                list = [];
                            }
                            return this;
                        },

                        // Disable .fire and .add
                        // Abort any current/pending executions
                        // Clear all callbacks and values
                        disable: function() {
                            locked = queue = [];
                            list = memory = "";
                            return this;
                        },
                        disabled: function() {
                            return !list;
                        },

                        // Disable .fire
                        // Also disable .add unless we have memory (since it would have no effect)
                        // Abort any pending executions
                        lock: function() {
                            locked = queue = [];
                            if ( !memory && !firing ) {
                                list = memory = "";
                            }
                            return this;
                        },
                        locked: function() {
                            return !!locked;
                        },

                        // Call all callbacks with the given context and arguments
                        fireWith: function( context, args ) {
                            if ( !locked ) {
                                args = args || [];
                                args = [ context, args.slice ? args.slice() : args ];
                                queue.push( args );
                                if ( !firing ) {
                                    fire();
                                }
                            }
                            return this;
                        },

                        // Call all the callbacks with the given arguments
                        fire: function() {
                            self.fireWith( this, arguments );
                            return this;
                        },

                        // To know if the callbacks have already been called at least once
                        fired: function() {
                            return !!fired;
                        }
                    };

                return self;
            };


            function Identity( v ) {
                return v;
            }
            function Thrower( ex ) {
                throw ex;
            }

            function adoptValue( value, resolve, reject, noValue ) {
                var method;

                try {

                    // Check for promise aspect first to privilege synchronous behavior
                    if ( value && isFunction( ( method = value.promise ) ) ) {
                        method.call( value ).done( resolve ).fail( reject );

                        // Other thenables
                    } else if ( value && isFunction( ( method = value.then ) ) ) {
                        method.call( value, resolve, reject );

                        // Other non-thenables
                    } else {

                        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
                        // * false: [ value ].slice( 0 ) => resolve( value )
                        // * true: [ value ].slice( 1 ) => resolve()
                        resolve.apply( undefined, [ value ].slice( noValue ) );
                    }

                    // For Promises/A+, convert exceptions into rejections
                    // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
                    // Deferred#then to conditionally suppress rejection.
                } catch ( value ) {

                    // Support: Android 4.0 only
                    // Strict mode functions invoked without .call/.apply get global-object context
                    reject.apply( undefined, [ value ] );
                }
            }

            jQuery.extend( {

                Deferred: function( func ) {
                    var tuples = [

                            // action, add listener, callbacks,
                            // ... .then handlers, argument index, [final state]
                            [ "notify", "progress", jQuery.Callbacks( "memory" ),
                                jQuery.Callbacks( "memory" ), 2 ],
                            [ "resolve", "done", jQuery.Callbacks( "once memory" ),
                                jQuery.Callbacks( "once memory" ), 0, "resolved" ],
                            [ "reject", "fail", jQuery.Callbacks( "once memory" ),
                                jQuery.Callbacks( "once memory" ), 1, "rejected" ]
                        ],
                        state = "pending",
                        promise = {
                            state: function() {
                                return state;
                            },
                            always: function() {
                                deferred.done( arguments ).fail( arguments );
                                return this;
                            },
                            "catch": function( fn ) {
                                return promise.then( null, fn );
                            },

                            // Keep pipe for back-compat
                            pipe: function( /* fnDone, fnFail, fnProgress */ ) {
                                var fns = arguments;

                                return jQuery.Deferred( function( newDefer ) {
                                    jQuery.each( tuples, function( i, tuple ) {

                                        // Map tuples (progress, done, fail) to arguments (done, fail, progress)
                                        var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

                                        // deferred.progress(function() { bind to newDefer or newDefer.notify })
                                        // deferred.done(function() { bind to newDefer or newDefer.resolve })
                                        // deferred.fail(function() { bind to newDefer or newDefer.reject })
                                        deferred[ tuple[ 1 ] ]( function() {
                                            var returned = fn && fn.apply( this, arguments );
                                            if ( returned && isFunction( returned.promise ) ) {
                                                returned.promise()
                                                    .progress( newDefer.notify )
                                                    .done( newDefer.resolve )
                                                    .fail( newDefer.reject );
                                            } else {
                                                newDefer[ tuple[ 0 ] + "With" ](
                                                    this,
                                                    fn ? [ returned ] : arguments
                                                );
                                            }
                                        } );
                                    } );
                                    fns = null;
                                } ).promise();
                            },
                            then: function( onFulfilled, onRejected, onProgress ) {
                                var maxDepth = 0;
                                function resolve( depth, deferred, handler, special ) {
                                    return function() {
                                        var that = this,
                                            args = arguments,
                                            mightThrow = function() {
                                                var returned, then;

                                                // Support: Promises/A+ section 2.3.3.3.3
                                                // https://promisesaplus.com/#point-59
                                                // Ignore double-resolution attempts
                                                if ( depth < maxDepth ) {
                                                    return;
                                                }

                                                returned = handler.apply( that, args );

                                                // Support: Promises/A+ section 2.3.1
                                                // https://promisesaplus.com/#point-48
                                                if ( returned === deferred.promise() ) {
                                                    throw new TypeError( "Thenable self-resolution" );
                                                }

                                                // Support: Promises/A+ sections 2.3.3.1, 3.5
                                                // https://promisesaplus.com/#point-54
                                                // https://promisesaplus.com/#point-75
                                                // Retrieve `then` only once
                                                then = returned &&

                                                    // Support: Promises/A+ section 2.3.4
                                                    // https://promisesaplus.com/#point-64
                                                    // Only check objects and functions for thenability
                                                    ( typeof returned === "object" ||
                                                        typeof returned === "function" ) &&
                                                    returned.then;

                                                // Handle a returned thenable
                                                if ( isFunction( then ) ) {

                                                    // Special processors (notify) just wait for resolution
                                                    if ( special ) {
                                                        then.call(
                                                            returned,
                                                            resolve( maxDepth, deferred, Identity, special ),
                                                            resolve( maxDepth, deferred, Thrower, special )
                                                        );

                                                        // Normal processors (resolve) also hook into progress
                                                    } else {

                                                        // ...and disregard older resolution values
                                                        maxDepth++;

                                                        then.call(
                                                            returned,
                                                            resolve( maxDepth, deferred, Identity, special ),
                                                            resolve( maxDepth, deferred, Thrower, special ),
                                                            resolve( maxDepth, deferred, Identity,
                                                                deferred.notifyWith )
                                                        );
                                                    }

                                                    // Handle all other returned values
                                                } else {

                                                    // Only substitute handlers pass on context
                                                    // and multiple values (non-spec behavior)
                                                    if ( handler !== Identity ) {
                                                        that = undefined;
                                                        args = [ returned ];
                                                    }

                                                    // Process the value(s)
                                                    // Default process is resolve
                                                    ( special || deferred.resolveWith )( that, args );
                                                }
                                            },

                                            // Only normal processors (resolve) catch and reject exceptions
                                            process = special ?
                                                mightThrow :
                                                function() {
                                                    try {
                                                        mightThrow();
                                                    } catch ( e ) {

                                                        if ( jQuery.Deferred.exceptionHook ) {
                                                            jQuery.Deferred.exceptionHook( e,
                                                                process.stackTrace );
                                                        }

                                                        // Support: Promises/A+ section 2.3.3.3.4.1
                                                        // https://promisesaplus.com/#point-61
                                                        // Ignore post-resolution exceptions
                                                        if ( depth + 1 >= maxDepth ) {

                                                            // Only substitute handlers pass on context
                                                            // and multiple values (non-spec behavior)
                                                            if ( handler !== Thrower ) {
                                                                that = undefined;
                                                                args = [ e ];
                                                            }

                                                            deferred.rejectWith( that, args );
                                                        }
                                                    }
                                                };

                                        // Support: Promises/A+ section 2.3.3.3.1
                                        // https://promisesaplus.com/#point-57
                                        // Re-resolve promises immediately to dodge false rejection from
                                        // subsequent errors
                                        if ( depth ) {
                                            process();
                                        } else {

                                            // Call an optional hook to record the stack, in case of exception
                                            // since it's otherwise lost when execution goes async
                                            if ( jQuery.Deferred.getStackHook ) {
                                                process.stackTrace = jQuery.Deferred.getStackHook();
                                            }
                                            window.setTimeout( process );
                                        }
                                    };
                                }

                                return jQuery.Deferred( function( newDefer ) {

                                    // progress_handlers.add( ... )
                                    tuples[ 0 ][ 3 ].add(
                                        resolve(
                                            0,
                                            newDefer,
                                            isFunction( onProgress ) ?
                                                onProgress :
                                                Identity,
                                            newDefer.notifyWith
                                        )
                                    );

                                    // fulfilled_handlers.add( ... )
                                    tuples[ 1 ][ 3 ].add(
                                        resolve(
                                            0,
                                            newDefer,
                                            isFunction( onFulfilled ) ?
                                                onFulfilled :
                                                Identity
                                        )
                                    );

                                    // rejected_handlers.add( ... )
                                    tuples[ 2 ][ 3 ].add(
                                        resolve(
                                            0,
                                            newDefer,
                                            isFunction( onRejected ) ?
                                                onRejected :
                                                Thrower
                                        )
                                    );
                                } ).promise();
                            },

                            // Get a promise for this deferred
                            // If obj is provided, the promise aspect is added to the object
                            promise: function( obj ) {
                                return obj != null ? jQuery.extend( obj, promise ) : promise;
                            }
                        },
                        deferred = {};

                    // Add list-specific methods
                    jQuery.each( tuples, function( i, tuple ) {
                        var list = tuple[ 2 ],
                            stateString = tuple[ 5 ];

                        // promise.progress = list.add
                        // promise.done = list.add
                        // promise.fail = list.add
                        promise[ tuple[ 1 ] ] = list.add;

                        // Handle state
                        if ( stateString ) {
                            list.add(
                                function() {

                                    // state = "resolved" (i.e., fulfilled)
                                    // state = "rejected"
                                    state = stateString;
                                },

                                // rejected_callbacks.disable
                                // fulfilled_callbacks.disable
                                tuples[ 3 - i ][ 2 ].disable,

                                // rejected_handlers.disable
                                // fulfilled_handlers.disable
                                tuples[ 3 - i ][ 3 ].disable,

                                // progress_callbacks.lock
                                tuples[ 0 ][ 2 ].lock,

                                // progress_handlers.lock
                                tuples[ 0 ][ 3 ].lock
                            );
                        }

                        // progress_handlers.fire
                        // fulfilled_handlers.fire
                        // rejected_handlers.fire
                        list.add( tuple[ 3 ].fire );

                        // deferred.notify = function() { deferred.notifyWith(...) }
                        // deferred.resolve = function() { deferred.resolveWith(...) }
                        // deferred.reject = function() { deferred.rejectWith(...) }
                        deferred[ tuple[ 0 ] ] = function() {
                            deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
                            return this;
                        };

                        // deferred.notifyWith = list.fireWith
                        // deferred.resolveWith = list.fireWith
                        // deferred.rejectWith = list.fireWith
                        deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
                    } );

                    // Make the deferred a promise
                    promise.promise( deferred );

                    // Call given func if any
                    if ( func ) {
                        func.call( deferred, deferred );
                    }

                    // All done!
                    return deferred;
                },

                // Deferred helper
                when: function( singleValue ) {
                    var

                        // count of uncompleted subordinates
                        remaining = arguments.length,

                        // count of unprocessed arguments
                        i = remaining,

                        // subordinate fulfillment data
                        resolveContexts = Array( i ),
                        resolveValues = slice.call( arguments ),

                        // the master Deferred
                        master = jQuery.Deferred(),

                        // subordinate callback factory
                        updateFunc = function( i ) {
                            return function( value ) {
                                resolveContexts[ i ] = this;
                                resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
                                if ( !( --remaining ) ) {
                                    master.resolveWith( resolveContexts, resolveValues );
                                }
                            };
                        };

                    // Single- and empty arguments are adopted like Promise.resolve
                    if ( remaining <= 1 ) {
                        adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
                            !remaining );

                        // Use .then() to unwrap secondary thenables (cf. gh-3000)
                        if ( master.state() === "pending" ||
                            isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

                            return master.then();
                        }
                    }

                    // Multiple arguments are aggregated like Promise.all array elements
                    while ( i-- ) {
                        adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
                    }

                    return master.promise();
                }
            } );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
            var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

            jQuery.Deferred.exceptionHook = function( error, stack ) {

                // Support: IE 8 - 9 only
                // Console exists when dev tools are open, which can happen at any time
                if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
                    window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
                }
            };




            jQuery.readyException = function( error ) {
                window.setTimeout( function() {
                    throw error;
                } );
            };




// The deferred used on DOM ready
            var readyList = jQuery.Deferred();

            jQuery.fn.ready = function( fn ) {

                readyList
                    .then( fn )

                    // Wrap jQuery.readyException in a function so that the lookup
                    // happens at the time of error handling instead of callback
                    // registration.
                    .catch( function( error ) {
                        jQuery.readyException( error );
                    } );

                return this;
            };

            jQuery.extend( {

                // Is the DOM ready to be used? Set to true once it occurs.
                isReady: false,

                // A counter to track how many items to wait for before
                // the ready event fires. See #6781
                readyWait: 1,

                // Handle when the DOM is ready
                ready: function( wait ) {

                    // Abort if there are pending holds or we're already ready
                    if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
                        return;
                    }

                    // Remember that the DOM is ready
                    jQuery.isReady = true;

                    // If a normal DOM Ready event fired, decrement, and wait if need be
                    if ( wait !== true && --jQuery.readyWait > 0 ) {
                        return;
                    }

                    // If there are functions bound, to execute
                    readyList.resolveWith( document, [ jQuery ] );
                }
            } );

            jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
            function completed() {
                document.removeEventListener( "DOMContentLoaded", completed );
                window.removeEventListener( "load", completed );
                jQuery.ready();
            }

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
            if ( document.readyState === "complete" ||
                ( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

                // Handle it asynchronously to allow scripts the opportunity to delay ready
                window.setTimeout( jQuery.ready );

            } else {

                // Use the handy event callback
                document.addEventListener( "DOMContentLoaded", completed );

                // A fallback to window.onload, that will always work
                window.addEventListener( "load", completed );
            }




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
            var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
                var i = 0,
                    len = elems.length,
                    bulk = key == null;

                // Sets many values
                if ( toType( key ) === "object" ) {
                    chainable = true;
                    for ( i in key ) {
                        access( elems, fn, i, key[ i ], true, emptyGet, raw );
                    }

                    // Sets one value
                } else if ( value !== undefined ) {
                    chainable = true;

                    if ( !isFunction( value ) ) {
                        raw = true;
                    }

                    if ( bulk ) {

                        // Bulk operations run against the entire set
                        if ( raw ) {
                            fn.call( elems, value );
                            fn = null;

                            // ...except when executing function values
                        } else {
                            bulk = fn;
                            fn = function( elem, key, value ) {
                                return bulk.call( jQuery( elem ), value );
                            };
                        }
                    }

                    if ( fn ) {
                        for ( ; i < len; i++ ) {
                            fn(
                                elems[ i ], key, raw ?
                                    value :
                                    value.call( elems[ i ], i, fn( elems[ i ], key ) )
                            );
                        }
                    }
                }

                if ( chainable ) {
                    return elems;
                }

                // Gets
                if ( bulk ) {
                    return fn.call( elems );
                }

                return len ? fn( elems[ 0 ], key ) : emptyGet;
            };


// Matches dashed string for camelizing
            var rmsPrefix = /^-ms-/,
                rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
            function fcamelCase( all, letter ) {
                return letter.toUpperCase();
            }

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
            function camelCase( string ) {
                return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
            }
            var acceptData = function( owner ) {

                // Accepts only:
                //  - Node
                //    - Node.ELEMENT_NODE
                //    - Node.DOCUMENT_NODE
                //  - Object
                //    - Any
                return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
            };




            function Data() {
                this.expando = jQuery.expando + Data.uid++;
            }

            Data.uid = 1;

            Data.prototype = {

                cache: function( owner ) {

                    // Check if the owner object already has a cache
                    var value = owner[ this.expando ];

                    // If not, create one
                    if ( !value ) {
                        value = {};

                        // We can accept data for non-element nodes in modern browsers,
                        // but we should not, see #8335.
                        // Always return an empty object.
                        if ( acceptData( owner ) ) {

                            // If it is a node unlikely to be stringify-ed or looped over
                            // use plain assignment
                            if ( owner.nodeType ) {
                                owner[ this.expando ] = value;

                                // Otherwise secure it in a non-enumerable property
                                // configurable must be true to allow the property to be
                                // deleted when data is removed
                            } else {
                                Object.defineProperty( owner, this.expando, {
                                    value: value,
                                    configurable: true
                                } );
                            }
                        }
                    }

                    return value;
                },
                set: function( owner, data, value ) {
                    var prop,
                        cache = this.cache( owner );

                    // Handle: [ owner, key, value ] args
                    // Always use camelCase key (gh-2257)
                    if ( typeof data === "string" ) {
                        cache[ camelCase( data ) ] = value;

                        // Handle: [ owner, { properties } ] args
                    } else {

                        // Copy the properties one-by-one to the cache object
                        for ( prop in data ) {
                            cache[ camelCase( prop ) ] = data[ prop ];
                        }
                    }
                    return cache;
                },
                get: function( owner, key ) {
                    return key === undefined ?
                        this.cache( owner ) :

                        // Always use camelCase key (gh-2257)
                        owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
                },
                access: function( owner, key, value ) {

                    // In cases where either:
                    //
                    //   1. No key was specified
                    //   2. A string key was specified, but no value provided
                    //
                    // Take the "read" path and allow the get method to determine
                    // which value to return, respectively either:
                    //
                    //   1. The entire cache object
                    //   2. The data stored at the key
                    //
                    if ( key === undefined ||
                        ( ( key && typeof key === "string" ) && value === undefined ) ) {

                        return this.get( owner, key );
                    }

                    // When the key is not a string, or both a key and value
                    // are specified, set or extend (existing objects) with either:
                    //
                    //   1. An object of properties
                    //   2. A key and value
                    //
                    this.set( owner, key, value );

                    // Since the "set" path can have two possible entry points
                    // return the expected data based on which path was taken[*]
                    return value !== undefined ? value : key;
                },
                remove: function( owner, key ) {
                    var i,
                        cache = owner[ this.expando ];

                    if ( cache === undefined ) {
                        return;
                    }

                    if ( key !== undefined ) {

                        // Support array or space separated string of keys
                        if ( Array.isArray( key ) ) {

                            // If key is an array of keys...
                            // We always set camelCase keys, so remove that.
                            key = key.map( camelCase );
                        } else {
                            key = camelCase( key );

                            // If a key with the spaces exists, use it.
                            // Otherwise, create an array by matching non-whitespace
                            key = key in cache ?
                                [ key ] :
                                ( key.match( rnothtmlwhite ) || [] );
                        }

                        i = key.length;

                        while ( i-- ) {
                            delete cache[ key[ i ] ];
                        }
                    }

                    // Remove the expando if there's no more data
                    if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

                        // Support: Chrome <=35 - 45
                        // Webkit & Blink performance suffers when deleting properties
                        // from DOM nodes, so set to undefined instead
                        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
                        if ( owner.nodeType ) {
                            owner[ this.expando ] = undefined;
                        } else {
                            delete owner[ this.expando ];
                        }
                    }
                },
                hasData: function( owner ) {
                    var cache = owner[ this.expando ];
                    return cache !== undefined && !jQuery.isEmptyObject( cache );
                }
            };
            var dataPriv = new Data();

            var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

            var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                rmultiDash = /[A-Z]/g;

            function getData( data ) {
                if ( data === "true" ) {
                    return true;
                }

                if ( data === "false" ) {
                    return false;
                }

                if ( data === "null" ) {
                    return null;
                }

                // Only convert to a number if it doesn't change the string
                if ( data === +data + "" ) {
                    return +data;
                }

                if ( rbrace.test( data ) ) {
                    return JSON.parse( data );
                }

                return data;
            }

            function dataAttr( elem, key, data ) {
                var name;

                // If nothing was found internally, try to fetch any
                // data from the HTML5 data-* attribute
                if ( data === undefined && elem.nodeType === 1 ) {
                    name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
                    data = elem.getAttribute( name );

                    if ( typeof data === "string" ) {
                        try {
                            data = getData( data );
                        } catch ( e ) {}

                        // Make sure we set the data so it isn't changed later
                        dataUser.set( elem, key, data );
                    } else {
                        data = undefined;
                    }
                }
                return data;
            }

            jQuery.extend( {
                hasData: function( elem ) {
                    return dataUser.hasData( elem ) || dataPriv.hasData( elem );
                },

                data: function( elem, name, data ) {
                    return dataUser.access( elem, name, data );
                },

                removeData: function( elem, name ) {
                    dataUser.remove( elem, name );
                },

                // TODO: Now that all calls to _data and _removeData have been replaced
                // with direct calls to dataPriv methods, these can be deprecated.
                _data: function( elem, name, data ) {
                    return dataPriv.access( elem, name, data );
                },

                _removeData: function( elem, name ) {
                    dataPriv.remove( elem, name );
                }
            } );

            jQuery.fn.extend( {
                data: function( key, value ) {
                    var i, name, data,
                        elem = this[ 0 ],
                        attrs = elem && elem.attributes;

                    // Gets all values
                    if ( key === undefined ) {
                        if ( this.length ) {
                            data = dataUser.get( elem );

                            if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
                                i = attrs.length;
                                while ( i-- ) {

                                    // Support: IE 11 only
                                    // The attrs elements can be null (#14894)
                                    if ( attrs[ i ] ) {
                                        name = attrs[ i ].name;
                                        if ( name.indexOf( "data-" ) === 0 ) {
                                            name = camelCase( name.slice( 5 ) );
                                            dataAttr( elem, name, data[ name ] );
                                        }
                                    }
                                }
                                dataPriv.set( elem, "hasDataAttrs", true );
                            }
                        }

                        return data;
                    }

                    // Sets multiple values
                    if ( typeof key === "object" ) {
                        return this.each( function() {
                            dataUser.set( this, key );
                        } );
                    }

                    return access( this, function( value ) {
                        var data;

                        // The calling jQuery object (element matches) is not empty
                        // (and therefore has an element appears at this[ 0 ]) and the
                        // `value` parameter was not undefined. An empty jQuery object
                        // will result in `undefined` for elem = this[ 0 ] which will
                        // throw an exception if an attempt to read a data cache is made.
                        if ( elem && value === undefined ) {

                            // Attempt to get data from the cache
                            // The key will always be camelCased in Data
                            data = dataUser.get( elem, key );
                            if ( data !== undefined ) {
                                return data;
                            }

                            // Attempt to "discover" the data in
                            // HTML5 custom data-* attrs
                            data = dataAttr( elem, key );
                            if ( data !== undefined ) {
                                return data;
                            }

                            // We tried really hard, but the data doesn't exist.
                            return;
                        }

                        // Set the data...
                        this.each( function() {

                            // We always store the camelCased key
                            dataUser.set( this, key, value );
                        } );
                    }, null, value, arguments.length > 1, null, true );
                },

                removeData: function( key ) {
                    return this.each( function() {
                        dataUser.remove( this, key );
                    } );
                }
            } );


            jQuery.extend( {
                queue: function( elem, type, data ) {
                    var queue;

                    if ( elem ) {
                        type = ( type || "fx" ) + "queue";
                        queue = dataPriv.get( elem, type );

                        // Speed up dequeue by getting out quickly if this is just a lookup
                        if ( data ) {
                            if ( !queue || Array.isArray( data ) ) {
                                queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
                            } else {
                                queue.push( data );
                            }
                        }
                        return queue || [];
                    }
                },

                dequeue: function( elem, type ) {
                    type = type || "fx";

                    var queue = jQuery.queue( elem, type ),
                        startLength = queue.length,
                        fn = queue.shift(),
                        hooks = jQuery._queueHooks( elem, type ),
                        next = function() {
                            jQuery.dequeue( elem, type );
                        };

                    // If the fx queue is dequeued, always remove the progress sentinel
                    if ( fn === "inprogress" ) {
                        fn = queue.shift();
                        startLength--;
                    }

                    if ( fn ) {

                        // Add a progress sentinel to prevent the fx queue from being
                        // automatically dequeued
                        if ( type === "fx" ) {
                            queue.unshift( "inprogress" );
                        }

                        // Clear up the last queue stop function
                        delete hooks.stop;
                        fn.call( elem, next, hooks );
                    }

                    if ( !startLength && hooks ) {
                        hooks.empty.fire();
                    }
                },

                // Not public - generate a queueHooks object, or return the current one
                _queueHooks: function( elem, type ) {
                    var key = type + "queueHooks";
                    return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
                        empty: jQuery.Callbacks( "once memory" ).add( function() {
                            dataPriv.remove( elem, [ type + "queue", key ] );
                        } )
                    } );
                }
            } );

            jQuery.fn.extend( {
                queue: function( type, data ) {
                    var setter = 2;

                    if ( typeof type !== "string" ) {
                        data = type;
                        type = "fx";
                        setter--;
                    }

                    if ( arguments.length < setter ) {
                        return jQuery.queue( this[ 0 ], type );
                    }

                    return data === undefined ?
                        this :
                        this.each( function() {
                            var queue = jQuery.queue( this, type, data );

                            // Ensure a hooks for this queue
                            jQuery._queueHooks( this, type );

                            if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
                                jQuery.dequeue( this, type );
                            }
                        } );
                },
                dequeue: function( type ) {
                    return this.each( function() {
                        jQuery.dequeue( this, type );
                    } );
                },
                clearQueue: function( type ) {
                    return this.queue( type || "fx", [] );
                },

                // Get a promise resolved when queues of a certain type
                // are emptied (fx is the type by default)
                promise: function( type, obj ) {
                    var tmp,
                        count = 1,
                        defer = jQuery.Deferred(),
                        elements = this,
                        i = this.length,
                        resolve = function() {
                            if ( !( --count ) ) {
                                defer.resolveWith( elements, [ elements ] );
                            }
                        };

                    if ( typeof type !== "string" ) {
                        obj = type;
                        type = undefined;
                    }
                    type = type || "fx";

                    while ( i-- ) {
                        tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
                        if ( tmp && tmp.empty ) {
                            count++;
                            tmp.empty.add( resolve );
                        }
                    }
                    resolve();
                    return defer.promise( obj );
                }
            } );
            var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

            var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


            var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

            var isHiddenWithinTree = function( elem, el ) {

                // isHiddenWithinTree might be called from jQuery#filter function;
                // in that case, element will be second argument
                elem = el || elem;

                // Inline style trumps all
                return elem.style.display === "none" ||
                    elem.style.display === "" &&

                    // Otherwise, check computed style
                    // Support: Firefox <=43 - 45
                    // Disconnected elements can have computed display: none, so first confirm that elem is
                    // in the document.
                    jQuery.contains( elem.ownerDocument, elem ) &&

                    jQuery.css( elem, "display" ) === "none";
            };

            var swap = function( elem, options, callback, args ) {
                var ret, name,
                    old = {};

                // Remember the old values, and insert the new ones
                for ( name in options ) {
                    old[ name ] = elem.style[ name ];
                    elem.style[ name ] = options[ name ];
                }

                ret = callback.apply( elem, args || [] );

                // Revert the old values
                for ( name in options ) {
                    elem.style[ name ] = old[ name ];
                }

                return ret;
            };




            function adjustCSS( elem, prop, valueParts, tween ) {
                var adjusted, scale,
                    maxIterations = 20,
                    currentValue = tween ?
                        function() {
                            return tween.cur();
                        } :
                        function() {
                            return jQuery.css( elem, prop, "" );
                        },
                    initial = currentValue(),
                    unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

                    // Starting value computation is required for potential unit mismatches
                    initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
                        rcssNum.exec( jQuery.css( elem, prop ) );

                if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

                    // Support: Firefox <=54
                    // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
                    initial = initial / 2;

                    // Trust units reported by jQuery.css
                    unit = unit || initialInUnit[ 3 ];

                    // Iteratively approximate from a nonzero starting point
                    initialInUnit = +initial || 1;

                    while ( maxIterations-- ) {

                        // Evaluate and update our best guess (doubling guesses that zero out).
                        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).
                        jQuery.style( elem, prop, initialInUnit + unit );
                        if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
                            maxIterations = 0;
                        }
                        initialInUnit = initialInUnit / scale;

                    }

                    initialInUnit = initialInUnit * 2;
                    jQuery.style( elem, prop, initialInUnit + unit );

                    // Make sure we update the tween properties later on
                    valueParts = valueParts || [];
                }

                if ( valueParts ) {
                    initialInUnit = +initialInUnit || +initial || 0;

                    // Apply relative offset (+=/-=) if specified
                    adjusted = valueParts[ 1 ] ?
                        initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
                        +valueParts[ 2 ];
                    if ( tween ) {
                        tween.unit = unit;
                        tween.start = initialInUnit;
                        tween.end = adjusted;
                    }
                }
                return adjusted;
            }


            var defaultDisplayMap = {};

            function getDefaultDisplay( elem ) {
                var temp,
                    doc = elem.ownerDocument,
                    nodeName = elem.nodeName,
                    display = defaultDisplayMap[ nodeName ];

                if ( display ) {
                    return display;
                }

                temp = doc.body.appendChild( doc.createElement( nodeName ) );
                display = jQuery.css( temp, "display" );

                temp.parentNode.removeChild( temp );

                if ( display === "none" ) {
                    display = "block";
                }
                defaultDisplayMap[ nodeName ] = display;

                return display;
            }

            function showHide( elements, show ) {
                var display, elem,
                    values = [],
                    index = 0,
                    length = elements.length;

                // Determine new display value for elements that need to change
                for ( ; index < length; index++ ) {
                    elem = elements[ index ];
                    if ( !elem.style ) {
                        continue;
                    }

                    display = elem.style.display;
                    if ( show ) {

                        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)
                        // check is required in this first loop unless we have a nonempty display value (either
                        // inline or about-to-be-restored)
                        if ( display === "none" ) {
                            values[ index ] = dataPriv.get( elem, "display" ) || null;
                            if ( !values[ index ] ) {
                                elem.style.display = "";
                            }
                        }
                        if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
                            values[ index ] = getDefaultDisplay( elem );
                        }
                    } else {
                        if ( display !== "none" ) {
                            values[ index ] = "none";

                            // Remember what we're overwriting
                            dataPriv.set( elem, "display", display );
                        }
                    }
                }

                // Set the display of the elements in a second loop to avoid constant reflow
                for ( index = 0; index < length; index++ ) {
                    if ( values[ index ] != null ) {
                        elements[ index ].style.display = values[ index ];
                    }
                }

                return elements;
            }

            jQuery.fn.extend( {
                show: function() {
                    return showHide( this, true );
                },
                hide: function() {
                    return showHide( this );
                },
                toggle: function( state ) {
                    if ( typeof state === "boolean" ) {
                        return state ? this.show() : this.hide();
                    }

                    return this.each( function() {
                        if ( isHiddenWithinTree( this ) ) {
                            jQuery( this ).show();
                        } else {
                            jQuery( this ).hide();
                        }
                    } );
                }
            } );
            var rcheckableType = ( /^(?:checkbox|radio)$/i );

            var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

            var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
            var wrapMap = {

                // Support: IE <=9 only
                option: [ 1, "<select multiple='multiple'>", "</select>" ],

                // XHTML parsers do not magically insert elements in the
                // same way that tag soup parsers do. So we cannot shorten
                // this by omitting <tbody> or other required elements.
                thead: [ 1, "<table>", "</table>" ],
                col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
                tr: [ 2, "<table><tbody>", "</tbody></table>" ],
                td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

                _default: [ 0, "", "" ]
            };

// Support: IE <=9 only
            wrapMap.optgroup = wrapMap.option;

            wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
            wrapMap.th = wrapMap.td;


            function getAll( context, tag ) {

                // Support: IE <=9 - 11 only
                // Use typeof to avoid zero-argument method invocation on host objects (#15151)
                var ret;

                if ( typeof context.getElementsByTagName !== "undefined" ) {
                    ret = context.getElementsByTagName( tag || "*" );

                } else if ( typeof context.querySelectorAll !== "undefined" ) {
                    ret = context.querySelectorAll( tag || "*" );

                } else {
                    ret = [];
                }

                if ( tag === undefined || tag && nodeName( context, tag ) ) {
                    return jQuery.merge( [ context ], ret );
                }

                return ret;
            }


// Mark scripts as having already been evaluated
            function setGlobalEval( elems, refElements ) {
                var i = 0,
                    l = elems.length;

                for ( ; i < l; i++ ) {
                    dataPriv.set(
                        elems[ i ],
                        "globalEval",
                        !refElements || dataPriv.get( refElements[ i ], "globalEval" )
                    );
                }
            }


            var rhtml = /<|&#?\w+;/;

            function buildFragment( elems, context, scripts, selection, ignored ) {
                var elem, tmp, tag, wrap, contains, j,
                    fragment = context.createDocumentFragment(),
                    nodes = [],
                    i = 0,
                    l = elems.length;

                for ( ; i < l; i++ ) {
                    elem = elems[ i ];

                    if ( elem || elem === 0 ) {

                        // Add nodes directly
                        if ( toType( elem ) === "object" ) {

                            // Support: Android <=4.0 only, PhantomJS 1 only
                            // push.apply(_, arraylike) throws on ancient WebKit
                            jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

                            // Convert non-html into a text node
                        } else if ( !rhtml.test( elem ) ) {
                            nodes.push( context.createTextNode( elem ) );

                            // Convert html into DOM nodes
                        } else {
                            tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

                            // Deserialize a standard representation
                            tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
                            wrap = wrapMap[ tag ] || wrapMap._default;
                            tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

                            // Descend through wrappers to the right content
                            j = wrap[ 0 ];
                            while ( j-- ) {
                                tmp = tmp.lastChild;
                            }

                            // Support: Android <=4.0 only, PhantomJS 1 only
                            // push.apply(_, arraylike) throws on ancient WebKit
                            jQuery.merge( nodes, tmp.childNodes );

                            // Remember the top-level container
                            tmp = fragment.firstChild;

                            // Ensure the created nodes are orphaned (#12392)
                            tmp.textContent = "";
                        }
                    }
                }

                // Remove wrapper from fragment
                fragment.textContent = "";

                i = 0;
                while ( ( elem = nodes[ i++ ] ) ) {

                    // Skip elements already in the context collection (trac-4087)
                    if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
                        if ( ignored ) {
                            ignored.push( elem );
                        }
                        continue;
                    }

                    contains = jQuery.contains( elem.ownerDocument, elem );

                    // Append to fragment
                    tmp = getAll( fragment.appendChild( elem ), "script" );

                    // Preserve script evaluation history
                    if ( contains ) {
                        setGlobalEval( tmp );
                    }

                    // Capture executables
                    if ( scripts ) {
                        j = 0;
                        while ( ( elem = tmp[ j++ ] ) ) {
                            if ( rscriptType.test( elem.type || "" ) ) {
                                scripts.push( elem );
                            }
                        }
                    }
                }

                return fragment;
            }


            ( function() {
                var fragment = document.createDocumentFragment(),
                    div = fragment.appendChild( document.createElement( "div" ) ),
                    input = document.createElement( "input" );

                // Support: Android 4.0 - 4.3 only
                // Check state lost if the name is set (#11217)
                // Support: Windows Web Apps (WWA)
                // `name` and `type` must use .setAttribute for WWA (#14901)
                input.setAttribute( "type", "radio" );
                input.setAttribute( "checked", "checked" );
                input.setAttribute( "name", "t" );

                div.appendChild( input );

                // Support: Android <=4.1 only
                // Older WebKit doesn't clone checked state correctly in fragments
                support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

                // Support: IE <=11 only
                // Make sure textarea (and checkbox) defaultValue is properly cloned
                div.innerHTML = "<textarea>x</textarea>";
                support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
            } )();
            var documentElement = document.documentElement;



            var
                rkeyEvent = /^key/,
                rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
                rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

            function returnTrue() {
                return true;
            }

            function returnFalse() {
                return false;
            }

// Support: IE <=9 only
// See #13393 for more info
            function safeActiveElement() {
                try {
                    return document.activeElement;
                } catch ( err ) { }
            }

            function on( elem, types, selector, data, fn, one ) {
                var origFn, type;

                // Types can be a map of types/handlers
                if ( typeof types === "object" ) {

                    // ( types-Object, selector, data )
                    if ( typeof selector !== "string" ) {

                        // ( types-Object, data )
                        data = data || selector;
                        selector = undefined;
                    }
                    for ( type in types ) {
                        on( elem, type, selector, data, types[ type ], one );
                    }
                    return elem;
                }

                if ( data == null && fn == null ) {

                    // ( types, fn )
                    fn = selector;
                    data = selector = undefined;
                } else if ( fn == null ) {
                    if ( typeof selector === "string" ) {

                        // ( types, selector, fn )
                        fn = data;
                        data = undefined;
                    } else {

                        // ( types, data, fn )
                        fn = data;
                        data = selector;
                        selector = undefined;
                    }
                }
                if ( fn === false ) {
                    fn = returnFalse;
                } else if ( !fn ) {
                    return elem;
                }

                if ( one === 1 ) {
                    origFn = fn;
                    fn = function( event ) {

                        // Can use an empty set, since event contains the info
                        jQuery().off( event );
                        return origFn.apply( this, arguments );
                    };

                    // Use same guid so caller can remove using origFn
                    fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
                }
                return elem.each( function() {
                    jQuery.event.add( this, types, fn, data, selector );
                } );
            }

            /*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
            jQuery.event = {

                global: {},

                add: function( elem, types, handler, data, selector ) {

                    var handleObjIn, eventHandle, tmp,
                        events, t, handleObj,
                        special, handlers, type, namespaces, origType,
                        elemData = dataPriv.get( elem );

                    // Don't attach events to noData or text/comment nodes (but allow plain objects)
                    if ( !elemData ) {
                        return;
                    }

                    // Caller can pass in an object of custom data in lieu of the handler
                    if ( handler.handler ) {
                        handleObjIn = handler;
                        handler = handleObjIn.handler;
                        selector = handleObjIn.selector;
                    }

                    // Ensure that invalid selectors throw exceptions at attach time
                    // Evaluate against documentElement in case elem is a non-element node (e.g., document)
                    if ( selector ) {
                        jQuery.find.matchesSelector( documentElement, selector );
                    }

                    // Make sure that the handler has a unique ID, used to find/remove it later
                    if ( !handler.guid ) {
                        handler.guid = jQuery.guid++;
                    }

                    // Init the element's event structure and main handler, if this is the first
                    if ( !( events = elemData.events ) ) {
                        events = elemData.events = {};
                    }
                    if ( !( eventHandle = elemData.handle ) ) {
                        eventHandle = elemData.handle = function( e ) {

                            // Discard the second event of a jQuery.event.trigger() and
                            // when an event is called after a page has unloaded
                            return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
                                jQuery.event.dispatch.apply( elem, arguments ) : undefined;
                        };
                    }

                    // Handle multiple events separated by a space
                    types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
                    t = types.length;
                    while ( t-- ) {
                        tmp = rtypenamespace.exec( types[ t ] ) || [];
                        type = origType = tmp[ 1 ];
                        namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

                        // There *must* be a type, no attaching namespace-only handlers
                        if ( !type ) {
                            continue;
                        }

                        // If event changes its type, use the special event handlers for the changed type
                        special = jQuery.event.special[ type ] || {};

                        // If selector defined, determine special event api type, otherwise given type
                        type = ( selector ? special.delegateType : special.bindType ) || type;

                        // Update special based on newly reset type
                        special = jQuery.event.special[ type ] || {};

                        // handleObj is passed to all event handlers
                        handleObj = jQuery.extend( {
                            type: type,
                            origType: origType,
                            data: data,
                            handler: handler,
                            guid: handler.guid,
                            selector: selector,
                            needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
                            namespace: namespaces.join( "." )
                        }, handleObjIn );

                        // Init the event handler queue if we're the first
                        if ( !( handlers = events[ type ] ) ) {
                            handlers = events[ type ] = [];
                            handlers.delegateCount = 0;

                            // Only use addEventListener if the special events handler returns false
                            if ( !special.setup ||
                                special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

                                if ( elem.addEventListener ) {
                                    elem.addEventListener( type, eventHandle );
                                }
                            }
                        }

                        if ( special.add ) {
                            special.add.call( elem, handleObj );

                            if ( !handleObj.handler.guid ) {
                                handleObj.handler.guid = handler.guid;
                            }
                        }

                        // Add to the element's handler list, delegates in front
                        if ( selector ) {
                            handlers.splice( handlers.delegateCount++, 0, handleObj );
                        } else {
                            handlers.push( handleObj );
                        }

                        // Keep track of which events have ever been used, for event optimization
                        jQuery.event.global[ type ] = true;
                    }

                },

                // Detach an event or set of events from an element
                remove: function( elem, types, handler, selector, mappedTypes ) {

                    var j, origCount, tmp,
                        events, t, handleObj,
                        special, handlers, type, namespaces, origType,
                        elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

                    if ( !elemData || !( events = elemData.events ) ) {
                        return;
                    }

                    // Once for each type.namespace in types; type may be omitted
                    types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
                    t = types.length;
                    while ( t-- ) {
                        tmp = rtypenamespace.exec( types[ t ] ) || [];
                        type = origType = tmp[ 1 ];
                        namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

                        // Unbind all events (on this namespace, if provided) for the element
                        if ( !type ) {
                            for ( type in events ) {
                                jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
                            }
                            continue;
                        }

                        special = jQuery.event.special[ type ] || {};
                        type = ( selector ? special.delegateType : special.bindType ) || type;
                        handlers = events[ type ] || [];
                        tmp = tmp[ 2 ] &&
                            new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

                        // Remove matching events
                        origCount = j = handlers.length;
                        while ( j-- ) {
                            handleObj = handlers[ j ];

                            if ( ( mappedTypes || origType === handleObj.origType ) &&
                                ( !handler || handler.guid === handleObj.guid ) &&
                                ( !tmp || tmp.test( handleObj.namespace ) ) &&
                                ( !selector || selector === handleObj.selector ||
                                    selector === "**" && handleObj.selector ) ) {
                                handlers.splice( j, 1 );

                                if ( handleObj.selector ) {
                                    handlers.delegateCount--;
                                }
                                if ( special.remove ) {
                                    special.remove.call( elem, handleObj );
                                }
                            }
                        }

                        // Remove generic event handler if we removed something and no more handlers exist
                        // (avoids potential for endless recursion during removal of special event handlers)
                        if ( origCount && !handlers.length ) {
                            if ( !special.teardown ||
                                special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

                                jQuery.removeEvent( elem, type, elemData.handle );
                            }

                            delete events[ type ];
                        }
                    }

                    // Remove data and the expando if it's no longer used
                    if ( jQuery.isEmptyObject( events ) ) {
                        dataPriv.remove( elem, "handle events" );
                    }
                },

                dispatch: function( nativeEvent ) {

                    // Make a writable jQuery.Event from the native event object
                    var event = jQuery.event.fix( nativeEvent );

                    var i, j, ret, matched, handleObj, handlerQueue,
                        args = new Array( arguments.length ),
                        handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
                        special = jQuery.event.special[ event.type ] || {};

                    // Use the fix-ed jQuery.Event rather than the (read-only) native event
                    args[ 0 ] = event;

                    for ( i = 1; i < arguments.length; i++ ) {
                        args[ i ] = arguments[ i ];
                    }

                    event.delegateTarget = this;

                    // Call the preDispatch hook for the mapped type, and let it bail if desired
                    if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
                        return;
                    }

                    // Determine handlers
                    handlerQueue = jQuery.event.handlers.call( this, event, handlers );

                    // Run delegates first; they may want to stop propagation beneath us
                    i = 0;
                    while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
                        event.currentTarget = matched.elem;

                        j = 0;
                        while ( ( handleObj = matched.handlers[ j++ ] ) &&
                        !event.isImmediatePropagationStopped() ) {

                            // Triggered event must either 1) have no namespace, or 2) have namespace(s)
                            // a subset or equal to those in the bound event (both can have no namespace).
                            if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

                                event.handleObj = handleObj;
                                event.data = handleObj.data;

                                ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
                                    handleObj.handler ).apply( matched.elem, args );

                                if ( ret !== undefined ) {
                                    if ( ( event.result = ret ) === false ) {
                                        event.preventDefault();
                                        event.stopPropagation();
                                    }
                                }
                            }
                        }
                    }

                    // Call the postDispatch hook for the mapped type
                    if ( special.postDispatch ) {
                        special.postDispatch.call( this, event );
                    }

                    return event.result;
                },

                handlers: function( event, handlers ) {
                    var i, handleObj, sel, matchedHandlers, matchedSelectors,
                        handlerQueue = [],
                        delegateCount = handlers.delegateCount,
                        cur = event.target;

                    // Find delegate handlers
                    if ( delegateCount &&

                        // Support: IE <=9
                        // Black-hole SVG <use> instance trees (trac-13180)
                        cur.nodeType &&

                        // Support: Firefox <=42
                        // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
                        // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
                        // Support: IE 11 only
                        // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
                        !( event.type === "click" && event.button >= 1 ) ) {

                        for ( ; cur !== this; cur = cur.parentNode || this ) {

                            // Don't check non-elements (#13208)
                            // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
                            if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
                                matchedHandlers = [];
                                matchedSelectors = {};
                                for ( i = 0; i < delegateCount; i++ ) {
                                    handleObj = handlers[ i ];

                                    // Don't conflict with Object.prototype properties (#13203)
                                    sel = handleObj.selector + " ";

                                    if ( matchedSelectors[ sel ] === undefined ) {
                                        matchedSelectors[ sel ] = handleObj.needsContext ?
                                            jQuery( sel, this ).index( cur ) > -1 :
                                            jQuery.find( sel, this, null, [ cur ] ).length;
                                    }
                                    if ( matchedSelectors[ sel ] ) {
                                        matchedHandlers.push( handleObj );
                                    }
                                }
                                if ( matchedHandlers.length ) {
                                    handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
                                }
                            }
                        }
                    }

                    // Add the remaining (directly-bound) handlers
                    cur = this;
                    if ( delegateCount < handlers.length ) {
                        handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
                    }

                    return handlerQueue;
                },

                addProp: function( name, hook ) {
                    Object.defineProperty( jQuery.Event.prototype, name, {
                        enumerable: true,
                        configurable: true,

                        get: isFunction( hook ) ?
                            function() {
                                if ( this.originalEvent ) {
                                    return hook( this.originalEvent );
                                }
                            } :
                            function() {
                                if ( this.originalEvent ) {
                                    return this.originalEvent[ name ];
                                }
                            },

                        set: function( value ) {
                            Object.defineProperty( this, name, {
                                enumerable: true,
                                configurable: true,
                                writable: true,
                                value: value
                            } );
                        }
                    } );
                },

                fix: function( originalEvent ) {
                    return originalEvent[ jQuery.expando ] ?
                        originalEvent :
                        new jQuery.Event( originalEvent );
                },

                special: {
                    load: {

                        // Prevent triggered image.load events from bubbling to window.load
                        noBubble: true
                    },
                    focus: {

                        // Fire native event if possible so blur/focus sequence is correct
                        trigger: function() {
                            if ( this !== safeActiveElement() && this.focus ) {
                                this.focus();
                                return false;
                            }
                        },
                        delegateType: "focusin"
                    },
                    blur: {
                        trigger: function() {
                            if ( this === safeActiveElement() && this.blur ) {
                                this.blur();
                                return false;
                            }
                        },
                        delegateType: "focusout"
                    },
                    click: {

                        // For checkbox, fire native event so checked state will be right
                        trigger: function() {
                            if ( this.type === "checkbox" && this.click && nodeName( this, "input" ) ) {
                                this.click();
                                return false;
                            }
                        },

                        // For cross-browser consistency, don't fire native .click() on links
                        _default: function( event ) {
                            return nodeName( event.target, "a" );
                        }
                    },

                    beforeunload: {
                        postDispatch: function( event ) {

                            // Support: Firefox 20+
                            // Firefox doesn't alert if the returnValue field is not set.
                            if ( event.result !== undefined && event.originalEvent ) {
                                event.originalEvent.returnValue = event.result;
                            }
                        }
                    }
                }
            };

            jQuery.removeEvent = function( elem, type, handle ) {

                // This "if" is needed for plain objects
                if ( elem.removeEventListener ) {
                    elem.removeEventListener( type, handle );
                }
            };

            jQuery.Event = function( src, props ) {

                // Allow instantiation without the 'new' keyword
                if ( !( this instanceof jQuery.Event ) ) {
                    return new jQuery.Event( src, props );
                }

                // Event object
                if ( src && src.type ) {
                    this.originalEvent = src;
                    this.type = src.type;

                    // Events bubbling up the document may have been marked as prevented
                    // by a handler lower down the tree; reflect the correct value.
                    this.isDefaultPrevented = src.defaultPrevented ||
                    src.defaultPrevented === undefined &&

                    // Support: Android <=2.3 only
                    src.returnValue === false ?
                        returnTrue :
                        returnFalse;

                    // Create target properties
                    // Support: Safari <=6 - 7 only
                    // Target should not be a text node (#504, #13143)
                    this.target = ( src.target && src.target.nodeType === 3 ) ?
                        src.target.parentNode :
                        src.target;

                    this.currentTarget = src.currentTarget;
                    this.relatedTarget = src.relatedTarget;

                    // Event type
                } else {
                    this.type = src;
                }

                // Put explicitly provided properties onto the event object
                if ( props ) {
                    jQuery.extend( this, props );
                }

                // Create a timestamp if incoming event doesn't have one
                this.timeStamp = src && src.timeStamp || Date.now();

                // Mark it as fixed
                this[ jQuery.expando ] = true;
            };

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
            jQuery.Event.prototype = {
                constructor: jQuery.Event,
                isDefaultPrevented: returnFalse,
                isPropagationStopped: returnFalse,
                isImmediatePropagationStopped: returnFalse,
                isSimulated: false,

                preventDefault: function() {
                    var e = this.originalEvent;

                    this.isDefaultPrevented = returnTrue;

                    if ( e && !this.isSimulated ) {
                        e.preventDefault();
                    }
                },
                stopPropagation: function() {
                    var e = this.originalEvent;

                    this.isPropagationStopped = returnTrue;

                    if ( e && !this.isSimulated ) {
                        e.stopPropagation();
                    }
                },
                stopImmediatePropagation: function() {
                    var e = this.originalEvent;

                    this.isImmediatePropagationStopped = returnTrue;

                    if ( e && !this.isSimulated ) {
                        e.stopImmediatePropagation();
                    }

                    this.stopPropagation();
                }
            };

// Includes all common event props including KeyEvent and MouseEvent specific props
            jQuery.each( {
                altKey: true,
                bubbles: true,
                cancelable: true,
                changedTouches: true,
                ctrlKey: true,
                detail: true,
                eventPhase: true,
                metaKey: true,
                pageX: true,
                pageY: true,
                shiftKey: true,
                view: true,
                "char": true,
                charCode: true,
                key: true,
                keyCode: true,
                button: true,
                buttons: true,
                clientX: true,
                clientY: true,
                offsetX: true,
                offsetY: true,
                pointerId: true,
                pointerType: true,
                screenX: true,
                screenY: true,
                targetTouches: true,
                toElement: true,
                touches: true,

                which: function( event ) {
                    var button = event.button;

                    // Add which for key events
                    if ( event.which == null && rkeyEvent.test( event.type ) ) {
                        return event.charCode != null ? event.charCode : event.keyCode;
                    }

                    // Add which for click: 1 === left; 2 === middle; 3 === right
                    if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
                        if ( button & 1 ) {
                            return 1;
                        }

                        if ( button & 2 ) {
                            return 3;
                        }

                        if ( button & 4 ) {
                            return 2;
                        }

                        return 0;
                    }

                    return event.which;
                }
            }, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
            jQuery.each( {
                mouseenter: "mouseover",
                mouseleave: "mouseout",
                pointerenter: "pointerover",
                pointerleave: "pointerout"
            }, function( orig, fix ) {
                jQuery.event.special[ orig ] = {
                    delegateType: fix,
                    bindType: fix,

                    handle: function( event ) {
                        var ret,
                            target = this,
                            related = event.relatedTarget,
                            handleObj = event.handleObj;

                        // For mouseenter/leave call the handler if related is outside the target.
                        // NB: No relatedTarget if the mouse left/entered the browser window
                        if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
                            event.type = handleObj.origType;
                            ret = handleObj.handler.apply( this, arguments );
                            event.type = fix;
                        }
                        return ret;
                    }
                };
            } );

            jQuery.fn.extend( {

                on: function( types, selector, data, fn ) {
                    return on( this, types, selector, data, fn );
                },
                one: function( types, selector, data, fn ) {
                    return on( this, types, selector, data, fn, 1 );
                },
                off: function( types, selector, fn ) {
                    var handleObj, type;
                    if ( types && types.preventDefault && types.handleObj ) {

                        // ( event )  dispatched jQuery.Event
                        handleObj = types.handleObj;
                        jQuery( types.delegateTarget ).off(
                            handleObj.namespace ?
                                handleObj.origType + "." + handleObj.namespace :
                                handleObj.origType,
                            handleObj.selector,
                            handleObj.handler
                        );
                        return this;
                    }
                    if ( typeof types === "object" ) {

                        // ( types-object [, selector] )
                        for ( type in types ) {
                            this.off( type, selector, types[ type ] );
                        }
                        return this;
                    }
                    if ( selector === false || typeof selector === "function" ) {

                        // ( types [, fn] )
                        fn = selector;
                        selector = undefined;
                    }
                    if ( fn === false ) {
                        fn = returnFalse;
                    }
                    return this.each( function() {
                        jQuery.event.remove( this, types, fn, selector );
                    } );
                }
            } );


            var

                /* eslint-disable max-len */

                // See https://github.com/eslint/eslint/issues/3229
                rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

                /* eslint-enable */

                // Support: IE <=10 - 11, Edge 12 - 13 only
                // In IE/Edge using regex groups here causes severe slowdowns.
                // See https://connect.microsoft.com/IE/feedback/details/1736512/
                rnoInnerhtml = /<script|<style|<link/i,

                // checked="checked" or checked
                rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
                rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
            function manipulationTarget( elem, content ) {
                if ( nodeName( elem, "table" ) &&
                    nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

                    return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
                }

                return elem;
            }

// Replace/restore the type attribute of script elements for safe DOM manipulation
            function disableScript( elem ) {
                elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
                return elem;
            }
            function restoreScript( elem ) {
                if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
                    elem.type = elem.type.slice( 5 );
                } else {
                    elem.removeAttribute( "type" );
                }

                return elem;
            }

            function cloneCopyEvent( src, dest ) {
                var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

                if ( dest.nodeType !== 1 ) {
                    return;
                }

                // 1. Copy private data: events, handlers, etc.
                if ( dataPriv.hasData( src ) ) {
                    pdataOld = dataPriv.access( src );
                    pdataCur = dataPriv.set( dest, pdataOld );
                    events = pdataOld.events;

                    if ( events ) {
                        delete pdataCur.handle;
                        pdataCur.events = {};

                        for ( type in events ) {
                            for ( i = 0, l = events[ type ].length; i < l; i++ ) {
                                jQuery.event.add( dest, type, events[ type ][ i ] );
                            }
                        }
                    }
                }

                // 2. Copy user data
                if ( dataUser.hasData( src ) ) {
                    udataOld = dataUser.access( src );
                    udataCur = jQuery.extend( {}, udataOld );

                    dataUser.set( dest, udataCur );
                }
            }

// Fix IE bugs, see support tests
            function fixInput( src, dest ) {
                var nodeName = dest.nodeName.toLowerCase();

                // Fails to persist the checked state of a cloned checkbox or radio button.
                if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
                    dest.checked = src.checked;

                    // Fails to return the selected option to the default selected state when cloning options
                } else if ( nodeName === "input" || nodeName === "textarea" ) {
                    dest.defaultValue = src.defaultValue;
                }
            }

            function domManip( collection, args, callback, ignored ) {

                // Flatten any nested arrays
                args = concat.apply( [], args );

                var fragment, first, scripts, hasScripts, node, doc,
                    i = 0,
                    l = collection.length,
                    iNoClone = l - 1,
                    value = args[ 0 ],
                    valueIsFunction = isFunction( value );

                // We can't cloneNode fragments that contain checked, in WebKit
                if ( valueIsFunction ||
                    ( l > 1 && typeof value === "string" &&
                        !support.checkClone && rchecked.test( value ) ) ) {
                    return collection.each( function( index ) {
                        var self = collection.eq( index );
                        if ( valueIsFunction ) {
                            args[ 0 ] = value.call( this, index, self.html() );
                        }
                        domManip( self, args, callback, ignored );
                    } );
                }

                if ( l ) {
                    fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
                    first = fragment.firstChild;

                    if ( fragment.childNodes.length === 1 ) {
                        fragment = first;
                    }

                    // Require either new content or an interest in ignored elements to invoke the callback
                    if ( first || ignored ) {
                        scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
                        hasScripts = scripts.length;

                        // Use the original fragment for the last item
                        // instead of the first because it can end up
                        // being emptied incorrectly in certain situations (#8070).
                        for ( ; i < l; i++ ) {
                            node = fragment;

                            if ( i !== iNoClone ) {
                                node = jQuery.clone( node, true, true );

                                // Keep references to cloned scripts for later restoration
                                if ( hasScripts ) {

                                    // Support: Android <=4.0 only, PhantomJS 1 only
                                    // push.apply(_, arraylike) throws on ancient WebKit
                                    jQuery.merge( scripts, getAll( node, "script" ) );
                                }
                            }

                            callback.call( collection[ i ], node, i );
                        }

                        if ( hasScripts ) {
                            doc = scripts[ scripts.length - 1 ].ownerDocument;

                            // Reenable scripts
                            jQuery.map( scripts, restoreScript );

                            // Evaluate executable scripts on first document insertion
                            for ( i = 0; i < hasScripts; i++ ) {
                                node = scripts[ i ];
                                if ( rscriptType.test( node.type || "" ) &&
                                    !dataPriv.access( node, "globalEval" ) &&
                                    jQuery.contains( doc, node ) ) {

                                    if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

                                        // Optional AJAX dependency, but won't run scripts if not present
                                        if ( jQuery._evalUrl ) {
                                            jQuery._evalUrl( node.src );
                                        }
                                    } else {
                                        DOMEval( node.textContent.replace( rcleanScript, "" ), doc, node );
                                    }
                                }
                            }
                        }
                    }
                }

                return collection;
            }

            function remove( elem, selector, keepData ) {
                var node,
                    nodes = selector ? jQuery.filter( selector, elem ) : elem,
                    i = 0;

                for ( ; ( node = nodes[ i ] ) != null; i++ ) {
                    if ( !keepData && node.nodeType === 1 ) {
                        jQuery.cleanData( getAll( node ) );
                    }

                    if ( node.parentNode ) {
                        if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
                            setGlobalEval( getAll( node, "script" ) );
                        }
                        node.parentNode.removeChild( node );
                    }
                }

                return elem;
            }

            jQuery.extend( {
                htmlPrefilter: function( html ) {
                    return html.replace( rxhtmlTag, "<$1></$2>" );
                },

                clone: function( elem, dataAndEvents, deepDataAndEvents ) {
                    var i, l, srcElements, destElements,
                        clone = elem.cloneNode( true ),
                        inPage = jQuery.contains( elem.ownerDocument, elem );

                    // Fix IE cloning issues
                    if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
                        !jQuery.isXMLDoc( elem ) ) {

                        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
                        destElements = getAll( clone );
                        srcElements = getAll( elem );

                        for ( i = 0, l = srcElements.length; i < l; i++ ) {
                            fixInput( srcElements[ i ], destElements[ i ] );
                        }
                    }

                    // Copy the events from the original to the clone
                    if ( dataAndEvents ) {
                        if ( deepDataAndEvents ) {
                            srcElements = srcElements || getAll( elem );
                            destElements = destElements || getAll( clone );

                            for ( i = 0, l = srcElements.length; i < l; i++ ) {
                                cloneCopyEvent( srcElements[ i ], destElements[ i ] );
                            }
                        } else {
                            cloneCopyEvent( elem, clone );
                        }
                    }

                    // Preserve script evaluation history
                    destElements = getAll( clone, "script" );
                    if ( destElements.length > 0 ) {
                        setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
                    }

                    // Return the cloned set
                    return clone;
                },

                cleanData: function( elems ) {
                    var data, elem, type,
                        special = jQuery.event.special,
                        i = 0;

                    for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
                        if ( acceptData( elem ) ) {
                            if ( ( data = elem[ dataPriv.expando ] ) ) {
                                if ( data.events ) {
                                    for ( type in data.events ) {
                                        if ( special[ type ] ) {
                                            jQuery.event.remove( elem, type );

                                            // This is a shortcut to avoid jQuery.event.remove's overhead
                                        } else {
                                            jQuery.removeEvent( elem, type, data.handle );
                                        }
                                    }
                                }

                                // Support: Chrome <=35 - 45+
                                // Assign undefined instead of using delete, see Data#remove
                                elem[ dataPriv.expando ] = undefined;
                            }
                            if ( elem[ dataUser.expando ] ) {

                                // Support: Chrome <=35 - 45+
                                // Assign undefined instead of using delete, see Data#remove
                                elem[ dataUser.expando ] = undefined;
                            }
                        }
                    }
                }
            } );

            jQuery.fn.extend( {
                detach: function( selector ) {
                    return remove( this, selector, true );
                },

                remove: function( selector ) {
                    return remove( this, selector );
                },

                text: function( value ) {
                    return access( this, function( value ) {
                        return value === undefined ?
                            jQuery.text( this ) :
                            this.empty().each( function() {
                                if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
                                    this.textContent = value;
                                }
                            } );
                    }, null, value, arguments.length );
                },

                append: function() {
                    return domManip( this, arguments, function( elem ) {
                        if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
                            var target = manipulationTarget( this, elem );
                            target.appendChild( elem );
                        }
                    } );
                },

                prepend: function() {
                    return domManip( this, arguments, function( elem ) {
                        if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
                            var target = manipulationTarget( this, elem );
                            target.insertBefore( elem, target.firstChild );
                        }
                    } );
                },

                before: function() {
                    return domManip( this, arguments, function( elem ) {
                        if ( this.parentNode ) {
                            this.parentNode.insertBefore( elem, this );
                        }
                    } );
                },

                after: function() {
                    return domManip( this, arguments, function( elem ) {
                        if ( this.parentNode ) {
                            this.parentNode.insertBefore( elem, this.nextSibling );
                        }
                    } );
                },

                empty: function() {
                    var elem,
                        i = 0;

                    for ( ; ( elem = this[ i ] ) != null; i++ ) {
                        if ( elem.nodeType === 1 ) {

                            // Prevent memory leaks
                            jQuery.cleanData( getAll( elem, false ) );

                            // Remove any remaining nodes
                            elem.textContent = "";
                        }
                    }

                    return this;
                },

                clone: function( dataAndEvents, deepDataAndEvents ) {
                    dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
                    deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

                    return this.map( function() {
                        return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
                    } );
                },

                html: function( value ) {
                    return access( this, function( value ) {
                        var elem = this[ 0 ] || {},
                            i = 0,
                            l = this.length;

                        if ( value === undefined && elem.nodeType === 1 ) {
                            return elem.innerHTML;
                        }

                        // See if we can take a shortcut and just use innerHTML
                        if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
                            !wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

                            value = jQuery.htmlPrefilter( value );

                            try {
                                for ( ; i < l; i++ ) {
                                    elem = this[ i ] || {};

                                    // Remove element nodes and prevent memory leaks
                                    if ( elem.nodeType === 1 ) {
                                        jQuery.cleanData( getAll( elem, false ) );
                                        elem.innerHTML = value;
                                    }
                                }

                                elem = 0;

                                // If using innerHTML throws an exception, use the fallback method
                            } catch ( e ) {}
                        }

                        if ( elem ) {
                            this.empty().append( value );
                        }
                    }, null, value, arguments.length );
                },

                replaceWith: function() {
                    var ignored = [];

                    // Make the changes, replacing each non-ignored context element with the new content
                    return domManip( this, arguments, function( elem ) {
                        var parent = this.parentNode;

                        if ( jQuery.inArray( this, ignored ) < 0 ) {
                            jQuery.cleanData( getAll( this ) );
                            if ( parent ) {
                                parent.replaceChild( elem, this );
                            }
                        }

                        // Force callback invocation
                    }, ignored );
                }
            } );

            jQuery.each( {
                appendTo: "append",
                prependTo: "prepend",
                insertBefore: "before",
                insertAfter: "after",
                replaceAll: "replaceWith"
            }, function( name, original ) {
                jQuery.fn[ name ] = function( selector ) {
                    var elems,
                        ret = [],
                        insert = jQuery( selector ),
                        last = insert.length - 1,
                        i = 0;

                    for ( ; i <= last; i++ ) {
                        elems = i === last ? this : this.clone( true );
                        jQuery( insert[ i ] )[ original ]( elems );

                        // Support: Android <=4.0 only, PhantomJS 1 only
                        // .get() because push.apply(_, arraylike) throws on ancient WebKit
                        push.apply( ret, elems.get() );
                    }

                    return this.pushStack( ret );
                };
            } );
            var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

            var getStyles = function( elem ) {

                // Support: IE <=11 only, Firefox <=30 (#15098, #14150)
                // IE throws on elements created in popups
                // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
                var view = elem.ownerDocument.defaultView;

                if ( !view || !view.opener ) {
                    view = window;
                }

                return view.getComputedStyle( elem );
            };

            var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



            ( function() {

                // Executing both pixelPosition & boxSizingReliable tests require only one layout
                // so they're executed at the same time to save the second computation.
                function computeStyleTests() {

                    // This is a singleton, we need to execute it only once
                    if ( !div ) {
                        return;
                    }

                    container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
                        "margin-top:1px;padding:0;border:0";
                    div.style.cssText =
                        "position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
                        "margin:auto;border:1px;padding:1px;" +
                        "width:60%;top:1%";
                    documentElement.appendChild( container ).appendChild( div );

                    var divStyle = window.getComputedStyle( div );
                    pixelPositionVal = divStyle.top !== "1%";

                    // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
                    reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

                    // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
                    // Some styles come back with percentage values, even though they shouldn't
                    div.style.right = "60%";
                    pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

                    // Support: IE 9 - 11 only
                    // Detect misreporting of content dimensions for box-sizing:border-box elements
                    boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

                    // Support: IE 9 only
                    // Detect overflow:scroll screwiness (gh-3699)
                    div.style.position = "absolute";
                    scrollboxSizeVal = div.offsetWidth === 36 || "absolute";

                    documentElement.removeChild( container );

                    // Nullify the div so it wouldn't be stored in the memory and
                    // it will also be a sign that checks already performed
                    div = null;
                }

                function roundPixelMeasures( measure ) {
                    return Math.round( parseFloat( measure ) );
                }

                var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
                    reliableMarginLeftVal,
                    container = document.createElement( "div" ),
                    div = document.createElement( "div" );

                // Finish early in limited (non-browser) environments
                if ( !div.style ) {
                    return;
                }

                // Support: IE <=9 - 11 only
                // Style of cloned element affects source element cloned (#8908)
                div.style.backgroundClip = "content-box";
                div.cloneNode( true ).style.backgroundClip = "";
                support.clearCloneStyle = div.style.backgroundClip === "content-box";

                jQuery.extend( support, {
                    boxSizingReliable: function() {
                        computeStyleTests();
                        return boxSizingReliableVal;
                    },
                    pixelBoxStyles: function() {
                        computeStyleTests();
                        return pixelBoxStylesVal;
                    },
                    pixelPosition: function() {
                        computeStyleTests();
                        return pixelPositionVal;
                    },
                    reliableMarginLeft: function() {
                        computeStyleTests();
                        return reliableMarginLeftVal;
                    },
                    scrollboxSize: function() {
                        computeStyleTests();
                        return scrollboxSizeVal;
                    }
                } );
            } )();


            function curCSS( elem, name, computed ) {
                var width, minWidth, maxWidth, ret,

                    // Support: Firefox 51+
                    // Retrieving style before computed somehow
                    // fixes an issue with getting wrong values
                    // on detached elements
                    style = elem.style;

                computed = computed || getStyles( elem );

                // getPropertyValue is needed for:
                //   .css('filter') (IE 9 only, #12537)
                //   .css('--customProperty) (#3144)
                if ( computed ) {
                    ret = computed.getPropertyValue( name ) || computed[ name ];

                    if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
                        ret = jQuery.style( elem, name );
                    }

                    // A tribute to the "awesome hack by Dean Edwards"
                    // Android Browser returns percentage for some values,
                    // but width seems to be reliably pixels.
                    // This is against the CSSOM draft spec:
                    // https://drafts.csswg.org/cssom/#resolved-values
                    if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

                        // Remember the original values
                        width = style.width;
                        minWidth = style.minWidth;
                        maxWidth = style.maxWidth;

                        // Put in the new values to get a computed value out
                        style.minWidth = style.maxWidth = style.width = ret;
                        ret = computed.width;

                        // Revert the changed values
                        style.width = width;
                        style.minWidth = minWidth;
                        style.maxWidth = maxWidth;
                    }
                }

                return ret !== undefined ?

                    // Support: IE <=9 - 11 only
                    // IE returns zIndex value as an integer.
                    ret + "" :
                    ret;
            }


            function addGetHookIf( conditionFn, hookFn ) {

                // Define the hook, we'll check on the first run if it's really needed.
                return {
                    get: function() {
                        if ( conditionFn() ) {

                            // Hook not needed (or it's not possible to use it due
                            // to missing dependency), remove it.
                            delete this.get;
                            return;
                        }

                        // Hook needed; redefine it so that the support test is not executed again.
                        return ( this.get = hookFn ).apply( this, arguments );
                    }
                };
            }


            var

                // Swappable if display is none or starts with table
                // except "table", "table-cell", or "table-caption"
                // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
                rdisplayswap = /^(none|table(?!-c[ea]).+)/,
                rcustomProp = /^--/,
                cssShow = { position: "absolute", visibility: "hidden", display: "block" },
                cssNormalTransform = {
                    letterSpacing: "0",
                    fontWeight: "400"
                },

                cssPrefixes = [ "Webkit", "Moz", "ms" ],
                emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
            function vendorPropName( name ) {

                // Shortcut for names that are not vendor prefixed
                if ( name in emptyStyle ) {
                    return name;
                }

                // Check for vendor prefixed names
                var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
                    i = cssPrefixes.length;

                while ( i-- ) {
                    name = cssPrefixes[ i ] + capName;
                    if ( name in emptyStyle ) {
                        return name;
                    }
                }
            }

// Return a property mapped along what jQuery.cssProps suggests or to
// a vendor prefixed property.
            function finalPropName( name ) {
                var ret = jQuery.cssProps[ name ];
                if ( !ret ) {
                    ret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;
                }
                return ret;
            }

            function setPositiveNumber( elem, value, subtract ) {

                // Any relative (+/-) values have already been
                // normalized at this point
                var matches = rcssNum.exec( value );
                return matches ?

                    // Guard against undefined "subtract", e.g., when used as in cssHooks
                    Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
                    value;
            }

            function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
                var i = dimension === "width" ? 1 : 0,
                    extra = 0,
                    delta = 0;

                // Adjustment may not be necessary
                if ( box === ( isBorderBox ? "border" : "content" ) ) {
                    return 0;
                }

                for ( ; i < 4; i += 2 ) {

                    // Both box models exclude margin
                    if ( box === "margin" ) {
                        delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
                    }

                    // If we get here with a content-box, we're seeking "padding" or "border" or "margin"
                    if ( !isBorderBox ) {

                        // Add padding
                        delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

                        // For "border" or "margin", add border
                        if ( box !== "padding" ) {
                            delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

                            // But still keep track of it otherwise
                        } else {
                            extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
                        }

                        // If we get here with a border-box (content + padding + border), we're seeking "content" or
                        // "padding" or "margin"
                    } else {

                        // For "content", subtract padding
                        if ( box === "content" ) {
                            delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
                        }

                        // For "content" or "padding", subtract border
                        if ( box !== "margin" ) {
                            delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
                        }
                    }
                }

                // Account for positive content-box scroll gutter when requested by providing computedVal
                if ( !isBorderBox && computedVal >= 0 ) {

                    // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
                    // Assuming integer scroll gutter, subtract the rest and round down
                    delta += Math.max( 0, Math.ceil(
                        elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
                        computedVal -
                        delta -
                        extra -
                        0.5
                    ) );
                }

                return delta;
            }

            function getWidthOrHeight( elem, dimension, extra ) {

                // Start with computed style
                var styles = getStyles( elem ),
                    val = curCSS( elem, dimension, styles ),
                    isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
                    valueIsBorderBox = isBorderBox;

                // Support: Firefox <=54
                // Return a confounding non-pixel value or feign ignorance, as appropriate.
                if ( rnumnonpx.test( val ) ) {
                    if ( !extra ) {
                        return val;
                    }
                    val = "auto";
                }

                // Check for style in case a browser which returns unreliable values
                // for getComputedStyle silently falls back to the reliable elem.style
                valueIsBorderBox = valueIsBorderBox &&
                    ( support.boxSizingReliable() || val === elem.style[ dimension ] );

                // Fall back to offsetWidth/offsetHeight when value is "auto"
                // This happens for inline elements with no explicit setting (gh-3571)
                // Support: Android <=4.1 - 4.3 only
                // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
                if ( val === "auto" ||
                    !parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) {

                    val = elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];

                    // offsetWidth/offsetHeight provide border-box values
                    valueIsBorderBox = true;
                }

                // Normalize "" and auto
                val = parseFloat( val ) || 0;

                // Adjust for the element's box model
                return ( val +
                    boxModelAdjustment(
                        elem,
                        dimension,
                        extra || ( isBorderBox ? "border" : "content" ),
                        valueIsBorderBox,
                        styles,

                        // Provide the current computed size to request scroll gutter calculation (gh-3589)
                        val
                    )
                ) + "px";
            }

            jQuery.extend( {

                // Add in style property hooks for overriding the default
                // behavior of getting and setting a style property
                cssHooks: {
                    opacity: {
                        get: function( elem, computed ) {
                            if ( computed ) {

                                // We should always get a number back from opacity
                                var ret = curCSS( elem, "opacity" );
                                return ret === "" ? "1" : ret;
                            }
                        }
                    }
                },

                // Don't automatically add "px" to these possibly-unitless properties
                cssNumber: {
                    "animationIterationCount": true,
                    "columnCount": true,
                    "fillOpacity": true,
                    "flexGrow": true,
                    "flexShrink": true,
                    "fontWeight": true,
                    "lineHeight": true,
                    "opacity": true,
                    "order": true,
                    "orphans": true,
                    "widows": true,
                    "zIndex": true,
                    "zoom": true
                },

                // Add in properties whose names you wish to fix before
                // setting or getting the value
                cssProps: {},

                // Get and set the style property on a DOM Node
                style: function( elem, name, value, extra ) {

                    // Don't set styles on text and comment nodes
                    if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
                        return;
                    }

                    // Make sure that we're working with the right name
                    var ret, type, hooks,
                        origName = camelCase( name ),
                        isCustomProp = rcustomProp.test( name ),
                        style = elem.style;

                    // Make sure that we're working with the right name. We don't
                    // want to query the value if it is a CSS custom property
                    // since they are user-defined.
                    if ( !isCustomProp ) {
                        name = finalPropName( origName );
                    }

                    // Gets hook for the prefixed version, then unprefixed version
                    hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

                    // Check if we're setting a value
                    if ( value !== undefined ) {
                        type = typeof value;

                        // Convert "+=" or "-=" to relative numbers (#7345)
                        if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
                            value = adjustCSS( elem, name, ret );

                            // Fixes bug #9237
                            type = "number";
                        }

                        // Make sure that null and NaN values aren't set (#7116)
                        if ( value == null || value !== value ) {
                            return;
                        }

                        // If a number was passed in, add the unit (except for certain CSS properties)
                        if ( type === "number" ) {
                            value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
                        }

                        // background-* props affect original clone's values
                        if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
                            style[ name ] = "inherit";
                        }

                        // If a hook was provided, use that value, otherwise just set the specified value
                        if ( !hooks || !( "set" in hooks ) ||
                            ( value = hooks.set( elem, value, extra ) ) !== undefined ) {

                            if ( isCustomProp ) {
                                style.setProperty( name, value );
                            } else {
                                style[ name ] = value;
                            }
                        }

                    } else {

                        // If a hook was provided get the non-computed value from there
                        if ( hooks && "get" in hooks &&
                            ( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

                            return ret;
                        }

                        // Otherwise just get the value from the style object
                        return style[ name ];
                    }
                },

                css: function( elem, name, extra, styles ) {
                    var val, num, hooks,
                        origName = camelCase( name ),
                        isCustomProp = rcustomProp.test( name );

                    // Make sure that we're working with the right name. We don't
                    // want to modify the value if it is a CSS custom property
                    // since they are user-defined.
                    if ( !isCustomProp ) {
                        name = finalPropName( origName );
                    }

                    // Try prefixed name followed by the unprefixed name
                    hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

                    // If a hook was provided get the computed value from there
                    if ( hooks && "get" in hooks ) {
                        val = hooks.get( elem, true, extra );
                    }

                    // Otherwise, if a way to get the computed value exists, use that
                    if ( val === undefined ) {
                        val = curCSS( elem, name, styles );
                    }

                    // Convert "normal" to computed value
                    if ( val === "normal" && name in cssNormalTransform ) {
                        val = cssNormalTransform[ name ];
                    }

                    // Make numeric if forced or a qualifier was provided and val looks numeric
                    if ( extra === "" || extra ) {
                        num = parseFloat( val );
                        return extra === true || isFinite( num ) ? num || 0 : val;
                    }

                    return val;
                }
            } );

            jQuery.each( [ "height", "width" ], function( i, dimension ) {
                jQuery.cssHooks[ dimension ] = {
                    get: function( elem, computed, extra ) {
                        if ( computed ) {

                            // Certain elements can have dimension info if we invisibly show them
                            // but it must have a current display style that would benefit
                            return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

                            // Support: Safari 8+
                            // Table columns in Safari have non-zero offsetWidth & zero
                            // getBoundingClientRect().width unless display is changed.
                            // Support: IE <=11 only
                            // Running getBoundingClientRect on a disconnected node
                            // in IE throws an error.
                            ( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
                                swap( elem, cssShow, function() {
                                    return getWidthOrHeight( elem, dimension, extra );
                                } ) :
                                getWidthOrHeight( elem, dimension, extra );
                        }
                    },

                    set: function( elem, value, extra ) {
                        var matches,
                            styles = getStyles( elem ),
                            isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
                            subtract = extra && boxModelAdjustment(
                                elem,
                                dimension,
                                extra,
                                isBorderBox,
                                styles
                            );

                        // Account for unreliable border-box dimensions by comparing offset* to computed and
                        // faking a content-box to get border and padding (gh-3699)
                        if ( isBorderBox && support.scrollboxSize() === styles.position ) {
                            subtract -= Math.ceil(
                                elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
                                parseFloat( styles[ dimension ] ) -
                                boxModelAdjustment( elem, dimension, "border", false, styles ) -
                                0.5
                            );
                        }

                        // Convert to pixels if value adjustment is needed
                        if ( subtract && ( matches = rcssNum.exec( value ) ) &&
                            ( matches[ 3 ] || "px" ) !== "px" ) {

                            elem.style[ dimension ] = value;
                            value = jQuery.css( elem, dimension );
                        }

                        return setPositiveNumber( elem, value, subtract );
                    }
                };
            } );

            jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
                function( elem, computed ) {
                    if ( computed ) {
                        return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
                            elem.getBoundingClientRect().left -
                            swap( elem, { marginLeft: 0 }, function() {
                                return elem.getBoundingClientRect().left;
                            } )
                        ) + "px";
                    }
                }
            );

// These hooks are used by animate to expand properties
            jQuery.each( {
                margin: "",
                padding: "",
                border: "Width"
            }, function( prefix, suffix ) {
                jQuery.cssHooks[ prefix + suffix ] = {
                    expand: function( value ) {
                        var i = 0,
                            expanded = {},

                            // Assumes a single number if not a string
                            parts = typeof value === "string" ? value.split( " " ) : [ value ];

                        for ( ; i < 4; i++ ) {
                            expanded[ prefix + cssExpand[ i ] + suffix ] =
                                parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
                        }

                        return expanded;
                    }
                };

                if ( prefix !== "margin" ) {
                    jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
                }
            } );

            jQuery.fn.extend( {
                css: function( name, value ) {
                    return access( this, function( elem, name, value ) {
                        var styles, len,
                            map = {},
                            i = 0;

                        if ( Array.isArray( name ) ) {
                            styles = getStyles( elem );
                            len = name.length;

                            for ( ; i < len; i++ ) {
                                map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
                            }

                            return map;
                        }

                        return value !== undefined ?
                            jQuery.style( elem, name, value ) :
                            jQuery.css( elem, name );
                    }, name, value, arguments.length > 1 );
                }
            } );


            function Tween( elem, options, prop, end, easing ) {
                return new Tween.prototype.init( elem, options, prop, end, easing );
            }
            jQuery.Tween = Tween;

            Tween.prototype = {
                constructor: Tween,
                init: function( elem, options, prop, end, easing, unit ) {
                    this.elem = elem;
                    this.prop = prop;
                    this.easing = easing || jQuery.easing._default;
                    this.options = options;
                    this.start = this.now = this.cur();
                    this.end = end;
                    this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
                },
                cur: function() {
                    var hooks = Tween.propHooks[ this.prop ];

                    return hooks && hooks.get ?
                        hooks.get( this ) :
                        Tween.propHooks._default.get( this );
                },
                run: function( percent ) {
                    var eased,
                        hooks = Tween.propHooks[ this.prop ];

                    if ( this.options.duration ) {
                        this.pos = eased = jQuery.easing[ this.easing ](
                            percent, this.options.duration * percent, 0, 1, this.options.duration
                        );
                    } else {
                        this.pos = eased = percent;
                    }
                    this.now = ( this.end - this.start ) * eased + this.start;

                    if ( this.options.step ) {
                        this.options.step.call( this.elem, this.now, this );
                    }

                    if ( hooks && hooks.set ) {
                        hooks.set( this );
                    } else {
                        Tween.propHooks._default.set( this );
                    }
                    return this;
                }
            };

            Tween.prototype.init.prototype = Tween.prototype;

            Tween.propHooks = {
                _default: {
                    get: function( tween ) {
                        var result;

                        // Use a property on the element directly when it is not a DOM element,
                        // or when there is no matching style property that exists.
                        if ( tween.elem.nodeType !== 1 ||
                            tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
                            return tween.elem[ tween.prop ];
                        }

                        // Passing an empty string as a 3rd parameter to .css will automatically
                        // attempt a parseFloat and fallback to a string if the parse fails.
                        // Simple values such as "10px" are parsed to Float;
                        // complex values such as "rotate(1rad)" are returned as-is.
                        result = jQuery.css( tween.elem, tween.prop, "" );

                        // Empty strings, null, undefined and "auto" are converted to 0.
                        return !result || result === "auto" ? 0 : result;
                    },
                    set: function( tween ) {

                        // Use step hook for back compat.
                        // Use cssHook if its there.
                        // Use .style if available and use plain properties where available.
                        if ( jQuery.fx.step[ tween.prop ] ) {
                            jQuery.fx.step[ tween.prop ]( tween );
                        } else if ( tween.elem.nodeType === 1 &&
                            ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
                                jQuery.cssHooks[ tween.prop ] ) ) {
                            jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
                        } else {
                            tween.elem[ tween.prop ] = tween.now;
                        }
                    }
                }
            };

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
            Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
                set: function( tween ) {
                    if ( tween.elem.nodeType && tween.elem.parentNode ) {
                        tween.elem[ tween.prop ] = tween.now;
                    }
                }
            };

            jQuery.easing = {
                linear: function( p ) {
                    return p;
                },
                swing: function( p ) {
                    return 0.5 - Math.cos( p * Math.PI ) / 2;
                },
                _default: "swing"
            };

            jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
            jQuery.fx.step = {};




            var
                fxNow, inProgress,
                rfxtypes = /^(?:toggle|show|hide)$/,
                rrun = /queueHooks$/;

            function schedule() {
                if ( inProgress ) {
                    if ( document.hidden === false && window.requestAnimationFrame ) {
                        window.requestAnimationFrame( schedule );
                    } else {
                        window.setTimeout( schedule, jQuery.fx.interval );
                    }

                    jQuery.fx.tick();
                }
            }

// Animations created synchronously will run synchronously
            function createFxNow() {
                window.setTimeout( function() {
                    fxNow = undefined;
                } );
                return ( fxNow = Date.now() );
            }

// Generate parameters to create a standard animation
            function genFx( type, includeWidth ) {
                var which,
                    i = 0,
                    attrs = { height: type };

                // If we include width, step value is 1 to do all cssExpand values,
                // otherwise step value is 2 to skip over Left and Right
                includeWidth = includeWidth ? 1 : 0;
                for ( ; i < 4; i += 2 - includeWidth ) {
                    which = cssExpand[ i ];
                    attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
                }

                if ( includeWidth ) {
                    attrs.opacity = attrs.width = type;
                }

                return attrs;
            }

            function createTween( value, prop, animation ) {
                var tween,
                    collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
                    index = 0,
                    length = collection.length;
                for ( ; index < length; index++ ) {
                    if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

                        // We're done with this property
                        return tween;
                    }
                }
            }

            function defaultPrefilter( elem, props, opts ) {
                var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
                    isBox = "width" in props || "height" in props,
                    anim = this,
                    orig = {},
                    style = elem.style,
                    hidden = elem.nodeType && isHiddenWithinTree( elem ),
                    dataShow = dataPriv.get( elem, "fxshow" );

                // Queue-skipping animations hijack the fx hooks
                if ( !opts.queue ) {
                    hooks = jQuery._queueHooks( elem, "fx" );
                    if ( hooks.unqueued == null ) {
                        hooks.unqueued = 0;
                        oldfire = hooks.empty.fire;
                        hooks.empty.fire = function() {
                            if ( !hooks.unqueued ) {
                                oldfire();
                            }
                        };
                    }
                    hooks.unqueued++;

                    anim.always( function() {

                        // Ensure the complete handler is called before this completes
                        anim.always( function() {
                            hooks.unqueued--;
                            if ( !jQuery.queue( elem, "fx" ).length ) {
                                hooks.empty.fire();
                            }
                        } );
                    } );
                }

                // Detect show/hide animations
                for ( prop in props ) {
                    value = props[ prop ];
                    if ( rfxtypes.test( value ) ) {
                        delete props[ prop ];
                        toggle = toggle || value === "toggle";
                        if ( value === ( hidden ? "hide" : "show" ) ) {

                            // Pretend to be hidden if this is a "show" and
                            // there is still data from a stopped show/hide
                            if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
                                hidden = true;

                                // Ignore all other no-op show/hide data
                            } else {
                                continue;
                            }
                        }
                        orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
                    }
                }

                // Bail out if this is a no-op like .hide().hide()
                propTween = !jQuery.isEmptyObject( props );
                if ( !propTween && jQuery.isEmptyObject( orig ) ) {
                    return;
                }

                // Restrict "overflow" and "display" styles during box animations
                if ( isBox && elem.nodeType === 1 ) {

                    // Support: IE <=9 - 11, Edge 12 - 15
                    // Record all 3 overflow attributes because IE does not infer the shorthand
                    // from identically-valued overflowX and overflowY and Edge just mirrors
                    // the overflowX value there.
                    opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

                    // Identify a display type, preferring old show/hide data over the CSS cascade
                    restoreDisplay = dataShow && dataShow.display;
                    if ( restoreDisplay == null ) {
                        restoreDisplay = dataPriv.get( elem, "display" );
                    }
                    display = jQuery.css( elem, "display" );
                    if ( display === "none" ) {
                        if ( restoreDisplay ) {
                            display = restoreDisplay;
                        } else {

                            // Get nonempty value(s) by temporarily forcing visibility
                            showHide( [ elem ], true );
                            restoreDisplay = elem.style.display || restoreDisplay;
                            display = jQuery.css( elem, "display" );
                            showHide( [ elem ] );
                        }
                    }

                    // Animate inline elements as inline-block
                    if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
                        if ( jQuery.css( elem, "float" ) === "none" ) {

                            // Restore the original display value at the end of pure show/hide animations
                            if ( !propTween ) {
                                anim.done( function() {
                                    style.display = restoreDisplay;
                                } );
                                if ( restoreDisplay == null ) {
                                    display = style.display;
                                    restoreDisplay = display === "none" ? "" : display;
                                }
                            }
                            style.display = "inline-block";
                        }
                    }
                }

                if ( opts.overflow ) {
                    style.overflow = "hidden";
                    anim.always( function() {
                        style.overflow = opts.overflow[ 0 ];
                        style.overflowX = opts.overflow[ 1 ];
                        style.overflowY = opts.overflow[ 2 ];
                    } );
                }

                // Implement show/hide animations
                propTween = false;
                for ( prop in orig ) {

                    // General show/hide setup for this element animation
                    if ( !propTween ) {
                        if ( dataShow ) {
                            if ( "hidden" in dataShow ) {
                                hidden = dataShow.hidden;
                            }
                        } else {
                            dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
                        }

                        // Store hidden/visible for toggle so `.stop().toggle()` "reverses"
                        if ( toggle ) {
                            dataShow.hidden = !hidden;
                        }

                        // Show elements before animating them
                        if ( hidden ) {
                            showHide( [ elem ], true );
                        }

                        /* eslint-disable no-loop-func */

                        anim.done( function() {

                            /* eslint-enable no-loop-func */

                            // The final step of a "hide" animation is actually hiding the element
                            if ( !hidden ) {
                                showHide( [ elem ] );
                            }
                            dataPriv.remove( elem, "fxshow" );
                            for ( prop in orig ) {
                                jQuery.style( elem, prop, orig[ prop ] );
                            }
                        } );
                    }

                    // Per-property setup
                    propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
                    if ( !( prop in dataShow ) ) {
                        dataShow[ prop ] = propTween.start;
                        if ( hidden ) {
                            propTween.end = propTween.start;
                            propTween.start = 0;
                        }
                    }
                }
            }

            function propFilter( props, specialEasing ) {
                var index, name, easing, value, hooks;

                // camelCase, specialEasing and expand cssHook pass
                for ( index in props ) {
                    name = camelCase( index );
                    easing = specialEasing[ name ];
                    value = props[ index ];
                    if ( Array.isArray( value ) ) {
                        easing = value[ 1 ];
                        value = props[ index ] = value[ 0 ];
                    }

                    if ( index !== name ) {
                        props[ name ] = value;
                        delete props[ index ];
                    }

                    hooks = jQuery.cssHooks[ name ];
                    if ( hooks && "expand" in hooks ) {
                        value = hooks.expand( value );
                        delete props[ name ];

                        // Not quite $.extend, this won't overwrite existing keys.
                        // Reusing 'index' because we have the correct "name"
                        for ( index in value ) {
                            if ( !( index in props ) ) {
                                props[ index ] = value[ index ];
                                specialEasing[ index ] = easing;
                            }
                        }
                    } else {
                        specialEasing[ name ] = easing;
                    }
                }
            }

            function Animation( elem, properties, options ) {
                var result,
                    stopped,
                    index = 0,
                    length = Animation.prefilters.length,
                    deferred = jQuery.Deferred().always( function() {

                        // Don't match elem in the :animated selector
                        delete tick.elem;
                    } ),
                    tick = function() {
                        if ( stopped ) {
                            return false;
                        }
                        var currentTime = fxNow || createFxNow(),
                            remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

                            // Support: Android 2.3 only
                            // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
                            temp = remaining / animation.duration || 0,
                            percent = 1 - temp,
                            index = 0,
                            length = animation.tweens.length;

                        for ( ; index < length; index++ ) {
                            animation.tweens[ index ].run( percent );
                        }

                        deferred.notifyWith( elem, [ animation, percent, remaining ] );

                        // If there's more to do, yield
                        if ( percent < 1 && length ) {
                            return remaining;
                        }

                        // If this was an empty animation, synthesize a final progress notification
                        if ( !length ) {
                            deferred.notifyWith( elem, [ animation, 1, 0 ] );
                        }

                        // Resolve the animation and report its conclusion
                        deferred.resolveWith( elem, [ animation ] );
                        return false;
                    },
                    animation = deferred.promise( {
                        elem: elem,
                        props: jQuery.extend( {}, properties ),
                        opts: jQuery.extend( true, {
                            specialEasing: {},
                            easing: jQuery.easing._default
                        }, options ),
                        originalProperties: properties,
                        originalOptions: options,
                        startTime: fxNow || createFxNow(),
                        duration: options.duration,
                        tweens: [],
                        createTween: function( prop, end ) {
                            var tween = jQuery.Tween( elem, animation.opts, prop, end,
                                animation.opts.specialEasing[ prop ] || animation.opts.easing );
                            animation.tweens.push( tween );
                            return tween;
                        },
                        stop: function( gotoEnd ) {
                            var index = 0,

                                // If we are going to the end, we want to run all the tweens
                                // otherwise we skip this part
                                length = gotoEnd ? animation.tweens.length : 0;
                            if ( stopped ) {
                                return this;
                            }
                            stopped = true;
                            for ( ; index < length; index++ ) {
                                animation.tweens[ index ].run( 1 );
                            }

                            // Resolve when we played the last frame; otherwise, reject
                            if ( gotoEnd ) {
                                deferred.notifyWith( elem, [ animation, 1, 0 ] );
                                deferred.resolveWith( elem, [ animation, gotoEnd ] );
                            } else {
                                deferred.rejectWith( elem, [ animation, gotoEnd ] );
                            }
                            return this;
                        }
                    } ),
                    props = animation.props;

                propFilter( props, animation.opts.specialEasing );

                for ( ; index < length; index++ ) {
                    result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
                    if ( result ) {
                        if ( isFunction( result.stop ) ) {
                            jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
                                result.stop.bind( result );
                        }
                        return result;
                    }
                }

                jQuery.map( props, createTween, animation );

                if ( isFunction( animation.opts.start ) ) {
                    animation.opts.start.call( elem, animation );
                }

                // Attach callbacks from options
                animation
                    .progress( animation.opts.progress )
                    .done( animation.opts.done, animation.opts.complete )
                    .fail( animation.opts.fail )
                    .always( animation.opts.always );

                jQuery.fx.timer(
                    jQuery.extend( tick, {
                        elem: elem,
                        anim: animation,
                        queue: animation.opts.queue
                    } )
                );

                return animation;
            }

            jQuery.Animation = jQuery.extend( Animation, {

                tweeners: {
                    "*": [ function( prop, value ) {
                        var tween = this.createTween( prop, value );
                        adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
                        return tween;
                    } ]
                },

                tweener: function( props, callback ) {
                    if ( isFunction( props ) ) {
                        callback = props;
                        props = [ "*" ];
                    } else {
                        props = props.match( rnothtmlwhite );
                    }

                    var prop,
                        index = 0,
                        length = props.length;

                    for ( ; index < length; index++ ) {
                        prop = props[ index ];
                        Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
                        Animation.tweeners[ prop ].unshift( callback );
                    }
                },

                prefilters: [ defaultPrefilter ],

                prefilter: function( callback, prepend ) {
                    if ( prepend ) {
                        Animation.prefilters.unshift( callback );
                    } else {
                        Animation.prefilters.push( callback );
                    }
                }
            } );

            jQuery.speed = function( speed, easing, fn ) {
                var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
                    complete: fn || !fn && easing ||
                        isFunction( speed ) && speed,
                    duration: speed,
                    easing: fn && easing || easing && !isFunction( easing ) && easing
                };

                // Go to the end state if fx are off
                if ( jQuery.fx.off ) {
                    opt.duration = 0;

                } else {
                    if ( typeof opt.duration !== "number" ) {
                        if ( opt.duration in jQuery.fx.speeds ) {
                            opt.duration = jQuery.fx.speeds[ opt.duration ];

                        } else {
                            opt.duration = jQuery.fx.speeds._default;
                        }
                    }
                }

                // Normalize opt.queue - true/undefined/null -> "fx"
                if ( opt.queue == null || opt.queue === true ) {
                    opt.queue = "fx";
                }

                // Queueing
                opt.old = opt.complete;

                opt.complete = function() {
                    if ( isFunction( opt.old ) ) {
                        opt.old.call( this );
                    }

                    if ( opt.queue ) {
                        jQuery.dequeue( this, opt.queue );
                    }
                };

                return opt;
            };

            jQuery.fn.extend( {
                fadeTo: function( speed, to, easing, callback ) {

                    // Show any hidden elements after setting opacity to 0
                    return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

                    // Animate to the value specified
                        .end().animate( { opacity: to }, speed, easing, callback );
                },
                animate: function( prop, speed, easing, callback ) {
                    var empty = jQuery.isEmptyObject( prop ),
                        optall = jQuery.speed( speed, easing, callback ),
                        doAnimation = function() {

                            // Operate on a copy of prop so per-property easing won't be lost
                            var anim = Animation( this, jQuery.extend( {}, prop ), optall );

                            // Empty animations, or finishing resolves immediately
                            if ( empty || dataPriv.get( this, "finish" ) ) {
                                anim.stop( true );
                            }
                        };
                    doAnimation.finish = doAnimation;

                    return empty || optall.queue === false ?
                        this.each( doAnimation ) :
                        this.queue( optall.queue, doAnimation );
                },
                stop: function( type, clearQueue, gotoEnd ) {
                    var stopQueue = function( hooks ) {
                        var stop = hooks.stop;
                        delete hooks.stop;
                        stop( gotoEnd );
                    };

                    if ( typeof type !== "string" ) {
                        gotoEnd = clearQueue;
                        clearQueue = type;
                        type = undefined;
                    }
                    if ( clearQueue && type !== false ) {
                        this.queue( type || "fx", [] );
                    }

                    return this.each( function() {
                        var dequeue = true,
                            index = type != null && type + "queueHooks",
                            timers = jQuery.timers,
                            data = dataPriv.get( this );

                        if ( index ) {
                            if ( data[ index ] && data[ index ].stop ) {
                                stopQueue( data[ index ] );
                            }
                        } else {
                            for ( index in data ) {
                                if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
                                    stopQueue( data[ index ] );
                                }
                            }
                        }

                        for ( index = timers.length; index--; ) {
                            if ( timers[ index ].elem === this &&
                                ( type == null || timers[ index ].queue === type ) ) {

                                timers[ index ].anim.stop( gotoEnd );
                                dequeue = false;
                                timers.splice( index, 1 );
                            }
                        }

                        // Start the next in the queue if the last step wasn't forced.
                        // Timers currently will call their complete callbacks, which
                        // will dequeue but only if they were gotoEnd.
                        if ( dequeue || !gotoEnd ) {
                            jQuery.dequeue( this, type );
                        }
                    } );
                },
                finish: function( type ) {
                    if ( type !== false ) {
                        type = type || "fx";
                    }
                    return this.each( function() {
                        var index,
                            data = dataPriv.get( this ),
                            queue = data[ type + "queue" ],
                            hooks = data[ type + "queueHooks" ],
                            timers = jQuery.timers,
                            length = queue ? queue.length : 0;

                        // Enable finishing flag on private data
                        data.finish = true;

                        // Empty the queue first
                        jQuery.queue( this, type, [] );

                        if ( hooks && hooks.stop ) {
                            hooks.stop.call( this, true );
                        }

                        // Look for any active animations, and finish them
                        for ( index = timers.length; index--; ) {
                            if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
                                timers[ index ].anim.stop( true );
                                timers.splice( index, 1 );
                            }
                        }

                        // Look for any animations in the old queue and finish them
                        for ( index = 0; index < length; index++ ) {
                            if ( queue[ index ] && queue[ index ].finish ) {
                                queue[ index ].finish.call( this );
                            }
                        }

                        // Turn off finishing flag
                        delete data.finish;
                    } );
                }
            } );

            jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
                var cssFn = jQuery.fn[ name ];
                jQuery.fn[ name ] = function( speed, easing, callback ) {
                    return speed == null || typeof speed === "boolean" ?
                        cssFn.apply( this, arguments ) :
                        this.animate( genFx( name, true ), speed, easing, callback );
                };
            } );

// Generate shortcuts for custom animations
            jQuery.each( {
                slideDown: genFx( "show" ),
                slideUp: genFx( "hide" ),
                slideToggle: genFx( "toggle" ),
                fadeIn: { opacity: "show" },
                fadeOut: { opacity: "hide" },
                fadeToggle: { opacity: "toggle" }
            }, function( name, props ) {
                jQuery.fn[ name ] = function( speed, easing, callback ) {
                    return this.animate( props, speed, easing, callback );
                };
            } );

            jQuery.timers = [];
            jQuery.fx.tick = function() {
                var timer,
                    i = 0,
                    timers = jQuery.timers;

                fxNow = Date.now();

                for ( ; i < timers.length; i++ ) {
                    timer = timers[ i ];

                    // Run the timer and safely remove it when done (allowing for external removal)
                    if ( !timer() && timers[ i ] === timer ) {
                        timers.splice( i--, 1 );
                    }
                }

                if ( !timers.length ) {
                    jQuery.fx.stop();
                }
                fxNow = undefined;
            };

            jQuery.fx.timer = function( timer ) {
                jQuery.timers.push( timer );
                jQuery.fx.start();
            };

            jQuery.fx.interval = 13;
            jQuery.fx.start = function() {
                if ( inProgress ) {
                    return;
                }

                inProgress = true;
                schedule();
            };

            jQuery.fx.stop = function() {
                inProgress = null;
            };

            jQuery.fx.speeds = {
                slow: 600,
                fast: 200,

                // Default speed
                _default: 400
            };


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
            jQuery.fn.delay = function( time, type ) {
                time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
                type = type || "fx";

                return this.queue( type, function( next, hooks ) {
                    var timeout = window.setTimeout( next, time );
                    hooks.stop = function() {
                        window.clearTimeout( timeout );
                    };
                } );
            };


            ( function() {
                var input = document.createElement( "input" ),
                    select = document.createElement( "select" ),
                    opt = select.appendChild( document.createElement( "option" ) );

                input.type = "checkbox";

                // Support: Android <=4.3 only
                // Default value for a checkbox should be "on"
                support.checkOn = input.value !== "";

                // Support: IE <=11 only
                // Must access selectedIndex to make default options select
                support.optSelected = opt.selected;

                // Support: IE <=11 only
                // An input loses its value after becoming a radio
                input = document.createElement( "input" );
                input.value = "t";
                input.type = "radio";
                support.radioValue = input.value === "t";
            } )();


            var boolHook,
                attrHandle = jQuery.expr.attrHandle;

            jQuery.fn.extend( {
                attr: function( name, value ) {
                    return access( this, jQuery.attr, name, value, arguments.length > 1 );
                },

                removeAttr: function( name ) {
                    return this.each( function() {
                        jQuery.removeAttr( this, name );
                    } );
                }
            } );

            jQuery.extend( {
                attr: function( elem, name, value ) {
                    var ret, hooks,
                        nType = elem.nodeType;

                    // Don't get/set attributes on text, comment and attribute nodes
                    if ( nType === 3 || nType === 8 || nType === 2 ) {
                        return;
                    }

                    // Fallback to prop when attributes are not supported
                    if ( typeof elem.getAttribute === "undefined" ) {
                        return jQuery.prop( elem, name, value );
                    }

                    // Attribute hooks are determined by the lowercase version
                    // Grab necessary hook if one is defined
                    if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
                        hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
                            ( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
                    }

                    if ( value !== undefined ) {
                        if ( value === null ) {
                            jQuery.removeAttr( elem, name );
                            return;
                        }

                        if ( hooks && "set" in hooks &&
                            ( ret = hooks.set( elem, value, name ) ) !== undefined ) {
                            return ret;
                        }

                        elem.setAttribute( name, value + "" );
                        return value;
                    }

                    if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
                        return ret;
                    }

                    ret = jQuery.find.attr( elem, name );

                    // Non-existent attributes return null, we normalize to undefined
                    return ret == null ? undefined : ret;
                },

                attrHooks: {
                    type: {
                        set: function( elem, value ) {
                            if ( !support.radioValue && value === "radio" &&
                                nodeName( elem, "input" ) ) {
                                var val = elem.value;
                                elem.setAttribute( "type", value );
                                if ( val ) {
                                    elem.value = val;
                                }
                                return value;
                            }
                        }
                    }
                },

                removeAttr: function( elem, value ) {
                    var name,
                        i = 0,

                        // Attribute names can contain non-HTML whitespace characters
                        // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
                        attrNames = value && value.match( rnothtmlwhite );

                    if ( attrNames && elem.nodeType === 1 ) {
                        while ( ( name = attrNames[ i++ ] ) ) {
                            elem.removeAttribute( name );
                        }
                    }
                }
            } );

// Hooks for boolean attributes
            boolHook = {
                set: function( elem, value, name ) {
                    if ( value === false ) {

                        // Remove boolean attributes when set to false
                        jQuery.removeAttr( elem, name );
                    } else {
                        elem.setAttribute( name, name );
                    }
                    return name;
                }
            };

            jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
                var getter = attrHandle[ name ] || jQuery.find.attr;

                attrHandle[ name ] = function( elem, name, isXML ) {
                    var ret, handle,
                        lowercaseName = name.toLowerCase();

                    if ( !isXML ) {

                        // Avoid an infinite loop by temporarily removing this function from the getter
                        handle = attrHandle[ lowercaseName ];
                        attrHandle[ lowercaseName ] = ret;
                        ret = getter( elem, name, isXML ) != null ?
                            lowercaseName :
                            null;
                        attrHandle[ lowercaseName ] = handle;
                    }
                    return ret;
                };
            } );




            var rfocusable = /^(?:input|select|textarea|button)$/i,
                rclickable = /^(?:a|area)$/i;

            jQuery.fn.extend( {
                prop: function( name, value ) {
                    return access( this, jQuery.prop, name, value, arguments.length > 1 );
                },

                removeProp: function( name ) {
                    return this.each( function() {
                        delete this[ jQuery.propFix[ name ] || name ];
                    } );
                }
            } );

            jQuery.extend( {
                prop: function( elem, name, value ) {
                    var ret, hooks,
                        nType = elem.nodeType;

                    // Don't get/set properties on text, comment and attribute nodes
                    if ( nType === 3 || nType === 8 || nType === 2 ) {
                        return;
                    }

                    if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

                        // Fix name and attach hooks
                        name = jQuery.propFix[ name ] || name;
                        hooks = jQuery.propHooks[ name ];
                    }

                    if ( value !== undefined ) {
                        if ( hooks && "set" in hooks &&
                            ( ret = hooks.set( elem, value, name ) ) !== undefined ) {
                            return ret;
                        }

                        return ( elem[ name ] = value );
                    }

                    if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
                        return ret;
                    }

                    return elem[ name ];
                },

                propHooks: {
                    tabIndex: {
                        get: function( elem ) {

                            // Support: IE <=9 - 11 only
                            // elem.tabIndex doesn't always return the
                            // correct value when it hasn't been explicitly set
                            // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
                            // Use proper attribute retrieval(#12072)
                            var tabindex = jQuery.find.attr( elem, "tabindex" );

                            if ( tabindex ) {
                                return parseInt( tabindex, 10 );
                            }

                            if (
                                rfocusable.test( elem.nodeName ) ||
                                rclickable.test( elem.nodeName ) &&
                                elem.href
                            ) {
                                return 0;
                            }

                            return -1;
                        }
                    }
                },

                propFix: {
                    "for": "htmlFor",
                    "class": "className"
                }
            } );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
            if ( !support.optSelected ) {
                jQuery.propHooks.selected = {
                    get: function( elem ) {

                        /* eslint no-unused-expressions: "off" */

                        var parent = elem.parentNode;
                        if ( parent && parent.parentNode ) {
                            parent.parentNode.selectedIndex;
                        }
                        return null;
                    },
                    set: function( elem ) {

                        /* eslint no-unused-expressions: "off" */

                        var parent = elem.parentNode;
                        if ( parent ) {
                            parent.selectedIndex;

                            if ( parent.parentNode ) {
                                parent.parentNode.selectedIndex;
                            }
                        }
                    }
                };
            }

            jQuery.each( [
                "tabIndex",
                "readOnly",
                "maxLength",
                "cellSpacing",
                "cellPadding",
                "rowSpan",
                "colSpan",
                "useMap",
                "frameBorder",
                "contentEditable"
            ], function() {
                jQuery.propFix[ this.toLowerCase() ] = this;
            } );




            // Strip and collapse whitespace according to HTML spec
            // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
            function stripAndCollapse( value ) {
                var tokens = value.match( rnothtmlwhite ) || [];
                return tokens.join( " " );
            }


            function getClass( elem ) {
                return elem.getAttribute && elem.getAttribute( "class" ) || "";
            }

            function classesToArray( value ) {
                if ( Array.isArray( value ) ) {
                    return value;
                }
                if ( typeof value === "string" ) {
                    return value.match( rnothtmlwhite ) || [];
                }
                return [];
            }

            jQuery.fn.extend( {
                addClass: function( value ) {
                    var classes, elem, cur, curValue, clazz, j, finalValue,
                        i = 0;

                    if ( isFunction( value ) ) {
                        return this.each( function( j ) {
                            jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
                        } );
                    }

                    classes = classesToArray( value );

                    if ( classes.length ) {
                        while ( ( elem = this[ i++ ] ) ) {
                            curValue = getClass( elem );
                            cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

                            if ( cur ) {
                                j = 0;
                                while ( ( clazz = classes[ j++ ] ) ) {
                                    if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
                                        cur += clazz + " ";
                                    }
                                }

                                // Only assign if different to avoid unneeded rendering.
                                finalValue = stripAndCollapse( cur );
                                if ( curValue !== finalValue ) {
                                    elem.setAttribute( "class", finalValue );
                                }
                            }
                        }
                    }

                    return this;
                },

                removeClass: function( value ) {
                    var classes, elem, cur, curValue, clazz, j, finalValue,
                        i = 0;

                    if ( isFunction( value ) ) {
                        return this.each( function( j ) {
                            jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
                        } );
                    }

                    if ( !arguments.length ) {
                        return this.attr( "class", "" );
                    }

                    classes = classesToArray( value );

                    if ( classes.length ) {
                        while ( ( elem = this[ i++ ] ) ) {
                            curValue = getClass( elem );

                            // This expression is here for better compressibility (see addClass)
                            cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

                            if ( cur ) {
                                j = 0;
                                while ( ( clazz = classes[ j++ ] ) ) {

                                    // Remove *all* instances
                                    while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
                                        cur = cur.replace( " " + clazz + " ", " " );
                                    }
                                }

                                // Only assign if different to avoid unneeded rendering.
                                finalValue = stripAndCollapse( cur );
                                if ( curValue !== finalValue ) {
                                    elem.setAttribute( "class", finalValue );
                                }
                            }
                        }
                    }

                    return this;
                },

                toggleClass: function( value, stateVal ) {
                    var type = typeof value,
                        isValidValue = type === "string" || Array.isArray( value );

                    if ( typeof stateVal === "boolean" && isValidValue ) {
                        return stateVal ? this.addClass( value ) : this.removeClass( value );
                    }

                    if ( isFunction( value ) ) {
                        return this.each( function( i ) {
                            jQuery( this ).toggleClass(
                                value.call( this, i, getClass( this ), stateVal ),
                                stateVal
                            );
                        } );
                    }

                    return this.each( function() {
                        var className, i, self, classNames;

                        if ( isValidValue ) {

                            // Toggle individual class names
                            i = 0;
                            self = jQuery( this );
                            classNames = classesToArray( value );

                            while ( ( className = classNames[ i++ ] ) ) {

                                // Check each className given, space separated list
                                if ( self.hasClass( className ) ) {
                                    self.removeClass( className );
                                } else {
                                    self.addClass( className );
                                }
                            }

                            // Toggle whole class name
                        } else if ( value === undefined || type === "boolean" ) {
                            className = getClass( this );
                            if ( className ) {

                                // Store className if set
                                dataPriv.set( this, "__className__", className );
                            }

                            // If the element has a class name or if we're passed `false`,
                            // then remove the whole classname (if there was one, the above saved it).
                            // Otherwise bring back whatever was previously saved (if anything),
                            // falling back to the empty string if nothing was stored.
                            if ( this.setAttribute ) {
                                this.setAttribute( "class",
                                    className || value === false ?
                                        "" :
                                        dataPriv.get( this, "__className__" ) || ""
                                );
                            }
                        }
                    } );
                },

                hasClass: function( selector ) {
                    var className, elem,
                        i = 0;

                    className = " " + selector + " ";
                    while ( ( elem = this[ i++ ] ) ) {
                        if ( elem.nodeType === 1 &&
                            ( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
                            return true;
                        }
                    }

                    return false;
                }
            } );




            var rreturn = /\r/g;

            jQuery.fn.extend( {
                val: function( value ) {
                    var hooks, ret, valueIsFunction,
                        elem = this[ 0 ];

                    if ( !arguments.length ) {
                        if ( elem ) {
                            hooks = jQuery.valHooks[ elem.type ] ||
                                jQuery.valHooks[ elem.nodeName.toLowerCase() ];

                            if ( hooks &&
                                "get" in hooks &&
                                ( ret = hooks.get( elem, "value" ) ) !== undefined
                            ) {
                                return ret;
                            }

                            ret = elem.value;

                            // Handle most common string cases
                            if ( typeof ret === "string" ) {
                                return ret.replace( rreturn, "" );
                            }

                            // Handle cases where value is null/undef or number
                            return ret == null ? "" : ret;
                        }

                        return;
                    }

                    valueIsFunction = isFunction( value );

                    return this.each( function( i ) {
                        var val;

                        if ( this.nodeType !== 1 ) {
                            return;
                        }

                        if ( valueIsFunction ) {
                            val = value.call( this, i, jQuery( this ).val() );
                        } else {
                            val = value;
                        }

                        // Treat null/undefined as ""; convert numbers to string
                        if ( val == null ) {
                            val = "";

                        } else if ( typeof val === "number" ) {
                            val += "";

                        } else if ( Array.isArray( val ) ) {
                            val = jQuery.map( val, function( value ) {
                                return value == null ? "" : value + "";
                            } );
                        }

                        hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

                        // If set returns undefined, fall back to normal setting
                        if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
                            this.value = val;
                        }
                    } );
                }
            } );

            jQuery.extend( {
                valHooks: {
                    option: {
                        get: function( elem ) {

                            var val = jQuery.find.attr( elem, "value" );
                            return val != null ?
                                val :

                                // Support: IE <=10 - 11 only
                                // option.text throws exceptions (#14686, #14858)
                                // Strip and collapse whitespace
                                // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
                                stripAndCollapse( jQuery.text( elem ) );
                        }
                    },
                    select: {
                        get: function( elem ) {
                            var value, option, i,
                                options = elem.options,
                                index = elem.selectedIndex,
                                one = elem.type === "select-one",
                                values = one ? null : [],
                                max = one ? index + 1 : options.length;

                            if ( index < 0 ) {
                                i = max;

                            } else {
                                i = one ? index : 0;
                            }

                            // Loop through all the selected options
                            for ( ; i < max; i++ ) {
                                option = options[ i ];

                                // Support: IE <=9 only
                                // IE8-9 doesn't update selected after form reset (#2551)
                                if ( ( option.selected || i === index ) &&

                                    // Don't return options that are disabled or in a disabled optgroup
                                    !option.disabled &&
                                    ( !option.parentNode.disabled ||
                                        !nodeName( option.parentNode, "optgroup" ) ) ) {

                                    // Get the specific value for the option
                                    value = jQuery( option ).val();

                                    // We don't need an array for one selects
                                    if ( one ) {
                                        return value;
                                    }

                                    // Multi-Selects return an array
                                    values.push( value );
                                }
                            }

                            return values;
                        },

                        set: function( elem, value ) {
                            var optionSet, option,
                                options = elem.options,
                                values = jQuery.makeArray( value ),
                                i = options.length;

                            while ( i-- ) {
                                option = options[ i ];

                                /* eslint-disable no-cond-assign */

                                if ( option.selected =
                                    jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
                                ) {
                                    optionSet = true;
                                }

                                /* eslint-enable no-cond-assign */
                            }

                            // Force browsers to behave consistently when non-matching value is set
                            if ( !optionSet ) {
                                elem.selectedIndex = -1;
                            }
                            return values;
                        }
                    }
                }
            } );

// Radios and checkboxes getter/setter
            jQuery.each( [ "radio", "checkbox" ], function() {
                jQuery.valHooks[ this ] = {
                    set: function( elem, value ) {
                        if ( Array.isArray( value ) ) {
                            return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
                        }
                    }
                };
                if ( !support.checkOn ) {
                    jQuery.valHooks[ this ].get = function( elem ) {
                        return elem.getAttribute( "value" ) === null ? "on" : elem.value;
                    };
                }
            } );




// Return jQuery for attributes-only inclusion


            support.focusin = "onfocusin" in window;


            var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
                stopPropagationCallback = function( e ) {
                    e.stopPropagation();
                };

            jQuery.extend( jQuery.event, {

                trigger: function( event, data, elem, onlyHandlers ) {

                    var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
                        eventPath = [ elem || document ],
                        type = hasOwn.call( event, "type" ) ? event.type : event,
                        namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

                    cur = lastElement = tmp = elem = elem || document;

                    // Don't do events on text and comment nodes
                    if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
                        return;
                    }

                    // focus/blur morphs to focusin/out; ensure we're not firing them right now
                    if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
                        return;
                    }

                    if ( type.indexOf( "." ) > -1 ) {

                        // Namespaced trigger; create a regexp to match event type in handle()
                        namespaces = type.split( "." );
                        type = namespaces.shift();
                        namespaces.sort();
                    }
                    ontype = type.indexOf( ":" ) < 0 && "on" + type;

                    // Caller can pass in a jQuery.Event object, Object, or just an event type string
                    event = event[ jQuery.expando ] ?
                        event :
                        new jQuery.Event( type, typeof event === "object" && event );

                    // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
                    event.isTrigger = onlyHandlers ? 2 : 3;
                    event.namespace = namespaces.join( "." );
                    event.rnamespace = event.namespace ?
                        new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
                        null;

                    // Clean up the event in case it is being reused
                    event.result = undefined;
                    if ( !event.target ) {
                        event.target = elem;
                    }

                    // Clone any incoming data and prepend the event, creating the handler arg list
                    data = data == null ?
                        [ event ] :
                        jQuery.makeArray( data, [ event ] );

                    // Allow special events to draw outside the lines
                    special = jQuery.event.special[ type ] || {};
                    if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
                        return;
                    }

                    // Determine event propagation path in advance, per W3C events spec (#9951)
                    // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
                    if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

                        bubbleType = special.delegateType || type;
                        if ( !rfocusMorph.test( bubbleType + type ) ) {
                            cur = cur.parentNode;
                        }
                        for ( ; cur; cur = cur.parentNode ) {
                            eventPath.push( cur );
                            tmp = cur;
                        }

                        // Only add window if we got to document (e.g., not plain obj or detached DOM)
                        if ( tmp === ( elem.ownerDocument || document ) ) {
                            eventPath.push( tmp.defaultView || tmp.parentWindow || window );
                        }
                    }

                    // Fire handlers on the event path
                    i = 0;
                    while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
                        lastElement = cur;
                        event.type = i > 1 ?
                            bubbleType :
                            special.bindType || type;

                        // jQuery handler
                        handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
                            dataPriv.get( cur, "handle" );
                        if ( handle ) {
                            handle.apply( cur, data );
                        }

                        // Native handler
                        handle = ontype && cur[ ontype ];
                        if ( handle && handle.apply && acceptData( cur ) ) {
                            event.result = handle.apply( cur, data );
                            if ( event.result === false ) {
                                event.preventDefault();
                            }
                        }
                    }
                    event.type = type;

                    // If nobody prevented the default action, do it now
                    if ( !onlyHandlers && !event.isDefaultPrevented() ) {

                        if ( ( !special._default ||
                            special._default.apply( eventPath.pop(), data ) === false ) &&
                            acceptData( elem ) ) {

                            // Call a native DOM method on the target with the same name as the event.
                            // Don't do default actions on window, that's where global variables be (#6170)
                            if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

                                // Don't re-trigger an onFOO event when we call its FOO() method
                                tmp = elem[ ontype ];

                                if ( tmp ) {
                                    elem[ ontype ] = null;
                                }

                                // Prevent re-triggering of the same event, since we already bubbled it above
                                jQuery.event.triggered = type;

                                if ( event.isPropagationStopped() ) {
                                    lastElement.addEventListener( type, stopPropagationCallback );
                                }

                                elem[ type ]();

                                if ( event.isPropagationStopped() ) {
                                    lastElement.removeEventListener( type, stopPropagationCallback );
                                }

                                jQuery.event.triggered = undefined;

                                if ( tmp ) {
                                    elem[ ontype ] = tmp;
                                }
                            }
                        }
                    }

                    return event.result;
                },

                // Piggyback on a donor event to simulate a different one
                // Used only for `focus(in | out)` events
                simulate: function( type, elem, event ) {
                    var e = jQuery.extend(
                        new jQuery.Event(),
                        event,
                        {
                            type: type,
                            isSimulated: true
                        }
                    );

                    jQuery.event.trigger( e, null, elem );
                }

            } );

            jQuery.fn.extend( {

                trigger: function( type, data ) {
                    return this.each( function() {
                        jQuery.event.trigger( type, data, this );
                    } );
                },
                triggerHandler: function( type, data ) {
                    var elem = this[ 0 ];
                    if ( elem ) {
                        return jQuery.event.trigger( type, data, elem, true );
                    }
                }
            } );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
            if ( !support.focusin ) {
                jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

                    // Attach a single capturing handler on the document while someone wants focusin/focusout
                    var handler = function( event ) {
                        jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
                    };

                    jQuery.event.special[ fix ] = {
                        setup: function() {
                            var doc = this.ownerDocument || this,
                                attaches = dataPriv.access( doc, fix );

                            if ( !attaches ) {
                                doc.addEventListener( orig, handler, true );
                            }
                            dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
                        },
                        teardown: function() {
                            var doc = this.ownerDocument || this,
                                attaches = dataPriv.access( doc, fix ) - 1;

                            if ( !attaches ) {
                                doc.removeEventListener( orig, handler, true );
                                dataPriv.remove( doc, fix );

                            } else {
                                dataPriv.access( doc, fix, attaches );
                            }
                        }
                    };
                } );
            }
            var location = window.location;

            var nonce = Date.now();

            var rquery = ( /\?/ );



// Cross-browser xml parsing
            jQuery.parseXML = function( data ) {
                var xml;
                if ( !data || typeof data !== "string" ) {
                    return null;
                }

                // Support: IE 9 - 11 only
                // IE throws on parseFromString with invalid input.
                try {
                    xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
                } catch ( e ) {
                    xml = undefined;
                }

                if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
                    jQuery.error( "Invalid XML: " + data );
                }
                return xml;
            };


            var
                rbracket = /\[\]$/,
                rCRLF = /\r?\n/g,
                rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
                rsubmittable = /^(?:input|select|textarea|keygen)/i;

            function buildParams( prefix, obj, traditional, add ) {
                var name;

                if ( Array.isArray( obj ) ) {

                    // Serialize array item.
                    jQuery.each( obj, function( i, v ) {
                        if ( traditional || rbracket.test( prefix ) ) {

                            // Treat each array item as a scalar.
                            add( prefix, v );

                        } else {

                            // Item is non-scalar (array or object), encode its numeric index.
                            buildParams(
                                prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
                                v,
                                traditional,
                                add
                            );
                        }
                    } );

                } else if ( !traditional && toType( obj ) === "object" ) {

                    // Serialize object item.
                    for ( name in obj ) {
                        buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
                    }

                } else {

                    // Serialize scalar item.
                    add( prefix, obj );
                }
            }

// Serialize an array of form elements or a set of
// key/values into a query string
            jQuery.param = function( a, traditional ) {
                var prefix,
                    s = [],
                    add = function( key, valueOrFunction ) {

                        // If value is a function, invoke it and use its return value
                        var value = isFunction( valueOrFunction ) ?
                            valueOrFunction() :
                            valueOrFunction;

                        s[ s.length ] = encodeURIComponent( key ) + "=" +
                            encodeURIComponent( value == null ? "" : value );
                    };

                // If an array was passed in, assume that it is an array of form elements.
                if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

                    // Serialize the form elements
                    jQuery.each( a, function() {
                        add( this.name, this.value );
                    } );

                } else {

                    // If traditional, encode the "old" way (the way 1.3.2 or older
                    // did it), otherwise encode params recursively.
                    for ( prefix in a ) {
                        buildParams( prefix, a[ prefix ], traditional, add );
                    }
                }

                // Return the resulting serialization
                return s.join( "&" );
            };

            jQuery.fn.extend( {
                serialize: function() {
                    return jQuery.param( this.serializeArray() );
                },
                serializeArray: function() {
                    return this.map( function() {

                        // Can add propHook for "elements" to filter or add form elements
                        var elements = jQuery.prop( this, "elements" );
                        return elements ? jQuery.makeArray( elements ) : this;
                    } )
                        .filter( function() {
                            var type = this.type;

                            // Use .is( ":disabled" ) so that fieldset[disabled] works
                            return this.name && !jQuery( this ).is( ":disabled" ) &&
                                rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
                                ( this.checked || !rcheckableType.test( type ) );
                        } )
                        .map( function( i, elem ) {
                            var val = jQuery( this ).val();

                            if ( val == null ) {
                                return null;
                            }

                            if ( Array.isArray( val ) ) {
                                return jQuery.map( val, function( val ) {
                                    return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
                                } );
                            }

                            return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
                        } ).get();
                }
            } );


            var
                r20 = /%20/g,
                rhash = /#.*$/,
                rantiCache = /([?&])_=[^&]*/,
                rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

                // #7653, #8125, #8152: local protocol detection
                rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
                rnoContent = /^(?:GET|HEAD)$/,
                rprotocol = /^\/\//,

                /* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
                prefilters = {},

                /* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
                transports = {},

                // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
                allTypes = "*/".concat( "*" ),

                // Anchor tag for parsing the document origin
                originAnchor = document.createElement( "a" );
            originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
            function addToPrefiltersOrTransports( structure ) {

                // dataTypeExpression is optional and defaults to "*"
                return function( dataTypeExpression, func ) {

                    if ( typeof dataTypeExpression !== "string" ) {
                        func = dataTypeExpression;
                        dataTypeExpression = "*";
                    }

                    var dataType,
                        i = 0,
                        dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

                    if ( isFunction( func ) ) {

                        // For each dataType in the dataTypeExpression
                        while ( ( dataType = dataTypes[ i++ ] ) ) {

                            // Prepend if requested
                            if ( dataType[ 0 ] === "+" ) {
                                dataType = dataType.slice( 1 ) || "*";
                                ( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

                                // Otherwise append
                            } else {
                                ( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
                            }
                        }
                    }
                };
            }

// Base inspection function for prefilters and transports
            function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

                var inspected = {},
                    seekingTransport = ( structure === transports );

                function inspect( dataType ) {
                    var selected;
                    inspected[ dataType ] = true;
                    jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
                        var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
                        if ( typeof dataTypeOrTransport === "string" &&
                            !seekingTransport && !inspected[ dataTypeOrTransport ] ) {

                            options.dataTypes.unshift( dataTypeOrTransport );
                            inspect( dataTypeOrTransport );
                            return false;
                        } else if ( seekingTransport ) {
                            return !( selected = dataTypeOrTransport );
                        }
                    } );
                    return selected;
                }

                return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
            }

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
            function ajaxExtend( target, src ) {
                var key, deep,
                    flatOptions = jQuery.ajaxSettings.flatOptions || {};

                for ( key in src ) {
                    if ( src[ key ] !== undefined ) {
                        ( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
                    }
                }
                if ( deep ) {
                    jQuery.extend( true, target, deep );
                }

                return target;
            }

            /* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
            function ajaxHandleResponses( s, jqXHR, responses ) {

                var ct, type, finalDataType, firstDataType,
                    contents = s.contents,
                    dataTypes = s.dataTypes;

                // Remove auto dataType and get content-type in the process
                while ( dataTypes[ 0 ] === "*" ) {
                    dataTypes.shift();
                    if ( ct === undefined ) {
                        ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
                    }
                }

                // Check if we're dealing with a known content-type
                if ( ct ) {
                    for ( type in contents ) {
                        if ( contents[ type ] && contents[ type ].test( ct ) ) {
                            dataTypes.unshift( type );
                            break;
                        }
                    }
                }

                // Check to see if we have a response for the expected dataType
                if ( dataTypes[ 0 ] in responses ) {
                    finalDataType = dataTypes[ 0 ];
                } else {

                    // Try convertible dataTypes
                    for ( type in responses ) {
                        if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
                            finalDataType = type;
                            break;
                        }
                        if ( !firstDataType ) {
                            firstDataType = type;
                        }
                    }

                    // Or just use first one
                    finalDataType = finalDataType || firstDataType;
                }

                // If we found a dataType
                // We add the dataType to the list if needed
                // and return the corresponding response
                if ( finalDataType ) {
                    if ( finalDataType !== dataTypes[ 0 ] ) {
                        dataTypes.unshift( finalDataType );
                    }
                    return responses[ finalDataType ];
                }
            }

            /* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
            function ajaxConvert( s, response, jqXHR, isSuccess ) {
                var conv2, current, conv, tmp, prev,
                    converters = {},

                    // Work with a copy of dataTypes in case we need to modify it for conversion
                    dataTypes = s.dataTypes.slice();

                // Create converters map with lowercased keys
                if ( dataTypes[ 1 ] ) {
                    for ( conv in s.converters ) {
                        converters[ conv.toLowerCase() ] = s.converters[ conv ];
                    }
                }

                current = dataTypes.shift();

                // Convert to each sequential dataType
                while ( current ) {

                    if ( s.responseFields[ current ] ) {
                        jqXHR[ s.responseFields[ current ] ] = response;
                    }

                    // Apply the dataFilter if provided
                    if ( !prev && isSuccess && s.dataFilter ) {
                        response = s.dataFilter( response, s.dataType );
                    }

                    prev = current;
                    current = dataTypes.shift();

                    if ( current ) {

                        // There's only work to do if current dataType is non-auto
                        if ( current === "*" ) {

                            current = prev;

                            // Convert response if prev dataType is non-auto and differs from current
                        } else if ( prev !== "*" && prev !== current ) {

                            // Seek a direct converter
                            conv = converters[ prev + " " + current ] || converters[ "* " + current ];

                            // If none found, seek a pair
                            if ( !conv ) {
                                for ( conv2 in converters ) {

                                    // If conv2 outputs current
                                    tmp = conv2.split( " " );
                                    if ( tmp[ 1 ] === current ) {

                                        // If prev can be converted to accepted input
                                        conv = converters[ prev + " " + tmp[ 0 ] ] ||
                                            converters[ "* " + tmp[ 0 ] ];
                                        if ( conv ) {

                                            // Condense equivalence converters
                                            if ( conv === true ) {
                                                conv = converters[ conv2 ];

                                                // Otherwise, insert the intermediate dataType
                                            } else if ( converters[ conv2 ] !== true ) {
                                                current = tmp[ 0 ];
                                                dataTypes.unshift( tmp[ 1 ] );
                                            }
                                            break;
                                        }
                                    }
                                }
                            }

                            // Apply converter (if not an equivalence)
                            if ( conv !== true ) {

                                // Unless errors are allowed to bubble, catch and return them
                                if ( conv && s.throws ) {
                                    response = conv( response );
                                } else {
                                    try {
                                        response = conv( response );
                                    } catch ( e ) {
                                        return {
                                            state: "parsererror",
                                            error: conv ? e : "No conversion from " + prev + " to " + current
                                        };
                                    }
                                }
                            }
                        }
                    }
                }

                return { state: "success", data: response };
            }

            jQuery.extend( {

                // Counter for holding the number of active queries
                active: 0,

                // Last-Modified header cache for next request
                lastModified: {},
                etag: {},

                ajaxSettings: {
                    url: location.href,
                    type: "GET",
                    isLocal: rlocalProtocol.test( location.protocol ),
                    global: true,
                    processData: true,
                    async: true,
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",

                    /*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

                    accepts: {
                        "*": allTypes,
                        text: "text/plain",
                        html: "text/html",
                        xml: "application/xml, text/xml",
                        json: "application/json, text/javascript"
                    },

                    contents: {
                        xml: /\bxml\b/,
                        html: /\bhtml/,
                        json: /\bjson\b/
                    },

                    responseFields: {
                        xml: "responseXML",
                        text: "responseText",
                        json: "responseJSON"
                    },

                    // Data converters
                    // Keys separate source (or catchall "*") and destination types with a single space
                    converters: {

                        // Convert anything to text
                        "* text": String,

                        // Text to html (true = no transformation)
                        "text html": true,

                        // Evaluate text as a json expression
                        "text json": JSON.parse,

                        // Parse text as xml
                        "text xml": jQuery.parseXML
                    },

                    // For options that shouldn't be deep extended:
                    // you can add your own custom options here if
                    // and when you create one that shouldn't be
                    // deep extended (see ajaxExtend)
                    flatOptions: {
                        url: true,
                        context: true
                    }
                },

                // Creates a full fledged settings object into target
                // with both ajaxSettings and settings fields.
                // If target is omitted, writes into ajaxSettings.
                ajaxSetup: function( target, settings ) {
                    return settings ?

                        // Building a settings object
                        ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

                        // Extending ajaxSettings
                        ajaxExtend( jQuery.ajaxSettings, target );
                },

                ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
                ajaxTransport: addToPrefiltersOrTransports( transports ),

                // Main method
                ajax: function( url, options ) {

                    // If url is an object, simulate pre-1.5 signature
                    if ( typeof url === "object" ) {
                        options = url;
                        url = undefined;
                    }

                    // Force options to be an object
                    options = options || {};

                    var transport,

                        // URL without anti-cache param
                        cacheURL,

                        // Response headers
                        responseHeadersString,
                        responseHeaders,

                        // timeout handle
                        timeoutTimer,

                        // Url cleanup var
                        urlAnchor,

                        // Request state (becomes false upon send and true upon completion)
                        completed,

                        // To know if global events are to be dispatched
                        fireGlobals,

                        // Loop variable
                        i,

                        // uncached part of the url
                        uncached,

                        // Create the final options object
                        s = jQuery.ajaxSetup( {}, options ),

                        // Callbacks context
                        callbackContext = s.context || s,

                        // Context for global events is callbackContext if it is a DOM node or jQuery collection
                        globalEventContext = s.context &&
                        ( callbackContext.nodeType || callbackContext.jquery ) ?
                            jQuery( callbackContext ) :
                            jQuery.event,

                        // Deferreds
                        deferred = jQuery.Deferred(),
                        completeDeferred = jQuery.Callbacks( "once memory" ),

                        // Status-dependent callbacks
                        statusCode = s.statusCode || {},

                        // Headers (they are sent all at once)
                        requestHeaders = {},
                        requestHeadersNames = {},

                        // Default abort message
                        strAbort = "canceled",

                        // Fake xhr
                        jqXHR = {
                            readyState: 0,

                            // Builds headers hashtable if needed
                            getResponseHeader: function( key ) {
                                var match;
                                if ( completed ) {
                                    if ( !responseHeaders ) {
                                        responseHeaders = {};
                                        while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
                                            responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
                                        }
                                    }
                                    match = responseHeaders[ key.toLowerCase() ];
                                }
                                return match == null ? null : match;
                            },

                            // Raw string
                            getAllResponseHeaders: function() {
                                return completed ? responseHeadersString : null;
                            },

                            // Caches the header
                            setRequestHeader: function( name, value ) {
                                if ( completed == null ) {
                                    name = requestHeadersNames[ name.toLowerCase() ] =
                                        requestHeadersNames[ name.toLowerCase() ] || name;
                                    requestHeaders[ name ] = value;
                                }
                                return this;
                            },

                            // Overrides response content-type header
                            overrideMimeType: function( type ) {
                                if ( completed == null ) {
                                    s.mimeType = type;
                                }
                                return this;
                            },

                            // Status-dependent callbacks
                            statusCode: function( map ) {
                                var code;
                                if ( map ) {
                                    if ( completed ) {

                                        // Execute the appropriate callbacks
                                        jqXHR.always( map[ jqXHR.status ] );
                                    } else {

                                        // Lazy-add the new callbacks in a way that preserves old ones
                                        for ( code in map ) {
                                            statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
                                        }
                                    }
                                }
                                return this;
                            },

                            // Cancel the request
                            abort: function( statusText ) {
                                var finalText = statusText || strAbort;
                                if ( transport ) {
                                    transport.abort( finalText );
                                }
                                done( 0, finalText );
                                return this;
                            }
                        };

                    // Attach deferreds
                    deferred.promise( jqXHR );

                    // Add protocol if not provided (prefilters might expect it)
                    // Handle falsy url in the settings object (#10093: consistency with old signature)
                    // We also use the url parameter if available
                    s.url = ( ( url || s.url || location.href ) + "" )
                        .replace( rprotocol, location.protocol + "//" );

                    // Alias method option to type as per ticket #12004
                    s.type = options.method || options.type || s.method || s.type;

                    // Extract dataTypes list
                    s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

                    // A cross-domain request is in order when the origin doesn't match the current origin.
                    if ( s.crossDomain == null ) {
                        urlAnchor = document.createElement( "a" );

                        // Support: IE <=8 - 11, Edge 12 - 15
                        // IE throws exception on accessing the href property if url is malformed,
                        // e.g. http://example.com:80x/
                        try {
                            urlAnchor.href = s.url;

                            // Support: IE <=8 - 11 only
                            // Anchor's host property isn't correctly set when s.url is relative
                            urlAnchor.href = urlAnchor.href;
                            s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
                                urlAnchor.protocol + "//" + urlAnchor.host;
                        } catch ( e ) {

                            // If there is an error parsing the URL, assume it is crossDomain,
                            // it can be rejected by the transport if it is invalid
                            s.crossDomain = true;
                        }
                    }

                    // Convert data if not already a string
                    if ( s.data && s.processData && typeof s.data !== "string" ) {
                        s.data = jQuery.param( s.data, s.traditional );
                    }

                    // Apply prefilters
                    inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

                    // If request was aborted inside a prefilter, stop there
                    if ( completed ) {
                        return jqXHR;
                    }

                    // We can fire global events as of now if asked to
                    // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
                    fireGlobals = jQuery.event && s.global;

                    // Watch for a new set of requests
                    if ( fireGlobals && jQuery.active++ === 0 ) {
                        jQuery.event.trigger( "ajaxStart" );
                    }

                    // Uppercase the type
                    s.type = s.type.toUpperCase();

                    // Determine if request has content
                    s.hasContent = !rnoContent.test( s.type );

                    // Save the URL in case we're toying with the If-Modified-Since
                    // and/or If-None-Match header later on
                    // Remove hash to simplify url manipulation
                    cacheURL = s.url.replace( rhash, "" );

                    // More options handling for requests with no content
                    if ( !s.hasContent ) {

                        // Remember the hash so we can put it back
                        uncached = s.url.slice( cacheURL.length );

                        // If data is available and should be processed, append data to url
                        if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
                            cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

                            // #9682: remove data so that it's not used in an eventual retry
                            delete s.data;
                        }

                        // Add or update anti-cache param if needed
                        if ( s.cache === false ) {
                            cacheURL = cacheURL.replace( rantiCache, "$1" );
                            uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
                        }

                        // Put hash and anti-cache on the URL that will be requested (gh-1732)
                        s.url = cacheURL + uncached;

                        // Change '%20' to '+' if this is encoded form body content (gh-2658)
                    } else if ( s.data && s.processData &&
                        ( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
                        s.data = s.data.replace( r20, "+" );
                    }

                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                    if ( s.ifModified ) {
                        if ( jQuery.lastModified[ cacheURL ] ) {
                            jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
                        }
                        if ( jQuery.etag[ cacheURL ] ) {
                            jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
                        }
                    }

                    // Set the correct header, if data is being sent
                    if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
                        jqXHR.setRequestHeader( "Content-Type", s.contentType );
                    }

                    // Set the Accepts header for the server, depending on the dataType
                    jqXHR.setRequestHeader(
                        "Accept",
                        s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
                            s.accepts[ s.dataTypes[ 0 ] ] +
                            ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
                            s.accepts[ "*" ]
                    );

                    // Check for headers option
                    for ( i in s.headers ) {
                        jqXHR.setRequestHeader( i, s.headers[ i ] );
                    }

                    // Allow custom headers/mimetypes and early abort
                    if ( s.beforeSend &&
                        ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

                        // Abort if not done already and return
                        return jqXHR.abort();
                    }

                    // Aborting is no longer a cancellation
                    strAbort = "abort";

                    // Install callbacks on deferreds
                    completeDeferred.add( s.complete );
                    jqXHR.done( s.success );
                    jqXHR.fail( s.error );

                    // Get transport
                    transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

                    // If no transport, we auto-abort
                    if ( !transport ) {
                        done( -1, "No Transport" );
                    } else {
                        jqXHR.readyState = 1;

                        // Send global event
                        if ( fireGlobals ) {
                            globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
                        }

                        // If request was aborted inside ajaxSend, stop there
                        if ( completed ) {
                            return jqXHR;
                        }

                        // Timeout
                        if ( s.async && s.timeout > 0 ) {
                            timeoutTimer = window.setTimeout( function() {
                                jqXHR.abort( "timeout" );
                            }, s.timeout );
                        }

                        try {
                            completed = false;
                            transport.send( requestHeaders, done );
                        } catch ( e ) {

                            // Rethrow post-completion exceptions
                            if ( completed ) {
                                throw e;
                            }

                            // Propagate others as results
                            done( -1, e );
                        }
                    }

                    // Callback for when everything is done
                    function done( status, nativeStatusText, responses, headers ) {
                        var isSuccess, success, error, response, modified,
                            statusText = nativeStatusText;

                        // Ignore repeat invocations
                        if ( completed ) {
                            return;
                        }

                        completed = true;

                        // Clear timeout if it exists
                        if ( timeoutTimer ) {
                            window.clearTimeout( timeoutTimer );
                        }

                        // Dereference transport for early garbage collection
                        // (no matter how long the jqXHR object will be used)
                        transport = undefined;

                        // Cache response headers
                        responseHeadersString = headers || "";

                        // Set readyState
                        jqXHR.readyState = status > 0 ? 4 : 0;

                        // Determine if successful
                        isSuccess = status >= 200 && status < 300 || status === 304;

                        // Get response data
                        if ( responses ) {
                            response = ajaxHandleResponses( s, jqXHR, responses );
                        }

                        // Convert no matter what (that way responseXXX fields are always set)
                        response = ajaxConvert( s, response, jqXHR, isSuccess );

                        // If successful, handle type chaining
                        if ( isSuccess ) {

                            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                            if ( s.ifModified ) {
                                modified = jqXHR.getResponseHeader( "Last-Modified" );
                                if ( modified ) {
                                    jQuery.lastModified[ cacheURL ] = modified;
                                }
                                modified = jqXHR.getResponseHeader( "etag" );
                                if ( modified ) {
                                    jQuery.etag[ cacheURL ] = modified;
                                }
                            }

                            // if no content
                            if ( status === 204 || s.type === "HEAD" ) {
                                statusText = "nocontent";

                                // if not modified
                            } else if ( status === 304 ) {
                                statusText = "notmodified";

                                // If we have data, let's convert it
                            } else {
                                statusText = response.state;
                                success = response.data;
                                error = response.error;
                                isSuccess = !error;
                            }
                        } else {

                            // Extract error from statusText and normalize for non-aborts
                            error = statusText;
                            if ( status || !statusText ) {
                                statusText = "error";
                                if ( status < 0 ) {
                                    status = 0;
                                }
                            }
                        }

                        // Set data for the fake xhr object
                        jqXHR.status = status;
                        jqXHR.statusText = ( nativeStatusText || statusText ) + "";

                        // Success/Error
                        if ( isSuccess ) {
                            deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
                        } else {
                            deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
                        }

                        // Status-dependent callbacks
                        jqXHR.statusCode( statusCode );
                        statusCode = undefined;

                        if ( fireGlobals ) {
                            globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
                                [ jqXHR, s, isSuccess ? success : error ] );
                        }

                        // Complete
                        completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

                        if ( fireGlobals ) {
                            globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

                            // Handle the global AJAX counter
                            if ( !( --jQuery.active ) ) {
                                jQuery.event.trigger( "ajaxStop" );
                            }
                        }
                    }

                    return jqXHR;
                },

                getJSON: function( url, data, callback ) {
                    return jQuery.get( url, data, callback, "json" );
                },

                getScript: function( url, callback ) {
                    return jQuery.get( url, undefined, callback, "script" );
                }
            } );

            jQuery.each( [ "get", "post" ], function( i, method ) {
                jQuery[ method ] = function( url, data, callback, type ) {

                    // Shift arguments if data argument was omitted
                    if ( isFunction( data ) ) {
                        type = type || callback;
                        callback = data;
                        data = undefined;
                    }

                    // The url can be an options object (which then must have .url)
                    return jQuery.ajax( jQuery.extend( {
                        url: url,
                        type: method,
                        dataType: type,
                        data: data,
                        success: callback
                    }, jQuery.isPlainObject( url ) && url ) );
                };
            } );


            jQuery._evalUrl = function( url ) {
                return jQuery.ajax( {
                    url: url,

                    // Make this explicit, since user can override this through ajaxSetup (#11264)
                    type: "GET",
                    dataType: "script",
                    cache: true,
                    async: false,
                    global: false,
                    "throws": true
                } );
            };


            jQuery.fn.extend( {
                wrapAll: function( html ) {
                    var wrap;

                    if ( this[ 0 ] ) {
                        if ( isFunction( html ) ) {
                            html = html.call( this[ 0 ] );
                        }

                        // The elements to wrap the target around
                        wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

                        if ( this[ 0 ].parentNode ) {
                            wrap.insertBefore( this[ 0 ] );
                        }

                        wrap.map( function() {
                            var elem = this;

                            while ( elem.firstElementChild ) {
                                elem = elem.firstElementChild;
                            }

                            return elem;
                        } ).append( this );
                    }

                    return this;
                },

                wrapInner: function( html ) {
                    if ( isFunction( html ) ) {
                        return this.each( function( i ) {
                            jQuery( this ).wrapInner( html.call( this, i ) );
                        } );
                    }

                    return this.each( function() {
                        var self = jQuery( this ),
                            contents = self.contents();

                        if ( contents.length ) {
                            contents.wrapAll( html );

                        } else {
                            self.append( html );
                        }
                    } );
                },

                wrap: function( html ) {
                    var htmlIsFunction = isFunction( html );

                    return this.each( function( i ) {
                        jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
                    } );
                },

                unwrap: function( selector ) {
                    this.parent( selector ).not( "body" ).each( function() {
                        jQuery( this ).replaceWith( this.childNodes );
                    } );
                    return this;
                }
            } );


            jQuery.expr.pseudos.hidden = function( elem ) {
                return !jQuery.expr.pseudos.visible( elem );
            };
            jQuery.expr.pseudos.visible = function( elem ) {
                return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
            };




            jQuery.ajaxSettings.xhr = function() {
                try {
                    return new window.XMLHttpRequest();
                } catch ( e ) {}
            };

            var xhrSuccessStatus = {

                    // File protocol always yields status code 0, assume 200
                    0: 200,

                    // Support: IE <=9 only
                    // #1450: sometimes IE returns 1223 when it should be 204
                    1223: 204
                },
                xhrSupported = jQuery.ajaxSettings.xhr();

            support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
            support.ajax = xhrSupported = !!xhrSupported;

            jQuery.ajaxTransport( function( options ) {
                var callback, errorCallback;

                // Cross domain only allowed if supported through XMLHttpRequest
                if ( support.cors || xhrSupported && !options.crossDomain ) {
                    return {
                        send: function( headers, complete ) {
                            var i,
                                xhr = options.xhr();

                            xhr.open(
                                options.type,
                                options.url,
                                options.async,
                                options.username,
                                options.password
                            );

                            // Apply custom fields if provided
                            if ( options.xhrFields ) {
                                for ( i in options.xhrFields ) {
                                    xhr[ i ] = options.xhrFields[ i ];
                                }
                            }

                            // Override mime type if needed
                            if ( options.mimeType && xhr.overrideMimeType ) {
                                xhr.overrideMimeType( options.mimeType );
                            }

                            // X-Requested-With header
                            // For cross-domain requests, seeing as conditions for a preflight are
                            // akin to a jigsaw puzzle, we simply never set it to be sure.
                            // (it can always be set on a per-request basis or even using ajaxSetup)
                            // For same-domain requests, won't change header if already provided.
                            if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
                                headers[ "X-Requested-With" ] = "XMLHttpRequest";
                            }

                            // Set headers
                            for ( i in headers ) {
                                xhr.setRequestHeader( i, headers[ i ] );
                            }

                            // Callback
                            callback = function( type ) {
                                return function() {
                                    if ( callback ) {
                                        callback = errorCallback = xhr.onload =
                                            xhr.onerror = xhr.onabort = xhr.ontimeout =
                                                xhr.onreadystatechange = null;

                                        if ( type === "abort" ) {
                                            xhr.abort();
                                        } else if ( type === "error" ) {

                                            // Support: IE <=9 only
                                            // On a manual native abort, IE9 throws
                                            // errors on any property access that is not readyState
                                            if ( typeof xhr.status !== "number" ) {
                                                complete( 0, "error" );
                                            } else {
                                                complete(

                                                    // File: protocol always yields status 0; see #8605, #14207
                                                    xhr.status,
                                                    xhr.statusText
                                                );
                                            }
                                        } else {
                                            complete(
                                                xhrSuccessStatus[ xhr.status ] || xhr.status,
                                                xhr.statusText,

                                                // Support: IE <=9 only
                                                // IE9 has no XHR2 but throws on binary (trac-11426)
                                                // For XHR2 non-text, let the caller handle it (gh-2498)
                                                ( xhr.responseType || "text" ) !== "text"  ||
                                                typeof xhr.responseText !== "string" ?
                                                    { binary: xhr.response } :
                                                    { text: xhr.responseText },
                                                xhr.getAllResponseHeaders()
                                            );
                                        }
                                    }
                                };
                            };

                            // Listen to events
                            xhr.onload = callback();
                            errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

                            // Support: IE 9 only
                            // Use onreadystatechange to replace onabort
                            // to handle uncaught aborts
                            if ( xhr.onabort !== undefined ) {
                                xhr.onabort = errorCallback;
                            } else {
                                xhr.onreadystatechange = function() {

                                    // Check readyState before timeout as it changes
                                    if ( xhr.readyState === 4 ) {

                                        // Allow onerror to be called first,
                                        // but that will not handle a native abort
                                        // Also, save errorCallback to a variable
                                        // as xhr.onerror cannot be accessed
                                        window.setTimeout( function() {
                                            if ( callback ) {
                                                errorCallback();
                                            }
                                        } );
                                    }
                                };
                            }

                            // Create the abort callback
                            callback = callback( "abort" );

                            try {

                                // Do send the request (this may raise an exception)
                                xhr.send( options.hasContent && options.data || null );
                            } catch ( e ) {

                                // #14683: Only rethrow if this hasn't been notified as an error yet
                                if ( callback ) {
                                    throw e;
                                }
                            }
                        },

                        abort: function() {
                            if ( callback ) {
                                callback();
                            }
                        }
                    };
                }
            } );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
            jQuery.ajaxPrefilter( function( s ) {
                if ( s.crossDomain ) {
                    s.contents.script = false;
                }
            } );

// Install script dataType
            jQuery.ajaxSetup( {
                accepts: {
                    script: "text/javascript, application/javascript, " +
                        "application/ecmascript, application/x-ecmascript"
                },
                contents: {
                    script: /\b(?:java|ecma)script\b/
                },
                converters: {
                    "text script": function( text ) {
                        jQuery.globalEval( text );
                        return text;
                    }
                }
            } );

// Handle cache's special case and crossDomain
            jQuery.ajaxPrefilter( "script", function( s ) {
                if ( s.cache === undefined ) {
                    s.cache = false;
                }
                if ( s.crossDomain ) {
                    s.type = "GET";
                }
            } );

// Bind script tag hack transport
            jQuery.ajaxTransport( "script", function( s ) {

                // This transport only deals with cross domain requests
                if ( s.crossDomain ) {
                    var script, callback;
                    return {
                        send: function( _, complete ) {
                            script = jQuery( "<script>" ).prop( {
                                charset: s.scriptCharset,
                                src: s.url
                            } ).on(
                                "load error",
                                callback = function( evt ) {
                                    script.remove();
                                    callback = null;
                                    if ( evt ) {
                                        complete( evt.type === "error" ? 404 : 200, evt.type );
                                    }
                                }
                            );

                            // Use native DOM manipulation to avoid our domManip AJAX trickery
                            document.head.appendChild( script[ 0 ] );
                        },
                        abort: function() {
                            if ( callback ) {
                                callback();
                            }
                        }
                    };
                }
            } );




            var oldCallbacks = [],
                rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
            jQuery.ajaxSetup( {
                jsonp: "callback",
                jsonpCallback: function() {
                    var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
                    this[ callback ] = true;
                    return callback;
                }
            } );

// Detect, normalize options and install callbacks for jsonp requests
            jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

                var callbackName, overwritten, responseContainer,
                    jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
                            "url" :
                            typeof s.data === "string" &&
                            ( s.contentType || "" )
                                .indexOf( "application/x-www-form-urlencoded" ) === 0 &&
                            rjsonp.test( s.data ) && "data"
                    );

                // Handle iff the expected data type is "jsonp" or we have a parameter to set
                if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

                    // Get callback name, remembering preexisting value associated with it
                    callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
                        s.jsonpCallback() :
                        s.jsonpCallback;

                    // Insert callback into url or form data
                    if ( jsonProp ) {
                        s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
                    } else if ( s.jsonp !== false ) {
                        s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
                    }

                    // Use data converter to retrieve json after script execution
                    s.converters[ "script json" ] = function() {
                        if ( !responseContainer ) {
                            jQuery.error( callbackName + " was not called" );
                        }
                        return responseContainer[ 0 ];
                    };

                    // Force json dataType
                    s.dataTypes[ 0 ] = "json";

                    // Install callback
                    overwritten = window[ callbackName ];
                    window[ callbackName ] = function() {
                        responseContainer = arguments;
                    };

                    // Clean-up function (fires after converters)
                    jqXHR.always( function() {

                        // If previous value didn't exist - remove it
                        if ( overwritten === undefined ) {
                            jQuery( window ).removeProp( callbackName );

                            // Otherwise restore preexisting value
                        } else {
                            window[ callbackName ] = overwritten;
                        }

                        // Save back as free
                        if ( s[ callbackName ] ) {

                            // Make sure that re-using the options doesn't screw things around
                            s.jsonpCallback = originalSettings.jsonpCallback;

                            // Save the callback name for future use
                            oldCallbacks.push( callbackName );
                        }

                        // Call if it was a function and we have a response
                        if ( responseContainer && isFunction( overwritten ) ) {
                            overwritten( responseContainer[ 0 ] );
                        }

                        responseContainer = overwritten = undefined;
                    } );

                    // Delegate to script
                    return "script";
                }
            } );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
            support.createHTMLDocument = ( function() {
                var body = document.implementation.createHTMLDocument( "" ).body;
                body.innerHTML = "<form></form><form></form>";
                return body.childNodes.length === 2;
            } )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
            jQuery.parseHTML = function( data, context, keepScripts ) {
                if ( typeof data !== "string" ) {
                    return [];
                }
                if ( typeof context === "boolean" ) {
                    keepScripts = context;
                    context = false;
                }

                var base, parsed, scripts;

                if ( !context ) {

                    // Stop scripts or inline event handlers from being executed immediately
                    // by using document.implementation
                    if ( support.createHTMLDocument ) {
                        context = document.implementation.createHTMLDocument( "" );

                        // Set the base href for the created document
                        // so any parsed elements with URLs
                        // are based on the document's URL (gh-2965)
                        base = context.createElement( "base" );
                        base.href = document.location.href;
                        context.head.appendChild( base );
                    } else {
                        context = document;
                    }
                }

                parsed = rsingleTag.exec( data );
                scripts = !keepScripts && [];

                // Single tag
                if ( parsed ) {
                    return [ context.createElement( parsed[ 1 ] ) ];
                }

                parsed = buildFragment( [ data ], context, scripts );

                if ( scripts && scripts.length ) {
                    jQuery( scripts ).remove();
                }

                return jQuery.merge( [], parsed.childNodes );
            };


            /**
             * Load a url into a page
             */
            jQuery.fn.load = function( url, params, callback ) {
                var selector, type, response,
                    self = this,
                    off = url.indexOf( " " );

                if ( off > -1 ) {
                    selector = stripAndCollapse( url.slice( off ) );
                    url = url.slice( 0, off );
                }

                // If it's a function
                if ( isFunction( params ) ) {

                    // We assume that it's the callback
                    callback = params;
                    params = undefined;

                    // Otherwise, build a param string
                } else if ( params && typeof params === "object" ) {
                    type = "POST";
                }

                // If we have elements to modify, make the request
                if ( self.length > 0 ) {
                    jQuery.ajax( {
                        url: url,

                        // If "type" variable is undefined, then "GET" method will be used.
                        // Make value of this field explicit since
                        // user can override it through ajaxSetup method
                        type: type || "GET",
                        dataType: "html",
                        data: params
                    } ).done( function( responseText ) {

                        // Save response for use in complete callback
                        response = arguments;

                        self.html( selector ?

                            // If a selector was specified, locate the right elements in a dummy div
                            // Exclude scripts to avoid IE 'Permission Denied' errors
                            jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

                            // Otherwise use the full result
                            responseText );

                        // If the request succeeds, this function gets "data", "status", "jqXHR"
                        // but they are ignored because response was set above.
                        // If it fails, this function gets "jqXHR", "status", "error"
                    } ).always( callback && function( jqXHR, status ) {
                        self.each( function() {
                            callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
                        } );
                    } );
                }

                return this;
            };




// Attach a bunch of functions for handling common AJAX events
            jQuery.each( [
                "ajaxStart",
                "ajaxStop",
                "ajaxComplete",
                "ajaxError",
                "ajaxSuccess",
                "ajaxSend"
            ], function( i, type ) {
                jQuery.fn[ type ] = function( fn ) {
                    return this.on( type, fn );
                };
            } );




            jQuery.expr.pseudos.animated = function( elem ) {
                return jQuery.grep( jQuery.timers, function( fn ) {
                    return elem === fn.elem;
                } ).length;
            };




            jQuery.offset = {
                setOffset: function( elem, options, i ) {
                    var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
                        position = jQuery.css( elem, "position" ),
                        curElem = jQuery( elem ),
                        props = {};

                    // Set position first, in-case top/left are set even on static elem
                    if ( position === "static" ) {
                        elem.style.position = "relative";
                    }

                    curOffset = curElem.offset();
                    curCSSTop = jQuery.css( elem, "top" );
                    curCSSLeft = jQuery.css( elem, "left" );
                    calculatePosition = ( position === "absolute" || position === "fixed" ) &&
                        ( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

                    // Need to be able to calculate position if either
                    // top or left is auto and position is either absolute or fixed
                    if ( calculatePosition ) {
                        curPosition = curElem.position();
                        curTop = curPosition.top;
                        curLeft = curPosition.left;

                    } else {
                        curTop = parseFloat( curCSSTop ) || 0;
                        curLeft = parseFloat( curCSSLeft ) || 0;
                    }

                    if ( isFunction( options ) ) {

                        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
                        options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
                    }

                    if ( options.top != null ) {
                        props.top = ( options.top - curOffset.top ) + curTop;
                    }
                    if ( options.left != null ) {
                        props.left = ( options.left - curOffset.left ) + curLeft;
                    }

                    if ( "using" in options ) {
                        options.using.call( elem, props );

                    } else {
                        curElem.css( props );
                    }
                }
            };

            jQuery.fn.extend( {

                // offset() relates an element's border box to the document origin
                offset: function( options ) {

                    // Preserve chaining for setter
                    if ( arguments.length ) {
                        return options === undefined ?
                            this :
                            this.each( function( i ) {
                                jQuery.offset.setOffset( this, options, i );
                            } );
                    }

                    var rect, win,
                        elem = this[ 0 ];

                    if ( !elem ) {
                        return;
                    }

                    // Return zeros for disconnected and hidden (display: none) elements (gh-2310)
                    // Support: IE <=11 only
                    // Running getBoundingClientRect on a
                    // disconnected node in IE throws an error
                    if ( !elem.getClientRects().length ) {
                        return { top: 0, left: 0 };
                    }

                    // Get document-relative position by adding viewport scroll to viewport-relative gBCR
                    rect = elem.getBoundingClientRect();
                    win = elem.ownerDocument.defaultView;
                    return {
                        top: rect.top + win.pageYOffset,
                        left: rect.left + win.pageXOffset
                    };
                },

                // position() relates an element's margin box to its offset parent's padding box
                // This corresponds to the behavior of CSS absolute positioning
                position: function() {
                    if ( !this[ 0 ] ) {
                        return;
                    }

                    var offsetParent, offset, doc,
                        elem = this[ 0 ],
                        parentOffset = { top: 0, left: 0 };

                    // position:fixed elements are offset from the viewport, which itself always has zero offset
                    if ( jQuery.css( elem, "position" ) === "fixed" ) {

                        // Assume position:fixed implies availability of getBoundingClientRect
                        offset = elem.getBoundingClientRect();

                    } else {
                        offset = this.offset();

                        // Account for the *real* offset parent, which can be the document or its root element
                        // when a statically positioned element is identified
                        doc = elem.ownerDocument;
                        offsetParent = elem.offsetParent || doc.documentElement;
                        while ( offsetParent &&
                        ( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
                        jQuery.css( offsetParent, "position" ) === "static" ) {

                            offsetParent = offsetParent.parentNode;
                        }
                        if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

                            // Incorporate borders into its offset, since they are outside its content origin
                            parentOffset = jQuery( offsetParent ).offset();
                            parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
                            parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
                        }
                    }

                    // Subtract parent offsets and element margins
                    return {
                        top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
                        left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
                    };
                },

                // This method will return documentElement in the following cases:
                // 1) For the element inside the iframe without offsetParent, this method will return
                //    documentElement of the parent window
                // 2) For the hidden or detached element
                // 3) For body or html element, i.e. in case of the html node - it will return itself
                //
                // but those exceptions were never presented as a real life use-cases
                // and might be considered as more preferable results.
                //
                // This logic, however, is not guaranteed and can change at any point in the future
                offsetParent: function() {
                    return this.map( function() {
                        var offsetParent = this.offsetParent;

                        while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
                            offsetParent = offsetParent.offsetParent;
                        }

                        return offsetParent || documentElement;
                    } );
                }
            } );

// Create scrollLeft and scrollTop methods
            jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
                var top = "pageYOffset" === prop;

                jQuery.fn[ method ] = function( val ) {
                    return access( this, function( elem, method, val ) {

                        // Coalesce documents and windows
                        var win;
                        if ( isWindow( elem ) ) {
                            win = elem;
                        } else if ( elem.nodeType === 9 ) {
                            win = elem.defaultView;
                        }

                        if ( val === undefined ) {
                            return win ? win[ prop ] : elem[ method ];
                        }

                        if ( win ) {
                            win.scrollTo(
                                !top ? val : win.pageXOffset,
                                top ? val : win.pageYOffset
                            );

                        } else {
                            elem[ method ] = val;
                        }
                    }, method, val, arguments.length );
                };
            } );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
            jQuery.each( [ "top", "left" ], function( i, prop ) {
                jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
                    function( elem, computed ) {
                        if ( computed ) {
                            computed = curCSS( elem, prop );

                            // If curCSS returns percentage, fallback to offset
                            return rnumnonpx.test( computed ) ?
                                jQuery( elem ).position()[ prop ] + "px" :
                                computed;
                        }
                    }
                );
            } );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
            jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
                jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
                    function( defaultExtra, funcName ) {

                        // Margin is only for outerHeight, outerWidth
                        jQuery.fn[ funcName ] = function( margin, value ) {
                            var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
                                extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

                            return access( this, function( elem, type, value ) {
                                var doc;

                                if ( isWindow( elem ) ) {

                                    // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
                                    return funcName.indexOf( "outer" ) === 0 ?
                                        elem[ "inner" + name ] :
                                        elem.document.documentElement[ "client" + name ];
                                }

                                // Get document width or height
                                if ( elem.nodeType === 9 ) {
                                    doc = elem.documentElement;

                                    // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
                                    // whichever is greatest
                                    return Math.max(
                                        elem.body[ "scroll" + name ], doc[ "scroll" + name ],
                                        elem.body[ "offset" + name ], doc[ "offset" + name ],
                                        doc[ "client" + name ]
                                    );
                                }

                                return value === undefined ?

                                    // Get width or height on the element, requesting but not forcing parseFloat
                                    jQuery.css( elem, type, extra ) :

                                    // Set width or height on the element
                                    jQuery.style( elem, type, value, extra );
                            }, type, chainable ? margin : undefined, chainable );
                        };
                    } );
            } );


            jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
                "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
                "change select submit keydown keypress keyup contextmenu" ).split( " " ),
                function( i, name ) {

                    // Handle event binding
                    jQuery.fn[ name ] = function( data, fn ) {
                        return arguments.length > 0 ?
                            this.on( name, null, data, fn ) :
                            this.trigger( name );
                    };
                } );

            jQuery.fn.extend( {
                hover: function( fnOver, fnOut ) {
                    return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
                }
            } );




            jQuery.fn.extend( {

                bind: function( types, data, fn ) {
                    return this.on( types, null, data, fn );
                },
                unbind: function( types, fn ) {
                    return this.off( types, null, fn );
                },

                delegate: function( selector, types, data, fn ) {
                    return this.on( types, selector, data, fn );
                },
                undelegate: function( selector, types, fn ) {

                    // ( namespace ) or ( selector, types [, fn] )
                    return arguments.length === 1 ?
                        this.off( selector, "**" ) :
                        this.off( types, selector || "**", fn );
                }
            } );

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
            jQuery.proxy = function( fn, context ) {
                var tmp, args, proxy;

                if ( typeof context === "string" ) {
                    tmp = fn[ context ];
                    context = fn;
                    fn = tmp;
                }

                // Quick check to determine if target is callable, in the spec
                // this throws a TypeError, but we will just return undefined.
                if ( !isFunction( fn ) ) {
                    return undefined;
                }

                // Simulated bind
                args = slice.call( arguments, 2 );
                proxy = function() {
                    return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
                };

                // Set the guid of unique handler to the same of original handler, so it can be removed
                proxy.guid = fn.guid = fn.guid || jQuery.guid++;

                return proxy;
            };

            jQuery.holdReady = function( hold ) {
                if ( hold ) {
                    jQuery.readyWait++;
                } else {
                    jQuery.ready( true );
                }
            };
            jQuery.isArray = Array.isArray;
            jQuery.parseJSON = JSON.parse;
            jQuery.nodeName = nodeName;
            jQuery.isFunction = isFunction;
            jQuery.isWindow = isWindow;
            jQuery.camelCase = camelCase;
            jQuery.type = toType;

            jQuery.now = Date.now;

            jQuery.isNumeric = function( obj ) {

                // As of jQuery 3.0, isNumeric is limited to
                // strings and numbers (primitives or objects)
                // that can be coerced to finite numbers (gh-2662)
                var type = jQuery.type( obj );
                return ( type === "number" || type === "string" ) &&

                    // parseFloat NaNs numeric-cast false positives ("")
                    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
                    // subtraction forces infinities to NaN
                    !isNaN( obj - parseFloat( obj ) );
            };




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

            if ( true ) {
                !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
                    return jQuery;
                }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
                __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            }




            var

                // Map over jQuery in case of overwrite
                _jQuery = window.jQuery,

                // Map over the $ in case of overwrite
                _$ = window.$;

            jQuery.noConflict = function( deep ) {
                if ( window.$ === jQuery ) {
                    window.$ = _$;
                }

                if ( deep && window.jQuery === jQuery ) {
                    window.jQuery = _jQuery;
                }

                return jQuery;
            };

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
            if ( !noGlobal ) {
                window.jQuery = window.$ = jQuery;
            }




            return jQuery;
        } );


        /***/ }),

    /***/ "./node_modules/loglevel/lib/loglevel.js":
    /*!***********************************************!*\
  !*** ./node_modules/loglevel/lib/loglevel.js ***!
  \***********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
* loglevel - https://github.com/pimterry/loglevel
*
* Copyright (c) 2013 Tim Perry
* Licensed under the MIT license.
*/
        (function (root, definition) {
            "use strict";
            if (true) {
                !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),
                    __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
                        (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
                        __WEBPACK_AMD_DEFINE_FACTORY__),
                __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            } else {}
        }(this, function () {
            "use strict";

            // Slightly dubious tricks to cut down minimized file size
            var noop = function() {};
            var undefinedType = "undefined";

            var logMethods = [
                "trace",
                "debug",
                "info",
                "warn",
                "error"
            ];

            // Cross-browser bind equivalent that works at least back to IE6
            function bindMethod(obj, methodName) {
                var method = obj[methodName];
                if (typeof method.bind === 'function') {
                    return method.bind(obj);
                } else {
                    try {
                        return Function.prototype.bind.call(method, obj);
                    } catch (e) {
                        // Missing bind shim or IE8 + Modernizr, fallback to wrapping
                        return function() {
                            return Function.prototype.apply.apply(method, [obj, arguments]);
                        };
                    }
                }
            }

            // Build the best logging method possible for this env
            // Wherever possible we want to bind, not wrap, to preserve stack traces
            function realMethod(methodName) {
                if (methodName === 'debug') {
                    methodName = 'log';
                }

                if (typeof console === undefinedType) {
                    return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives
                } else if (console[methodName] !== undefined) {
                    return bindMethod(console, methodName);
                } else if (console.log !== undefined) {
                    return bindMethod(console, 'log');
                } else {
                    return noop;
                }
            }

            // These private functions always need `this` to be set properly

            function replaceLoggingMethods(level, loggerName) {
                /*jshint validthis:true */
                for (var i = 0; i < logMethods.length; i++) {
                    var methodName = logMethods[i];
                    this[methodName] = (i < level) ?
                        noop :
                        this.methodFactory(methodName, level, loggerName);
                }

                // Define log.log as an alias for log.debug
                this.log = this.debug;
            }

            // In old IE versions, the console isn't present until you first open it.
            // We build realMethod() replacements here that regenerate logging methods
            function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {
                return function () {
                    if (typeof console !== undefinedType) {
                        replaceLoggingMethods.call(this, level, loggerName);
                        this[methodName].apply(this, arguments);
                    }
                };
            }

            // By default, we use closely bound real methods wherever possible, and
            // otherwise we wait for a console to appear, and then try again.
            function defaultMethodFactory(methodName, level, loggerName) {
                /*jshint validthis:true */
                return realMethod(methodName) ||
                    enableLoggingWhenConsoleArrives.apply(this, arguments);
            }

            function Logger(name, defaultLevel, factory) {
                var self = this;
                var currentLevel;
                var storageKey = "loglevel";
                if (name) {
                    storageKey += ":" + name;
                }

                function persistLevelIfPossible(levelNum) {
                    var levelName = (logMethods[levelNum] || 'silent').toUpperCase();

                    if (typeof window === undefinedType) return;

                    // Use localStorage if available
                    try {
                        window.localStorage[storageKey] = levelName;
                        return;
                    } catch (ignore) {}

                    // Use session cookie as fallback
                    try {
                        window.document.cookie =
                            encodeURIComponent(storageKey) + "=" + levelName + ";";
                    } catch (ignore) {}
                }

                function getPersistedLevel() {
                    var storedLevel;

                    if (typeof window === undefinedType) return;

                    try {
                        storedLevel = window.localStorage[storageKey];
                    } catch (ignore) {}

                    // Fallback to cookies if local storage gives us nothing
                    if (typeof storedLevel === undefinedType) {
                        try {
                            var cookie = window.document.cookie;
                            var location = cookie.indexOf(
                                encodeURIComponent(storageKey) + "=");
                            if (location !== -1) {
                                storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];
                            }
                        } catch (ignore) {}
                    }

                    // If the stored level is not valid, treat it as if nothing was stored.
                    if (self.levels[storedLevel] === undefined) {
                        storedLevel = undefined;
                    }

                    return storedLevel;
                }

                /*
       *
       * Public logger API - see https://github.com/pimterry/loglevel for details
       *
       */

                self.name = name;

                self.levels = { "TRACE": 0, "DEBUG": 1, "INFO": 2, "WARN": 3,
                    "ERROR": 4, "SILENT": 5};

                self.methodFactory = factory || defaultMethodFactory;

                self.getLevel = function () {
                    return currentLevel;
                };

                self.setLevel = function (level, persist) {
                    if (typeof level === "string" && self.levels[level.toUpperCase()] !== undefined) {
                        level = self.levels[level.toUpperCase()];
                    }
                    if (typeof level === "number" && level >= 0 && level <= self.levels.SILENT) {
                        currentLevel = level;
                        if (persist !== false) {  // defaults to true
                            persistLevelIfPossible(level);
                        }
                        replaceLoggingMethods.call(self, level, name);
                        if (typeof console === undefinedType && level < self.levels.SILENT) {
                            return "No console available for logging";
                        }
                    } else {
                        throw "log.setLevel() called with invalid level: " + level;
                    }
                };

                self.setDefaultLevel = function (level) {
                    if (!getPersistedLevel()) {
                        self.setLevel(level, false);
                    }
                };

                self.enableAll = function(persist) {
                    self.setLevel(self.levels.TRACE, persist);
                };

                self.disableAll = function(persist) {
                    self.setLevel(self.levels.SILENT, persist);
                };

                // Initialize with the right level
                var initialLevel = getPersistedLevel();
                if (initialLevel == null) {
                    initialLevel = defaultLevel == null ? "WARN" : defaultLevel;
                }
                self.setLevel(initialLevel, false);
            }

            /*
     *
     * Top-level API
     *
     */

            var defaultLogger = new Logger();

            var _loggersByName = {};
            defaultLogger.getLogger = function getLogger(name) {
                if (typeof name !== "string" || name === "") {
                    throw new TypeError("You must supply a name when creating a logger.");
                }

                var logger = _loggersByName[name];
                if (!logger) {
                    logger = _loggersByName[name] = new Logger(
                        name, defaultLogger.getLevel(), defaultLogger.methodFactory);
                }
                return logger;
            };

            // Grab the current global log variable in case of overwrite
            var _log = (typeof window !== undefinedType) ? window.log : undefined;
            defaultLogger.noConflict = function() {
                if (typeof window !== undefinedType &&
                    window.log === defaultLogger) {
                    window.log = _log;
                }

                return defaultLogger;
            };

            defaultLogger.getLoggers = function getLoggers() {
                return _loggersByName;
            };

            return defaultLogger;
        }));


        /***/ }),

    /***/ "./node_modules/process/browser.js":
    /*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

// shim for using process in browser
        var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
            throw new Error('setTimeout has not been defined');
        }
        function defaultClearTimeout () {
            throw new Error('clearTimeout has not been defined');
        }
        (function () {
            try {
                if (typeof setTimeout === 'function') {
                    cachedSetTimeout = setTimeout;
                } else {
                    cachedSetTimeout = defaultSetTimout;
                }
            } catch (e) {
                cachedSetTimeout = defaultSetTimout;
            }
            try {
                if (typeof clearTimeout === 'function') {
                    cachedClearTimeout = clearTimeout;
                } else {
                    cachedClearTimeout = defaultClearTimeout;
                }
            } catch (e) {
                cachedClearTimeout = defaultClearTimeout;
            }
        } ())
        function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) {
                //normal enviroments in sane situations
                return setTimeout(fun, 0);
            }
            // if setTimeout wasn't available but was latter defined
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                cachedSetTimeout = setTimeout;
                return setTimeout(fun, 0);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedSetTimeout(fun, 0);
            } catch(e){
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                    return cachedSetTimeout.call(null, fun, 0);
                } catch(e){
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                    return cachedSetTimeout.call(this, fun, 0);
                }
            }


        }
        function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) {
                //normal enviroments in sane situations
                return clearTimeout(marker);
            }
            // if clearTimeout wasn't available but was latter defined
            if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                cachedClearTimeout = clearTimeout;
                return clearTimeout(marker);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedClearTimeout(marker);
            } catch (e){
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                    return cachedClearTimeout.call(null, marker);
                } catch (e){
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                    // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                    return cachedClearTimeout.call(this, marker);
                }
            }



        }
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
            if (!draining || !currentQueue) {
                return;
            }
            draining = false;
            if (currentQueue.length) {
                queue = currentQueue.concat(queue);
            } else {
                queueIndex = -1;
            }
            if (queue.length) {
                drainQueue();
            }
        }

        function drainQueue() {
            if (draining) {
                return;
            }
            var timeout = runTimeout(cleanUpNextTick);
            draining = true;

            var len = queue.length;
            while(len) {
                currentQueue = queue;
                queue = [];
                while (++queueIndex < len) {
                    if (currentQueue) {
                        currentQueue[queueIndex].run();
                    }
                }
                queueIndex = -1;
                len = queue.length;
            }
            currentQueue = null;
            draining = false;
            runClearTimeout(timeout);
        }

        process.nextTick = function (fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
                for (var i = 1; i < arguments.length; i++) {
                    args[i - 1] = arguments[i];
                }
            }
            queue.push(new Item(fun, args));
            if (queue.length === 1 && !draining) {
                runTimeout(drainQueue);
            }
        };

// v8 likes predictible objects
        function Item(fun, array) {
            this.fun = fun;
            this.array = array;
        }
        Item.prototype.run = function () {
            this.fun.apply(null, this.array);
        };
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = ''; // empty string to avoid regexp issues
        process.versions = {};

        function noop() {}

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function (name) { return [] }

        process.binding = function (name) {
            throw new Error('process.binding is not supported');
        };

        process.cwd = function () { return '/' };
        process.chdir = function (dir) {
            throw new Error('process.chdir is not supported');
        };
        process.umask = function() { return 0; };


        /***/ }),

    /***/ "./node_modules/punycode/punycode.js":
    /*!*******************************************!*\
  !*** ./node_modules/punycode/punycode.js ***!
  \*******************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
            ;(function(root) {

                /** Detect free variables */
                var freeExports =  true && exports &&
                    !exports.nodeType && exports;
                var freeModule =  true && module &&
                    !module.nodeType && module;
                var freeGlobal = typeof global == 'object' && global;
                if (
                    freeGlobal.global === freeGlobal ||
                    freeGlobal.window === freeGlobal ||
                    freeGlobal.self === freeGlobal
                ) {
                    root = freeGlobal;
                }

                /**
                 * The `punycode` object.
                 * @name punycode
                 * @type Object
                 */
                var punycode,

                    /** Highest positive signed 32-bit float value */
                    maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

                    /** Bootstring parameters */
                    base = 36,
                    tMin = 1,
                    tMax = 26,
                    skew = 38,
                    damp = 700,
                    initialBias = 72,
                    initialN = 128, // 0x80
                    delimiter = '-', // '\x2D'

                    /** Regular expressions */
                    regexPunycode = /^xn--/,
                    regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
                    regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

                    /** Error messages */
                    errors = {
                        'overflow': 'Overflow: input needs wider integers to process',
                        'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
                        'invalid-input': 'Invalid input'
                    },

                    /** Convenience shortcuts */
                    baseMinusTMin = base - tMin,
                    floor = Math.floor,
                    stringFromCharCode = String.fromCharCode,

                    /** Temporary variable */
                    key;

                /*--------------------------------------------------------------------------*/

                /**
                 * A generic error utility function.
                 * @private
                 * @param {String} type The error type.
                 * @returns {Error} Throws a `RangeError` with the applicable error message.
                 */
                function error(type) {
                    throw new RangeError(errors[type]);
                }

                /**
                 * A generic `Array#map` utility function.
                 * @private
                 * @param {Array} array The array to iterate over.
                 * @param {Function} callback The function that gets called for every array
                 * item.
                 * @returns {Array} A new array of values returned by the callback function.
                 */
                function map(array, fn) {
                    var length = array.length;
                    var result = [];
                    while (length--) {
                        result[length] = fn(array[length]);
                    }
                    return result;
                }

                /**
                 * A simple `Array#map`-like wrapper to work with domain name strings or email
                 * addresses.
                 * @private
                 * @param {String} domain The domain name or email address.
                 * @param {Function} callback The function that gets called for every
                 * character.
                 * @returns {Array} A new string of characters returned by the callback
                 * function.
                 */
                function mapDomain(string, fn) {
                    var parts = string.split('@');
                    var result = '';
                    if (parts.length > 1) {
                        // In email addresses, only the domain name should be punycoded. Leave
                        // the local part (i.e. everything up to `@`) intact.
                        result = parts[0] + '@';
                        string = parts[1];
                    }
                    // Avoid `split(regex)` for IE8 compatibility. See #17.
                    string = string.replace(regexSeparators, '\x2E');
                    var labels = string.split('.');
                    var encoded = map(labels, fn).join('.');
                    return result + encoded;
                }

                /**
                 * Creates an array containing the numeric code points of each Unicode
                 * character in the string. While JavaScript uses UCS-2 internally,
                 * this function will convert a pair of surrogate halves (each of which
                 * UCS-2 exposes as separate characters) into a single code point,
                 * matching UTF-16.
                 * @see `punycode.ucs2.encode`
                 * @see <https://mathiasbynens.be/notes/javascript-encoding>
                 * @memberOf punycode.ucs2
                 * @name decode
                 * @param {String} string The Unicode input string (UCS-2).
                 * @returns {Array} The new array of code points.
                 */
                function ucs2decode(string) {
                    var output = [],
                        counter = 0,
                        length = string.length,
                        value,
                        extra;
                    while (counter < length) {
                        value = string.charCodeAt(counter++);
                        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
                            // high surrogate, and there is a next character
                            extra = string.charCodeAt(counter++);
                            if ((extra & 0xFC00) == 0xDC00) { // low surrogate
                                output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
                            } else {
                                // unmatched surrogate; only append this code unit, in case the next
                                // code unit is the high surrogate of a surrogate pair
                                output.push(value);
                                counter--;
                            }
                        } else {
                            output.push(value);
                        }
                    }
                    return output;
                }

                /**
                 * Creates a string based on an array of numeric code points.
                 * @see `punycode.ucs2.decode`
                 * @memberOf punycode.ucs2
                 * @name encode
                 * @param {Array} codePoints The array of numeric code points.
                 * @returns {String} The new Unicode string (UCS-2).
                 */
                function ucs2encode(array) {
                    return map(array, function(value) {
                        var output = '';
                        if (value > 0xFFFF) {
                            value -= 0x10000;
                            output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
                            value = 0xDC00 | value & 0x3FF;
                        }
                        output += stringFromCharCode(value);
                        return output;
                    }).join('');
                }

                /**
                 * Converts a basic code point into a digit/integer.
                 * @see `digitToBasic()`
                 * @private
                 * @param {Number} codePoint The basic numeric code point value.
                 * @returns {Number} The numeric value of a basic code point (for use in
                 * representing integers) in the range `0` to `base - 1`, or `base` if
                 * the code point does not represent a value.
                 */
                function basicToDigit(codePoint) {
                    if (codePoint - 48 < 10) {
                        return codePoint - 22;
                    }
                    if (codePoint - 65 < 26) {
                        return codePoint - 65;
                    }
                    if (codePoint - 97 < 26) {
                        return codePoint - 97;
                    }
                    return base;
                }

                /**
                 * Converts a digit/integer into a basic code point.
                 * @see `basicToDigit()`
                 * @private
                 * @param {Number} digit The numeric value of a basic code point.
                 * @returns {Number} The basic code point whose value (when used for
                 * representing integers) is `digit`, which needs to be in the range
                 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
                 * used; else, the lowercase form is used. The behavior is undefined
                 * if `flag` is non-zero and `digit` has no uppercase form.
                 */
                function digitToBasic(digit, flag) {
                    //  0..25 map to ASCII a..z or A..Z
                    // 26..35 map to ASCII 0..9
                    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
                }

                /**
                 * Bias adaptation function as per section 3.4 of RFC 3492.
                 * https://tools.ietf.org/html/rfc3492#section-3.4
                 * @private
                 */
                function adapt(delta, numPoints, firstTime) {
                    var k = 0;
                    delta = firstTime ? floor(delta / damp) : delta >> 1;
                    delta += floor(delta / numPoints);
                    for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
                        delta = floor(delta / baseMinusTMin);
                    }
                    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
                }

                /**
                 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
                 * symbols.
                 * @memberOf punycode
                 * @param {String} input The Punycode string of ASCII-only symbols.
                 * @returns {String} The resulting string of Unicode symbols.
                 */
                function decode(input) {
                    // Don't use UCS-2
                    var output = [],
                        inputLength = input.length,
                        out,
                        i = 0,
                        n = initialN,
                        bias = initialBias,
                        basic,
                        j,
                        index,
                        oldi,
                        w,
                        k,
                        digit,
                        t,
                        /** Cached calculation results */
                        baseMinusT;

                    // Handle the basic code points: let `basic` be the number of input code
                    // points before the last delimiter, or `0` if there is none, then copy
                    // the first basic code points to the output.

                    basic = input.lastIndexOf(delimiter);
                    if (basic < 0) {
                        basic = 0;
                    }

                    for (j = 0; j < basic; ++j) {
                        // if it's not a basic code point
                        if (input.charCodeAt(j) >= 0x80) {
                            error('not-basic');
                        }
                        output.push(input.charCodeAt(j));
                    }

                    // Main decoding loop: start just after the last delimiter if any basic code
                    // points were copied; start at the beginning otherwise.

                    for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

                        // `index` is the index of the next character to be consumed.
                        // Decode a generalized variable-length integer into `delta`,
                        // which gets added to `i`. The overflow checking is easier
                        // if we increase `i` as we go, then subtract off its starting
                        // value at the end to obtain `delta`.
                        for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

                            if (index >= inputLength) {
                                error('invalid-input');
                            }

                            digit = basicToDigit(input.charCodeAt(index++));

                            if (digit >= base || digit > floor((maxInt - i) / w)) {
                                error('overflow');
                            }

                            i += digit * w;
                            t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

                            if (digit < t) {
                                break;
                            }

                            baseMinusT = base - t;
                            if (w > floor(maxInt / baseMinusT)) {
                                error('overflow');
                            }

                            w *= baseMinusT;

                        }

                        out = output.length + 1;
                        bias = adapt(i - oldi, out, oldi == 0);

                        // `i` was supposed to wrap around from `out` to `0`,
                        // incrementing `n` each time, so we'll fix that now:
                        if (floor(i / out) > maxInt - n) {
                            error('overflow');
                        }

                        n += floor(i / out);
                        i %= out;

                        // Insert `n` at position `i` of the output
                        output.splice(i++, 0, n);

                    }

                    return ucs2encode(output);
                }

                /**
                 * Converts a string of Unicode symbols (e.g. a domain name label) to a
                 * Punycode string of ASCII-only symbols.
                 * @memberOf punycode
                 * @param {String} input The string of Unicode symbols.
                 * @returns {String} The resulting Punycode string of ASCII-only symbols.
                 */
                function encode(input) {
                    var n,
                        delta,
                        handledCPCount,
                        basicLength,
                        bias,
                        j,
                        m,
                        q,
                        k,
                        t,
                        currentValue,
                        output = [],
                        /** `inputLength` will hold the number of code points in `input`. */
                        inputLength,
                        /** Cached calculation results */
                        handledCPCountPlusOne,
                        baseMinusT,
                        qMinusT;

                    // Convert the input in UCS-2 to Unicode
                    input = ucs2decode(input);

                    // Cache the length
                    inputLength = input.length;

                    // Initialize the state
                    n = initialN;
                    delta = 0;
                    bias = initialBias;

                    // Handle the basic code points
                    for (j = 0; j < inputLength; ++j) {
                        currentValue = input[j];
                        if (currentValue < 0x80) {
                            output.push(stringFromCharCode(currentValue));
                        }
                    }

                    handledCPCount = basicLength = output.length;

                    // `handledCPCount` is the number of code points that have been handled;
                    // `basicLength` is the number of basic code points.

                    // Finish the basic string - if it is not empty - with a delimiter
                    if (basicLength) {
                        output.push(delimiter);
                    }

                    // Main encoding loop:
                    while (handledCPCount < inputLength) {

                        // All non-basic code points < n have been handled already. Find the next
                        // larger one:
                        for (m = maxInt, j = 0; j < inputLength; ++j) {
                            currentValue = input[j];
                            if (currentValue >= n && currentValue < m) {
                                m = currentValue;
                            }
                        }

                        // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
                        // but guard against overflow
                        handledCPCountPlusOne = handledCPCount + 1;
                        if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
                            error('overflow');
                        }

                        delta += (m - n) * handledCPCountPlusOne;
                        n = m;

                        for (j = 0; j < inputLength; ++j) {
                            currentValue = input[j];

                            if (currentValue < n && ++delta > maxInt) {
                                error('overflow');
                            }

                            if (currentValue == n) {
                                // Represent delta as a generalized variable-length integer
                                for (q = delta, k = base; /* no condition */; k += base) {
                                    t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
                                    if (q < t) {
                                        break;
                                    }
                                    qMinusT = q - t;
                                    baseMinusT = base - t;
                                    output.push(
                                        stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
                                    );
                                    q = floor(qMinusT / baseMinusT);
                                }

                                output.push(stringFromCharCode(digitToBasic(q, 0)));
                                bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
                                delta = 0;
                                ++handledCPCount;
                            }
                        }

                        ++delta;
                        ++n;

                    }
                    return output.join('');
                }

                /**
                 * Converts a Punycode string representing a domain name or an email address
                 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
                 * it doesn't matter if you call it on a string that has already been
                 * converted to Unicode.
                 * @memberOf punycode
                 * @param {String} input The Punycoded domain name or email address to
                 * convert to Unicode.
                 * @returns {String} The Unicode representation of the given Punycode
                 * string.
                 */
                function toUnicode(input) {
                    return mapDomain(input, function(string) {
                        return regexPunycode.test(string)
                            ? decode(string.slice(4).toLowerCase())
                            : string;
                    });
                }

                /**
                 * Converts a Unicode string representing a domain name or an email address to
                 * Punycode. Only the non-ASCII parts of the domain name will be converted,
                 * i.e. it doesn't matter if you call it with a domain that's already in
                 * ASCII.
                 * @memberOf punycode
                 * @param {String} input The domain name or email address to convert, as a
                 * Unicode string.
                 * @returns {String} The Punycode representation of the given domain name or
                 * email address.
                 */
                function toASCII(input) {
                    return mapDomain(input, function(string) {
                        return regexNonASCII.test(string)
                            ? 'xn--' + encode(string)
                            : string;
                    });
                }

                /*--------------------------------------------------------------------------*/

                /** Define the public API */
                punycode = {
                    /**
                     * A string representing the current Punycode.js version number.
                     * @memberOf punycode
                     * @type String
                     */
                    'version': '1.4.1',
                    /**
                     * An object of methods to convert from JavaScript's internal character
                     * representation (UCS-2) to Unicode code points, and back.
                     * @see <https://mathiasbynens.be/notes/javascript-encoding>
                     * @memberOf punycode
                     * @type Object
                     */
                    'ucs2': {
                        'decode': ucs2decode,
                        'encode': ucs2encode
                    },
                    'decode': decode,
                    'encode': encode,
                    'toASCII': toASCII,
                    'toUnicode': toUnicode
                };

                /** Expose `punycode` */
                // Some AMD build optimizers, like r.js, check for specific condition patterns
                // like the following:
                if (
                    true
                ) {
                    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
                        return punycode;
                    }).call(exports, __webpack_require__, exports, module),
                    __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
                } else {}

            }(this));

            /* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module), __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

        /***/ }),

    /***/ "./node_modules/querystring-es3/decode.js":
    /*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
        function hasOwnProperty(obj, prop) {
            return Object.prototype.hasOwnProperty.call(obj, prop);
        }

        module.exports = function(qs, sep, eq, options) {
            sep = sep || '&';
            eq = eq || '=';
            var obj = {};

            if (typeof qs !== 'string' || qs.length === 0) {
                return obj;
            }

            var regexp = /\+/g;
            qs = qs.split(sep);

            var maxKeys = 1000;
            if (options && typeof options.maxKeys === 'number') {
                maxKeys = options.maxKeys;
            }

            var len = qs.length;
            // maxKeys <= 0 means that we should not limit keys count
            if (maxKeys > 0 && len > maxKeys) {
                len = maxKeys;
            }

            for (var i = 0; i < len; ++i) {
                var x = qs[i].replace(regexp, '%20'),
                    idx = x.indexOf(eq),
                    kstr, vstr, k, v;

                if (idx >= 0) {
                    kstr = x.substr(0, idx);
                    vstr = x.substr(idx + 1);
                } else {
                    kstr = x;
                    vstr = '';
                }

                k = decodeURIComponent(kstr);
                v = decodeURIComponent(vstr);

                if (!hasOwnProperty(obj, k)) {
                    obj[k] = v;
                } else if (isArray(obj[k])) {
                    obj[k].push(v);
                } else {
                    obj[k] = [obj[k], v];
                }
            }

            return obj;
        };

        var isArray = Array.isArray || function (xs) {
            return Object.prototype.toString.call(xs) === '[object Array]';
        };


        /***/ }),

    /***/ "./node_modules/querystring-es3/encode.js":
    /*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



        var stringifyPrimitive = function(v) {
            switch (typeof v) {
                case 'string':
                    return v;

                case 'boolean':
                    return v ? 'true' : 'false';

                case 'number':
                    return isFinite(v) ? v : '';

                default:
                    return '';
            }
        };

        module.exports = function(obj, sep, eq, name) {
            sep = sep || '&';
            eq = eq || '=';
            if (obj === null) {
                obj = undefined;
            }

            if (typeof obj === 'object') {
                return map(objectKeys(obj), function(k) {
                    var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
                    if (isArray(obj[k])) {
                        return map(obj[k], function(v) {
                            return ks + encodeURIComponent(stringifyPrimitive(v));
                        }).join(sep);
                    } else {
                        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
                    }
                }).join(sep);

            }

            if (!name) return '';
            return encodeURIComponent(stringifyPrimitive(name)) + eq +
                encodeURIComponent(stringifyPrimitive(obj));
        };

        var isArray = Array.isArray || function (xs) {
            return Object.prototype.toString.call(xs) === '[object Array]';
        };

        function map (xs, f) {
            if (xs.map) return xs.map(f);
            var res = [];
            for (var i = 0; i < xs.length; i++) {
                res.push(f(xs[i], i));
            }
            return res;
        }

        var objectKeys = Object.keys || function (obj) {
            var res = [];
            for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
            }
            return res;
        };


        /***/ }),

    /***/ "./node_modules/querystring-es3/index.js":
    /*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        exports.decode = exports.parse = __webpack_require__(/*! ./decode */ "./node_modules/querystring-es3/decode.js");
        exports.encode = exports.stringify = __webpack_require__(/*! ./encode */ "./node_modules/querystring-es3/encode.js");


        /***/ }),

    /***/ "./node_modules/regenerator-runtime/runtime.js":
    /*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */(function(global) {/**
         * Copyright (c) 2014, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
         * additional grant of patent rights can be found in the PATENTS file in
         * the same directory.
         */

        !(function(global) {
            "use strict";

            var Op = Object.prototype;
            var hasOwn = Op.hasOwnProperty;
            var undefined; // More compressible than void 0.
            var $Symbol = typeof Symbol === "function" ? Symbol : {};
            var iteratorSymbol = $Symbol.iterator || "@@iterator";
            var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
            var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

            var inModule = typeof module === "object";
            var runtime = global.regeneratorRuntime;
            if (runtime) {
                if (inModule) {
                    // If regeneratorRuntime is defined globally and we're in a module,
                    // make the exports object identical to regeneratorRuntime.
                    module.exports = runtime;
                }
                // Don't bother evaluating the rest of this file if the runtime was
                // already defined globally.
                return;
            }

            // Define the runtime globally (as expected by generated code) as either
            // module.exports (if we're in a module) or a new, empty object.
            runtime = global.regeneratorRuntime = inModule ? module.exports : {};

            function wrap(innerFn, outerFn, self, tryLocsList) {
                // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
                var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
                var generator = Object.create(protoGenerator.prototype);
                var context = new Context(tryLocsList || []);

                // The ._invoke method unifies the implementations of the .next,
                // .throw, and .return methods.
                generator._invoke = makeInvokeMethod(innerFn, self, context);

                return generator;
            }
            runtime.wrap = wrap;

            // Try/catch helper to minimize deoptimizations. Returns a completion
            // record like context.tryEntries[i].completion. This interface could
            // have been (and was previously) designed to take a closure to be
            // invoked without arguments, but in all the cases we care about we
            // already have an existing method we want to call, so there's no need
            // to create a new function object. We can even get away with assuming
            // the method takes exactly one argument, since that happens to be true
            // in every case, so we don't have to touch the arguments object. The
            // only additional allocation required is the completion record, which
            // has a stable shape and so hopefully should be cheap to allocate.
            function tryCatch(fn, obj, arg) {
                try {
                    return { type: "normal", arg: fn.call(obj, arg) };
                } catch (err) {
                    return { type: "throw", arg: err };
                }
            }

            var GenStateSuspendedStart = "suspendedStart";
            var GenStateSuspendedYield = "suspendedYield";
            var GenStateExecuting = "executing";
            var GenStateCompleted = "completed";

            // Returning this object from the innerFn has the same effect as
            // breaking out of the dispatch switch statement.
            var ContinueSentinel = {};

            // Dummy constructor functions that we use as the .constructor and
            // .constructor.prototype properties for functions that return Generator
            // objects. For full spec compliance, you may wish to configure your
            // minifier not to mangle the names of these two functions.
            function Generator() {}
            function GeneratorFunction() {}
            function GeneratorFunctionPrototype() {}

            // This is a polyfill for %IteratorPrototype% for environments that
            // don't natively support it.
            var IteratorPrototype = {};
            IteratorPrototype[iteratorSymbol] = function () {
                return this;
            };

            var getProto = Object.getPrototypeOf;
            var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
            if (NativeIteratorPrototype &&
                NativeIteratorPrototype !== Op &&
                hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
                // This environment has a native %IteratorPrototype%; use it instead
                // of the polyfill.
                IteratorPrototype = NativeIteratorPrototype;
            }

            var Gp = GeneratorFunctionPrototype.prototype =
                Generator.prototype = Object.create(IteratorPrototype);
            GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
            GeneratorFunctionPrototype.constructor = GeneratorFunction;
            GeneratorFunctionPrototype[toStringTagSymbol] =
                GeneratorFunction.displayName = "GeneratorFunction";

            // Helper for defining the .next, .throw, and .return methods of the
            // Iterator interface in terms of a single ._invoke method.
            function defineIteratorMethods(prototype) {
                ["next", "throw", "return"].forEach(function(method) {
                    prototype[method] = function(arg) {
                        return this._invoke(method, arg);
                    };
                });
            }

            runtime.isGeneratorFunction = function(genFun) {
                var ctor = typeof genFun === "function" && genFun.constructor;
                return ctor
                    ? ctor === GeneratorFunction ||
                    // For the native GeneratorFunction constructor, the best we can
                    // do is to check its .name property.
                    (ctor.displayName || ctor.name) === "GeneratorFunction"
                    : false;
            };

            runtime.mark = function(genFun) {
                if (Object.setPrototypeOf) {
                    Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
                } else {
                    genFun.__proto__ = GeneratorFunctionPrototype;
                    if (!(toStringTagSymbol in genFun)) {
                        genFun[toStringTagSymbol] = "GeneratorFunction";
                    }
                }
                genFun.prototype = Object.create(Gp);
                return genFun;
            };

            // Within the body of any async function, `await x` is transformed to
            // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
            // `hasOwn.call(value, "__await")` to determine if the yielded value is
            // meant to be awaited.
            runtime.awrap = function(arg) {
                return { __await: arg };
            };

            function AsyncIterator(generator) {
                function invoke(method, arg, resolve, reject) {
                    var record = tryCatch(generator[method], generator, arg);
                    if (record.type === "throw") {
                        reject(record.arg);
                    } else {
                        var result = record.arg;
                        var value = result.value;
                        if (value &&
                            typeof value === "object" &&
                            hasOwn.call(value, "__await")) {
                            return Promise.resolve(value.__await).then(function(value) {
                                invoke("next", value, resolve, reject);
                            }, function(err) {
                                invoke("throw", err, resolve, reject);
                            });
                        }

                        return Promise.resolve(value).then(function(unwrapped) {
                            // When a yielded Promise is resolved, its final value becomes
                            // the .value of the Promise<{value,done}> result for the
                            // current iteration. If the Promise is rejected, however, the
                            // result for this iteration will be rejected with the same
                            // reason. Note that rejections of yielded Promises are not
                            // thrown back into the generator function, as is the case
                            // when an awaited Promise is rejected. This difference in
                            // behavior between yield and await is important, because it
                            // allows the consumer to decide what to do with the yielded
                            // rejection (swallow it and continue, manually .throw it back
                            // into the generator, abandon iteration, whatever). With
                            // await, by contrast, there is no opportunity to examine the
                            // rejection reason outside the generator function, so the
                            // only option is to throw it from the await expression, and
                            // let the generator function handle the exception.
                            result.value = unwrapped;
                            resolve(result);
                        }, reject);
                    }
                }

                if (typeof global.process === "object" && global.process.domain) {
                    invoke = global.process.domain.bind(invoke);
                }

                var previousPromise;

                function enqueue(method, arg) {
                    function callInvokeWithMethodAndArg() {
                        return new Promise(function(resolve, reject) {
                            invoke(method, arg, resolve, reject);
                        });
                    }

                    return previousPromise =
                        // If enqueue has been called before, then we want to wait until
                        // all previous Promises have been resolved before calling invoke,
                        // so that results are always delivered in the correct order. If
                        // enqueue has not been called before, then it is important to
                        // call invoke immediately, without waiting on a callback to fire,
                        // so that the async generator function has the opportunity to do
                        // any necessary setup in a predictable way. This predictability
                        // is why the Promise constructor synchronously invokes its
                        // executor callback, and why async functions synchronously
                        // execute code before the first await. Since we implement simple
                        // async functions in terms of async generators, it is especially
                        // important to get this right, even though it requires care.
                        previousPromise ? previousPromise.then(
                            callInvokeWithMethodAndArg,
                            // Avoid propagating failures to Promises returned by later
                            // invocations of the iterator.
                            callInvokeWithMethodAndArg
                        ) : callInvokeWithMethodAndArg();
                }

                // Define the unified helper method that is used to implement .next,
                // .throw, and .return (see defineIteratorMethods).
                this._invoke = enqueue;
            }

            defineIteratorMethods(AsyncIterator.prototype);
            AsyncIterator.prototype[asyncIteratorSymbol] = function () {
                return this;
            };
            runtime.AsyncIterator = AsyncIterator;

            // Note that simple async functions are implemented on top of
            // AsyncIterator objects; they just return a Promise for the value of
            // the final result produced by the iterator.
            runtime.async = function(innerFn, outerFn, self, tryLocsList) {
                var iter = new AsyncIterator(
                    wrap(innerFn, outerFn, self, tryLocsList)
                );

                return runtime.isGeneratorFunction(outerFn)
                    ? iter // If outerFn is a generator, return the full iterator.
                    : iter.next().then(function(result) {
                        return result.done ? result.value : iter.next();
                    });
            };

            function makeInvokeMethod(innerFn, self, context) {
                var state = GenStateSuspendedStart;

                return function invoke(method, arg) {
                    if (state === GenStateExecuting) {
                        throw new Error("Generator is already running");
                    }

                    if (state === GenStateCompleted) {
                        if (method === "throw") {
                            throw arg;
                        }

                        // Be forgiving, per 25.3.3.3.3 of the spec:
                        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                        return doneResult();
                    }

                    context.method = method;
                    context.arg = arg;

                    while (true) {
                        var delegate = context.delegate;
                        if (delegate) {
                            var delegateResult = maybeInvokeDelegate(delegate, context);
                            if (delegateResult) {
                                if (delegateResult === ContinueSentinel) continue;
                                return delegateResult;
                            }
                        }

                        if (context.method === "next") {
                            // Setting context._sent for legacy support of Babel's
                            // function.sent implementation.
                            context.sent = context._sent = context.arg;

                        } else if (context.method === "throw") {
                            if (state === GenStateSuspendedStart) {
                                state = GenStateCompleted;
                                throw context.arg;
                            }

                            context.dispatchException(context.arg);

                        } else if (context.method === "return") {
                            context.abrupt("return", context.arg);
                        }

                        state = GenStateExecuting;

                        var record = tryCatch(innerFn, self, context);
                        if (record.type === "normal") {
                            // If an exception is thrown from innerFn, we leave state ===
                            // GenStateExecuting and loop back for another invocation.
                            state = context.done
                                ? GenStateCompleted
                                : GenStateSuspendedYield;

                            if (record.arg === ContinueSentinel) {
                                continue;
                            }

                            return {
                                value: record.arg,
                                done: context.done
                            };

                        } else if (record.type === "throw") {
                            state = GenStateCompleted;
                            // Dispatch the exception by looping back around to the
                            // context.dispatchException(context.arg) call above.
                            context.method = "throw";
                            context.arg = record.arg;
                        }
                    }
                };
            }

            // Call delegate.iterator[context.method](context.arg) and handle the
            // result, either by returning a { value, done } result from the
            // delegate iterator, or by modifying context.method and context.arg,
            // setting context.delegate to null, and returning the ContinueSentinel.
            function maybeInvokeDelegate(delegate, context) {
                var method = delegate.iterator[context.method];
                if (method === undefined) {
                    // A .throw or .return when the delegate iterator has no .throw
                    // method always terminates the yield* loop.
                    context.delegate = null;

                    if (context.method === "throw") {
                        if (delegate.iterator.return) {
                            // If the delegate iterator has a return method, give it a
                            // chance to clean up.
                            context.method = "return";
                            context.arg = undefined;
                            maybeInvokeDelegate(delegate, context);

                            if (context.method === "throw") {
                                // If maybeInvokeDelegate(context) changed context.method from
                                // "return" to "throw", let that override the TypeError below.
                                return ContinueSentinel;
                            }
                        }

                        context.method = "throw";
                        context.arg = new TypeError(
                            "The iterator does not provide a 'throw' method");
                    }

                    return ContinueSentinel;
                }

                var record = tryCatch(method, delegate.iterator, context.arg);

                if (record.type === "throw") {
                    context.method = "throw";
                    context.arg = record.arg;
                    context.delegate = null;
                    return ContinueSentinel;
                }

                var info = record.arg;

                if (! info) {
                    context.method = "throw";
                    context.arg = new TypeError("iterator result is not an object");
                    context.delegate = null;
                    return ContinueSentinel;
                }

                if (info.done) {
                    // Assign the result of the finished delegate to the temporary
                    // variable specified by delegate.resultName (see delegateYield).
                    context[delegate.resultName] = info.value;

                    // Resume execution at the desired location (see delegateYield).
                    context.next = delegate.nextLoc;

                    // If context.method was "throw" but the delegate handled the
                    // exception, let the outer generator proceed normally. If
                    // context.method was "next", forget context.arg since it has been
                    // "consumed" by the delegate iterator. If context.method was
                    // "return", allow the original .return call to continue in the
                    // outer generator.
                    if (context.method !== "return") {
                        context.method = "next";
                        context.arg = undefined;
                    }

                } else {
                    // Re-yield the result returned by the delegate method.
                    return info;
                }

                // The delegate iterator is finished, so forget it and continue with
                // the outer generator.
                context.delegate = null;
                return ContinueSentinel;
            }

            // Define Generator.prototype.{next,throw,return} in terms of the
            // unified ._invoke helper method.
            defineIteratorMethods(Gp);

            Gp[toStringTagSymbol] = "Generator";

            // A Generator should always return itself as the iterator object when the
            // @@iterator function is called on it. Some browsers' implementations of the
            // iterator prototype chain incorrectly implement this, causing the Generator
            // object to not be returned from this call. This ensures that doesn't happen.
            // See https://github.com/facebook/regenerator/issues/274 for more details.
            Gp[iteratorSymbol] = function() {
                return this;
            };

            Gp.toString = function() {
                return "[object Generator]";
            };

            function pushTryEntry(locs) {
                var entry = { tryLoc: locs[0] };

                if (1 in locs) {
                    entry.catchLoc = locs[1];
                }

                if (2 in locs) {
                    entry.finallyLoc = locs[2];
                    entry.afterLoc = locs[3];
                }

                this.tryEntries.push(entry);
            }

            function resetTryEntry(entry) {
                var record = entry.completion || {};
                record.type = "normal";
                delete record.arg;
                entry.completion = record;
            }

            function Context(tryLocsList) {
                // The root entry object (effectively a try statement without a catch
                // or a finally block) gives us a place to store values thrown from
                // locations where there is no enclosing try statement.
                this.tryEntries = [{ tryLoc: "root" }];
                tryLocsList.forEach(pushTryEntry, this);
                this.reset(true);
            }

            runtime.keys = function(object) {
                var keys = [];
                for (var key in object) {
                    keys.push(key);
                }
                keys.reverse();

                // Rather than returning an object with a next method, we keep
                // things simple and return the next function itself.
                return function next() {
                    while (keys.length) {
                        var key = keys.pop();
                        if (key in object) {
                            next.value = key;
                            next.done = false;
                            return next;
                        }
                    }

                    // To avoid creating an additional object, we just hang the .value
                    // and .done properties off the next function object itself. This
                    // also ensures that the minifier will not anonymize the function.
                    next.done = true;
                    return next;
                };
            };

            function values(iterable) {
                if (iterable) {
                    var iteratorMethod = iterable[iteratorSymbol];
                    if (iteratorMethod) {
                        return iteratorMethod.call(iterable);
                    }

                    if (typeof iterable.next === "function") {
                        return iterable;
                    }

                    if (!isNaN(iterable.length)) {
                        var i = -1, next = function next() {
                            while (++i < iterable.length) {
                                if (hasOwn.call(iterable, i)) {
                                    next.value = iterable[i];
                                    next.done = false;
                                    return next;
                                }
                            }

                            next.value = undefined;
                            next.done = true;

                            return next;
                        };

                        return next.next = next;
                    }
                }

                // Return an iterator with no values.
                return { next: doneResult };
            }
            runtime.values = values;

            function doneResult() {
                return { value: undefined, done: true };
            }

            Context.prototype = {
                constructor: Context,

                reset: function(skipTempReset) {
                    this.prev = 0;
                    this.next = 0;
                    // Resetting context._sent for legacy support of Babel's
                    // function.sent implementation.
                    this.sent = this._sent = undefined;
                    this.done = false;
                    this.delegate = null;

                    this.method = "next";
                    this.arg = undefined;

                    this.tryEntries.forEach(resetTryEntry);

                    if (!skipTempReset) {
                        for (var name in this) {
                            // Not sure about the optimal order of these conditions:
                            if (name.charAt(0) === "t" &&
                                hasOwn.call(this, name) &&
                                !isNaN(+name.slice(1))) {
                                this[name] = undefined;
                            }
                        }
                    }
                },

                stop: function() {
                    this.done = true;

                    var rootEntry = this.tryEntries[0];
                    var rootRecord = rootEntry.completion;
                    if (rootRecord.type === "throw") {
                        throw rootRecord.arg;
                    }

                    return this.rval;
                },

                dispatchException: function(exception) {
                    if (this.done) {
                        throw exception;
                    }

                    var context = this;
                    function handle(loc, caught) {
                        record.type = "throw";
                        record.arg = exception;
                        context.next = loc;

                        if (caught) {
                            // If the dispatched exception was caught by a catch block,
                            // then let that catch block handle the exception normally.
                            context.method = "next";
                            context.arg = undefined;
                        }

                        return !! caught;
                    }

                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        var record = entry.completion;

                        if (entry.tryLoc === "root") {
                            // Exception thrown outside of any try block that could handle
                            // it, so set the completion value of the entire function to
                            // throw the exception.
                            return handle("end");
                        }

                        if (entry.tryLoc <= this.prev) {
                            var hasCatch = hasOwn.call(entry, "catchLoc");
                            var hasFinally = hasOwn.call(entry, "finallyLoc");

                            if (hasCatch && hasFinally) {
                                if (this.prev < entry.catchLoc) {
                                    return handle(entry.catchLoc, true);
                                } else if (this.prev < entry.finallyLoc) {
                                    return handle(entry.finallyLoc);
                                }

                            } else if (hasCatch) {
                                if (this.prev < entry.catchLoc) {
                                    return handle(entry.catchLoc, true);
                                }

                            } else if (hasFinally) {
                                if (this.prev < entry.finallyLoc) {
                                    return handle(entry.finallyLoc);
                                }

                            } else {
                                throw new Error("try statement without catch or finally");
                            }
                        }
                    }
                },

                abrupt: function(type, arg) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.tryLoc <= this.prev &&
                            hasOwn.call(entry, "finallyLoc") &&
                            this.prev < entry.finallyLoc) {
                            var finallyEntry = entry;
                            break;
                        }
                    }

                    if (finallyEntry &&
                        (type === "break" ||
                            type === "continue") &&
                        finallyEntry.tryLoc <= arg &&
                        arg <= finallyEntry.finallyLoc) {
                        // Ignore the finally entry if control is not jumping to a
                        // location outside the try/catch block.
                        finallyEntry = null;
                    }

                    var record = finallyEntry ? finallyEntry.completion : {};
                    record.type = type;
                    record.arg = arg;

                    if (finallyEntry) {
                        this.method = "next";
                        this.next = finallyEntry.finallyLoc;
                        return ContinueSentinel;
                    }

                    return this.complete(record);
                },

                complete: function(record, afterLoc) {
                    if (record.type === "throw") {
                        throw record.arg;
                    }

                    if (record.type === "break" ||
                        record.type === "continue") {
                        this.next = record.arg;
                    } else if (record.type === "return") {
                        this.rval = this.arg = record.arg;
                        this.method = "return";
                        this.next = "end";
                    } else if (record.type === "normal" && afterLoc) {
                        this.next = afterLoc;
                    }

                    return ContinueSentinel;
                },

                finish: function(finallyLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.finallyLoc === finallyLoc) {
                            this.complete(entry.completion, entry.afterLoc);
                            resetTryEntry(entry);
                            return ContinueSentinel;
                        }
                    }
                },

                "catch": function(tryLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.tryLoc === tryLoc) {
                            var record = entry.completion;
                            if (record.type === "throw") {
                                var thrown = record.arg;
                                resetTryEntry(entry);
                            }
                            return thrown;
                        }
                    }

                    // The context.catch method must only be called with a location
                    // argument that corresponds to a known catch block.
                    throw new Error("illegal catch attempt");
                },

                delegateYield: function(iterable, resultName, nextLoc) {
                    this.delegate = {
                        iterator: values(iterable),
                        resultName: resultName,
                        nextLoc: nextLoc
                    };

                    if (this.method === "next") {
                        // Deliberately forget the last sent value so that we don't
                        // accidentally pass it on to the delegate.
                        this.arg = undefined;
                    }

                    return ContinueSentinel;
                }
            };
        })(
            // Among the various tricks for obtaining a reference to the global
            // object, this seems to be the most reliable technique that does not
            // use indirect eval (which violates Content Security Policy).
            typeof global === "object" ? global :
                typeof window === "object" ? window :
                    typeof self === "object" ? self : this
        );

            /* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

        /***/ }),

    /***/ "./node_modules/setimmediate/setImmediate.js":
    /*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
            "use strict";

            if (global.setImmediate) {
                return;
            }

            var nextHandle = 1; // Spec says greater than zero
            var tasksByHandle = {};
            var currentlyRunningATask = false;
            var doc = global.document;
            var registerImmediate;

            function setImmediate(callback) {
                // Callback can either be a function or a string
                if (typeof callback !== "function") {
                    callback = new Function("" + callback);
                }
                // Copy function arguments
                var args = new Array(arguments.length - 1);
                for (var i = 0; i < args.length; i++) {
                    args[i] = arguments[i + 1];
                }
                // Store and register the task
                var task = { callback: callback, args: args };
                tasksByHandle[nextHandle] = task;
                registerImmediate(nextHandle);
                return nextHandle++;
            }

            function clearImmediate(handle) {
                delete tasksByHandle[handle];
            }

            function run(task) {
                var callback = task.callback;
                var args = task.args;
                switch (args.length) {
                    case 0:
                        callback();
                        break;
                    case 1:
                        callback(args[0]);
                        break;
                    case 2:
                        callback(args[0], args[1]);
                        break;
                    case 3:
                        callback(args[0], args[1], args[2]);
                        break;
                    default:
                        callback.apply(undefined, args);
                        break;
                }
            }

            function runIfPresent(handle) {
                // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
                // So if we're currently running a task, we'll need to delay this invocation.
                if (currentlyRunningATask) {
                    // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
                    // "too much recursion" error.
                    setTimeout(runIfPresent, 0, handle);
                } else {
                    var task = tasksByHandle[handle];
                    if (task) {
                        currentlyRunningATask = true;
                        try {
                            run(task);
                        } finally {
                            clearImmediate(handle);
                            currentlyRunningATask = false;
                        }
                    }
                }
            }

            function installNextTickImplementation() {
                registerImmediate = function(handle) {
                    process.nextTick(function () { runIfPresent(handle); });
                };
            }

            function canUsePostMessage() {
                // The test against `importScripts` prevents this implementation from being installed inside a web worker,
                // where `global.postMessage` means something completely different and can't be used for this purpose.
                if (global.postMessage && !global.importScripts) {
                    var postMessageIsAsynchronous = true;
                    var oldOnMessage = global.onmessage;
                    global.onmessage = function() {
                        postMessageIsAsynchronous = false;
                    };
                    global.postMessage("", "*");
                    global.onmessage = oldOnMessage;
                    return postMessageIsAsynchronous;
                }
            }

            function installPostMessageImplementation() {
                // Installs an event handler on `global` for the `message` event: see
                // * https://developer.mozilla.org/en/DOM/window.postMessage
                // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

                var messagePrefix = "setImmediate$" + Math.random() + "$";
                var onGlobalMessage = function(event) {
                    if (event.source === global &&
                        typeof event.data === "string" &&
                        event.data.indexOf(messagePrefix) === 0) {
                        runIfPresent(+event.data.slice(messagePrefix.length));
                    }
                };

                if (global.addEventListener) {
                    global.addEventListener("message", onGlobalMessage, false);
                } else {
                    global.attachEvent("onmessage", onGlobalMessage);
                }

                registerImmediate = function(handle) {
                    global.postMessage(messagePrefix + handle, "*");
                };
            }

            function installMessageChannelImplementation() {
                var channel = new MessageChannel();
                channel.port1.onmessage = function(event) {
                    var handle = event.data;
                    runIfPresent(handle);
                };

                registerImmediate = function(handle) {
                    channel.port2.postMessage(handle);
                };
            }

            function installReadyStateChangeImplementation() {
                var html = doc.documentElement;
                registerImmediate = function(handle) {
                    // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
                    // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
                    var script = doc.createElement("script");
                    script.onreadystatechange = function () {
                        runIfPresent(handle);
                        script.onreadystatechange = null;
                        html.removeChild(script);
                        script = null;
                    };
                    html.appendChild(script);
                };
            }

            function installSetTimeoutImplementation() {
                registerImmediate = function(handle) {
                    setTimeout(runIfPresent, 0, handle);
                };
            }

            // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
            var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
            attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

            // Don't get fooled by e.g. browserify environments.
            if ({}.toString.call(global.process) === "[object process]") {
                // For Node.js before 0.9
                installNextTickImplementation();

            } else if (canUsePostMessage()) {
                // For non-IE10 modern browsers
                installPostMessageImplementation();

            } else if (global.MessageChannel) {
                // For web workers, where supported
                installMessageChannelImplementation();

            } else if (doc && "onreadystatechange" in doc.createElement("script")) {
                // For IE 6–8
                installReadyStateChangeImplementation();

            } else {
                // For older browsers
                installSetTimeoutImplementation();
            }

            attachTo.setImmediate = setImmediate;
            attachTo.clearImmediate = clearImmediate;
        }(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

            /* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

        /***/ }),

    /***/ "./node_modules/sockjs-client/dist/sockjs.js":
    /*!***************************************************!*\
  !*** ./node_modules/sockjs-client/dist/sockjs.js ***!
  \***************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */(function(global) {var require;var require;/* sockjs-client v1.3.0 | http://sockjs.org | MIT license */
            (function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
                    (function (global){
                        'use strict';

                        var transportList = require('./transport-list');

                        module.exports = require('./main')(transportList);

// TODO can't get rid of this until all servers do
                        if ('_sockjs_onload' in global) {
                            setTimeout(global._sockjs_onload, 1);
                        }

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"./main":14,"./transport-list":16}],2:[function(require,module,exports){
                    'use strict';

                    var inherits = require('inherits')
                        , Event = require('./event')
                    ;

                    function CloseEvent() {
                        Event.call(this);
                        this.initEvent('close', false, false);
                        this.wasClean = false;
                        this.code = 0;
                        this.reason = '';
                    }

                    inherits(CloseEvent, Event);

                    module.exports = CloseEvent;

                },{"./event":4,"inherits":57}],3:[function(require,module,exports){
                    'use strict';

                    var inherits = require('inherits')
                        , EventTarget = require('./eventtarget')
                    ;

                    function EventEmitter() {
                        EventTarget.call(this);
                    }

                    inherits(EventEmitter, EventTarget);

                    EventEmitter.prototype.removeAllListeners = function(type) {
                        if (type) {
                            delete this._listeners[type];
                        } else {
                            this._listeners = {};
                        }
                    };

                    EventEmitter.prototype.once = function(type, listener) {
                        var self = this
                            , fired = false;

                        function g() {
                            self.removeListener(type, g);

                            if (!fired) {
                                fired = true;
                                listener.apply(this, arguments);
                            }
                        }

                        this.on(type, g);
                    };

                    EventEmitter.prototype.emit = function() {
                        var type = arguments[0];
                        var listeners = this._listeners[type];
                        if (!listeners) {
                            return;
                        }
                        // equivalent of Array.prototype.slice.call(arguments, 1);
                        var l = arguments.length;
                        var args = new Array(l - 1);
                        for (var ai = 1; ai < l; ai++) {
                            args[ai - 1] = arguments[ai];
                        }
                        for (var i = 0; i < listeners.length; i++) {
                            listeners[i].apply(this, args);
                        }
                    };

                    EventEmitter.prototype.on = EventEmitter.prototype.addListener = EventTarget.prototype.addEventListener;
                    EventEmitter.prototype.removeListener = EventTarget.prototype.removeEventListener;

                    module.exports.EventEmitter = EventEmitter;

                },{"./eventtarget":5,"inherits":57}],4:[function(require,module,exports){
                    'use strict';

                    function Event(eventType) {
                        this.type = eventType;
                    }

                    Event.prototype.initEvent = function(eventType, canBubble, cancelable) {
                        this.type = eventType;
                        this.bubbles = canBubble;
                        this.cancelable = cancelable;
                        this.timeStamp = +new Date();
                        return this;
                    };

                    Event.prototype.stopPropagation = function() {};
                    Event.prototype.preventDefault = function() {};

                    Event.CAPTURING_PHASE = 1;
                    Event.AT_TARGET = 2;
                    Event.BUBBLING_PHASE = 3;

                    module.exports = Event;

                },{}],5:[function(require,module,exports){
                    'use strict';

                    /* Simplified implementation of DOM2 EventTarget.
 *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget
 */

                    function EventTarget() {
                        this._listeners = {};
                    }

                    EventTarget.prototype.addEventListener = function(eventType, listener) {
                        if (!(eventType in this._listeners)) {
                            this._listeners[eventType] = [];
                        }
                        var arr = this._listeners[eventType];
                        // #4
                        if (arr.indexOf(listener) === -1) {
                            // Make a copy so as not to interfere with a current dispatchEvent.
                            arr = arr.concat([listener]);
                        }
                        this._listeners[eventType] = arr;
                    };

                    EventTarget.prototype.removeEventListener = function(eventType, listener) {
                        var arr = this._listeners[eventType];
                        if (!arr) {
                            return;
                        }
                        var idx = arr.indexOf(listener);
                        if (idx !== -1) {
                            if (arr.length > 1) {
                                // Make a copy so as not to interfere with a current dispatchEvent.
                                this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));
                            } else {
                                delete this._listeners[eventType];
                            }
                            return;
                        }
                    };

                    EventTarget.prototype.dispatchEvent = function() {
                        var event = arguments[0];
                        var t = event.type;
                        // equivalent of Array.prototype.slice.call(arguments, 0);
                        var args = arguments.length === 1 ? [event] : Array.apply(null, arguments);
                        // TODO: This doesn't match the real behavior; per spec, onfoo get
                        // their place in line from the /first/ time they're set from
                        // non-null. Although WebKit bumps it to the end every time it's
                        // set.
                        if (this['on' + t]) {
                            this['on' + t].apply(this, args);
                        }
                        if (t in this._listeners) {
                            // Grab a reference to the listeners list. removeEventListener may alter the list.
                            var listeners = this._listeners[t];
                            for (var i = 0; i < listeners.length; i++) {
                                listeners[i].apply(this, args);
                            }
                        }
                    };

                    module.exports = EventTarget;

                },{}],6:[function(require,module,exports){
                    'use strict';

                    var inherits = require('inherits')
                        , Event = require('./event')
                    ;

                    function TransportMessageEvent(data) {
                        Event.call(this);
                        this.initEvent('message', false, false);
                        this.data = data;
                    }

                    inherits(TransportMessageEvent, Event);

                    module.exports = TransportMessageEvent;

                },{"./event":4,"inherits":57}],7:[function(require,module,exports){
                    'use strict';

                    var JSON3 = require('json3')
                        , iframeUtils = require('./utils/iframe')
                    ;

                    function FacadeJS(transport) {
                        this._transport = transport;
                        transport.on('message', this._transportMessage.bind(this));
                        transport.on('close', this._transportClose.bind(this));
                    }

                    FacadeJS.prototype._transportClose = function(code, reason) {
                        iframeUtils.postMessage('c', JSON3.stringify([code, reason]));
                    };
                    FacadeJS.prototype._transportMessage = function(frame) {
                        iframeUtils.postMessage('t', frame);
                    };
                    FacadeJS.prototype._send = function(data) {
                        this._transport.send(data);
                    };
                    FacadeJS.prototype._close = function() {
                        this._transport.close();
                        this._transport.removeAllListeners();
                    };

                    module.exports = FacadeJS;

                },{"./utils/iframe":47,"json3":58}],8:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var urlUtils = require('./utils/url')
                            , eventUtils = require('./utils/event')
                            , JSON3 = require('json3')
                            , FacadeJS = require('./facade')
                            , InfoIframeReceiver = require('./info-iframe-receiver')
                            , iframeUtils = require('./utils/iframe')
                            , loc = require('./location')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:iframe-bootstrap');
                        }

                        module.exports = function(SockJS, availableTransports) {
                            var transportMap = {};
                            availableTransports.forEach(function(at) {
                                if (at.facadeTransport) {
                                    transportMap[at.facadeTransport.transportName] = at.facadeTransport;
                                }
                            });

                            // hard-coded for the info iframe
                            // TODO see if we can make this more dynamic
                            transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;
                            var parentOrigin;

                            /* eslint-disable camelcase */
                            SockJS.bootstrap_iframe = function() {
                                /* eslint-enable camelcase */
                                var facade;
                                iframeUtils.currentWindowId = loc.hash.slice(1);
                                var onMessage = function(e) {
                                    if (e.source !== parent) {
                                        return;
                                    }
                                    if (typeof parentOrigin === 'undefined') {
                                        parentOrigin = e.origin;
                                    }
                                    if (e.origin !== parentOrigin) {
                                        return;
                                    }

                                    var iframeMessage;
                                    try {
                                        iframeMessage = JSON3.parse(e.data);
                                    } catch (ignored) {
                                        debug('bad json', e.data);
                                        return;
                                    }

                                    if (iframeMessage.windowId !== iframeUtils.currentWindowId) {
                                        return;
                                    }
                                    switch (iframeMessage.type) {
                                        case 's':
                                            var p;
                                            try {
                                                p = JSON3.parse(iframeMessage.data);
                                            } catch (ignored) {
                                                debug('bad json', iframeMessage.data);
                                                break;
                                            }
                                            var version = p[0];
                                            var transport = p[1];
                                            var transUrl = p[2];
                                            var baseUrl = p[3];
                                            debug(version, transport, transUrl, baseUrl);
                                            // change this to semver logic
                                            if (version !== SockJS.version) {
                                                throw new Error('Incompatible SockJS! Main site uses:' +
                                                    ' "' + version + '", the iframe:' +
                                                    ' "' + SockJS.version + '".');
                                            }

                                            if (!urlUtils.isOriginEqual(transUrl, loc.href) ||
                                                !urlUtils.isOriginEqual(baseUrl, loc.href)) {
                                                throw new Error('Can\'t connect to different domain from within an ' +
                                                    'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');
                                            }
                                            facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));
                                            break;
                                        case 'm':
                                            facade._send(iframeMessage.data);
                                            break;
                                        case 'c':
                                            if (facade) {
                                                facade._close();
                                            }
                                            facade = null;
                                            break;
                                    }
                                };

                                eventUtils.attachEvent('message', onMessage);

                                // Start
                                iframeUtils.postMessage('s');
                            };
                        };

                    }).call(this,{ env: {} })

                },{"./facade":7,"./info-iframe-receiver":10,"./location":13,"./utils/event":46,"./utils/iframe":47,"./utils/url":52,"debug":55,"json3":58}],9:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var EventEmitter = require('events').EventEmitter
                            , inherits = require('inherits')
                            , JSON3 = require('json3')
                            , objectUtils = require('./utils/object')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:info-ajax');
                        }

                        function InfoAjax(url, AjaxObject) {
                            EventEmitter.call(this);

                            var self = this;
                            var t0 = +new Date();
                            this.xo = new AjaxObject('GET', url);

                            this.xo.once('finish', function(status, text) {
                                var info, rtt;
                                if (status === 200) {
                                    rtt = (+new Date()) - t0;
                                    if (text) {
                                        try {
                                            info = JSON3.parse(text);
                                        } catch (e) {
                                            debug('bad json', text);
                                        }
                                    }

                                    if (!objectUtils.isObject(info)) {
                                        info = {};
                                    }
                                }
                                self.emit('finish', info, rtt);
                                self.removeAllListeners();
                            });
                        }

                        inherits(InfoAjax, EventEmitter);

                        InfoAjax.prototype.close = function() {
                            this.removeAllListeners();
                            this.xo.close();
                        };

                        module.exports = InfoAjax;

                    }).call(this,{ env: {} })

                },{"./utils/object":49,"debug":55,"events":3,"inherits":57,"json3":58}],10:[function(require,module,exports){
                    'use strict';

                    var inherits = require('inherits')
                        , EventEmitter = require('events').EventEmitter
                        , JSON3 = require('json3')
                        , XHRLocalObject = require('./transport/sender/xhr-local')
                        , InfoAjax = require('./info-ajax')
                    ;

                    function InfoReceiverIframe(transUrl) {
                        var self = this;
                        EventEmitter.call(this);

                        this.ir = new InfoAjax(transUrl, XHRLocalObject);
                        this.ir.once('finish', function(info, rtt) {
                            self.ir = null;
                            self.emit('message', JSON3.stringify([info, rtt]));
                        });
                    }

                    inherits(InfoReceiverIframe, EventEmitter);

                    InfoReceiverIframe.transportName = 'iframe-info-receiver';

                    InfoReceiverIframe.prototype.close = function() {
                        if (this.ir) {
                            this.ir.close();
                            this.ir = null;
                        }
                        this.removeAllListeners();
                    };

                    module.exports = InfoReceiverIframe;

                },{"./info-ajax":9,"./transport/sender/xhr-local":37,"events":3,"inherits":57,"json3":58}],11:[function(require,module,exports){
                    (function (process,global){
                        'use strict';

                        var EventEmitter = require('events').EventEmitter
                            , inherits = require('inherits')
                            , JSON3 = require('json3')
                            , utils = require('./utils/event')
                            , IframeTransport = require('./transport/iframe')
                            , InfoReceiverIframe = require('./info-iframe-receiver')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:info-iframe');
                        }

                        function InfoIframe(baseUrl, url) {
                            var self = this;
                            EventEmitter.call(this);

                            var go = function() {
                                var ifr = self.ifr = new IframeTransport(InfoReceiverIframe.transportName, url, baseUrl);

                                ifr.once('message', function(msg) {
                                    if (msg) {
                                        var d;
                                        try {
                                            d = JSON3.parse(msg);
                                        } catch (e) {
                                            debug('bad json', msg);
                                            self.emit('finish');
                                            self.close();
                                            return;
                                        }

                                        var info = d[0], rtt = d[1];
                                        self.emit('finish', info, rtt);
                                    }
                                    self.close();
                                });

                                ifr.once('close', function() {
                                    self.emit('finish');
                                    self.close();
                                });
                            };

                            // TODO this seems the same as the 'needBody' from transports
                            if (!global.document.body) {
                                utils.attachEvent('load', go);
                            } else {
                                go();
                            }
                        }

                        inherits(InfoIframe, EventEmitter);

                        InfoIframe.enabled = function() {
                            return IframeTransport.enabled();
                        };

                        InfoIframe.prototype.close = function() {
                            if (this.ifr) {
                                this.ifr.close();
                            }
                            this.removeAllListeners();
                            this.ifr = null;
                        };

                        module.exports = InfoIframe;

                    }).call(this,{ env: {} },typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"./info-iframe-receiver":10,"./transport/iframe":22,"./utils/event":46,"debug":55,"events":3,"inherits":57,"json3":58}],12:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var EventEmitter = require('events').EventEmitter
                            , inherits = require('inherits')
                            , urlUtils = require('./utils/url')
                            , XDR = require('./transport/sender/xdr')
                            , XHRCors = require('./transport/sender/xhr-cors')
                            , XHRLocal = require('./transport/sender/xhr-local')
                            , XHRFake = require('./transport/sender/xhr-fake')
                            , InfoIframe = require('./info-iframe')
                            , InfoAjax = require('./info-ajax')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:info-receiver');
                        }

                        function InfoReceiver(baseUrl, urlInfo) {
                            debug(baseUrl);
                            var self = this;
                            EventEmitter.call(this);

                            setTimeout(function() {
                                self.doXhr(baseUrl, urlInfo);
                            }, 0);
                        }

                        inherits(InfoReceiver, EventEmitter);

// TODO this is currently ignoring the list of available transports and the whitelist

                        InfoReceiver._getReceiver = function(baseUrl, url, urlInfo) {
                            // determine method of CORS support (if needed)
                            if (urlInfo.sameOrigin) {
                                return new InfoAjax(url, XHRLocal);
                            }
                            if (XHRCors.enabled) {
                                return new InfoAjax(url, XHRCors);
                            }
                            if (XDR.enabled && urlInfo.sameScheme) {
                                return new InfoAjax(url, XDR);
                            }
                            if (InfoIframe.enabled()) {
                                return new InfoIframe(baseUrl, url);
                            }
                            return new InfoAjax(url, XHRFake);
                        };

                        InfoReceiver.prototype.doXhr = function(baseUrl, urlInfo) {
                            var self = this
                                , url = urlUtils.addPath(baseUrl, '/info')
                            ;
                            debug('doXhr', url);

                            this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);

                            this.timeoutRef = setTimeout(function() {
                                debug('timeout');
                                self._cleanup(false);
                                self.emit('finish');
                            }, InfoReceiver.timeout);

                            this.xo.once('finish', function(info, rtt) {
                                debug('finish', info, rtt);
                                self._cleanup(true);
                                self.emit('finish', info, rtt);
                            });
                        };

                        InfoReceiver.prototype._cleanup = function(wasClean) {
                            debug('_cleanup');
                            clearTimeout(this.timeoutRef);
                            this.timeoutRef = null;
                            if (!wasClean && this.xo) {
                                this.xo.close();
                            }
                            this.xo = null;
                        };

                        InfoReceiver.prototype.close = function() {
                            debug('close');
                            this.removeAllListeners();
                            this._cleanup(false);
                        };

                        InfoReceiver.timeout = 8000;

                        module.exports = InfoReceiver;

                    }).call(this,{ env: {} })

                },{"./info-ajax":9,"./info-iframe":11,"./transport/sender/xdr":34,"./transport/sender/xhr-cors":35,"./transport/sender/xhr-fake":36,"./transport/sender/xhr-local":37,"./utils/url":52,"debug":55,"events":3,"inherits":57}],13:[function(require,module,exports){
                    (function (global){
                        'use strict';

                        module.exports = global.location || {
                            origin: 'http://localhost:80'
                            , protocol: 'http:'
                            , host: 'localhost'
                            , port: 80
                            , href: 'http://localhost/'
                            , hash: ''
                        };

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{}],14:[function(require,module,exports){
                    (function (process,global){
                        'use strict';

                        require('./shims');

                        var URL = require('url-parse')
                            , inherits = require('inherits')
                            , JSON3 = require('json3')
                            , random = require('./utils/random')
                            , escape = require('./utils/escape')
                            , urlUtils = require('./utils/url')
                            , eventUtils = require('./utils/event')
                            , transport = require('./utils/transport')
                            , objectUtils = require('./utils/object')
                            , browser = require('./utils/browser')
                            , log = require('./utils/log')
                            , Event = require('./event/event')
                            , EventTarget = require('./event/eventtarget')
                            , loc = require('./location')
                            , CloseEvent = require('./event/close')
                            , TransportMessageEvent = require('./event/trans-message')
                            , InfoReceiver = require('./info-receiver')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:main');
                        }

                        var transports;

// follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface
                        function SockJS(url, protocols, options) {
                            if (!(this instanceof SockJS)) {
                                return new SockJS(url, protocols, options);
                            }
                            if (arguments.length < 1) {
                                throw new TypeError("Failed to construct 'SockJS: 1 argument required, but only 0 present");
                            }
                            EventTarget.call(this);

                            this.readyState = SockJS.CONNECTING;
                            this.extensions = '';
                            this.protocol = '';

                            // non-standard extension
                            options = options || {};
                            if (options.protocols_whitelist) {
                                log.warn("'protocols_whitelist' is DEPRECATED. Use 'transports' instead.");
                            }
                            this._transportsWhitelist = options.transports;
                            this._transportOptions = options.transportOptions || {};

                            var sessionId = options.sessionId || 8;
                            if (typeof sessionId === 'function') {
                                this._generateSessionId = sessionId;
                            } else if (typeof sessionId === 'number') {
                                this._generateSessionId = function() {
                                    return random.string(sessionId);
                                };
                            } else {
                                throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');
                            }

                            this._server = options.server || random.numberString(1000);

                            // Step 1 of WS spec - parse and validate the url. Issue #8
                            var parsedUrl = new URL(url);
                            if (!parsedUrl.host || !parsedUrl.protocol) {
                                throw new SyntaxError("The URL '" + url + "' is invalid");
                            } else if (parsedUrl.hash) {
                                throw new SyntaxError('The URL must not contain a fragment');
                            } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {
                                throw new SyntaxError("The URL's scheme must be either 'http:' or 'https:'. '" + parsedUrl.protocol + "' is not allowed.");
                            }

                            var secure = parsedUrl.protocol === 'https:';
                            // Step 2 - don't allow secure origin with an insecure protocol
                            if (loc.protocol === 'https:' && !secure) {
                                throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');
                            }

                            // Step 3 - check port access - no need here
                            // Step 4 - parse protocols argument
                            if (!protocols) {
                                protocols = [];
                            } else if (!Array.isArray(protocols)) {
                                protocols = [protocols];
                            }

                            // Step 5 - check protocols argument
                            var sortedProtocols = protocols.sort();
                            sortedProtocols.forEach(function(proto, i) {
                                if (!proto) {
                                    throw new SyntaxError("The protocols entry '" + proto + "' is invalid.");
                                }
                                if (i < (sortedProtocols.length - 1) && proto === sortedProtocols[i + 1]) {
                                    throw new SyntaxError("The protocols entry '" + proto + "' is duplicated.");
                                }
                            });

                            // Step 6 - convert origin
                            var o = urlUtils.getOrigin(loc.href);
                            this._origin = o ? o.toLowerCase() : null;

                            // remove the trailing slash
                            parsedUrl.set('pathname', parsedUrl.pathname.replace(/\/+$/, ''));

                            // store the sanitized url
                            this.url = parsedUrl.href;
                            debug('using url', this.url);

                            // Step 7 - start connection in background
                            // obtain server info
                            // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26
                            this._urlInfo = {
                                nullOrigin: !browser.hasDomain()
                                , sameOrigin: urlUtils.isOriginEqual(this.url, loc.href)
                                , sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)
                            };

                            this._ir = new InfoReceiver(this.url, this._urlInfo);
                            this._ir.once('finish', this._receiveInfo.bind(this));
                        }

                        inherits(SockJS, EventTarget);

                        function userSetCode(code) {
                            return code === 1000 || (code >= 3000 && code <= 4999);
                        }

                        SockJS.prototype.close = function(code, reason) {
                            // Step 1
                            if (code && !userSetCode(code)) {
                                throw new Error('InvalidAccessError: Invalid code');
                            }
                            // Step 2.4 states the max is 123 bytes, but we are just checking length
                            if (reason && reason.length > 123) {
                                throw new SyntaxError('reason argument has an invalid length');
                            }

                            // Step 3.1
                            if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {
                                return;
                            }

                            // TODO look at docs to determine how to set this
                            var wasClean = true;
                            this._close(code || 1000, reason || 'Normal closure', wasClean);
                        };

                        SockJS.prototype.send = function(data) {
                            // #13 - convert anything non-string to string
                            // TODO this currently turns objects into [object Object]
                            if (typeof data !== 'string') {
                                data = '' + data;
                            }
                            if (this.readyState === SockJS.CONNECTING) {
                                throw new Error('InvalidStateError: The connection has not been established yet');
                            }
                            if (this.readyState !== SockJS.OPEN) {
                                return;
                            }
                            this._transport.send(escape.quote(data));
                        };

                        SockJS.version = require('./version');

                        SockJS.CONNECTING = 0;
                        SockJS.OPEN = 1;
                        SockJS.CLOSING = 2;
                        SockJS.CLOSED = 3;

                        SockJS.prototype._receiveInfo = function(info, rtt) {
                            debug('_receiveInfo', rtt);
                            this._ir = null;
                            if (!info) {
                                this._close(1002, 'Cannot connect to server');
                                return;
                            }

                            // establish a round-trip timeout (RTO) based on the
                            // round-trip time (RTT)
                            this._rto = this.countRTO(rtt);
                            // allow server to override url used for the actual transport
                            this._transUrl = info.base_url ? info.base_url : this.url;
                            info = objectUtils.extend(info, this._urlInfo);
                            debug('info', info);
                            // determine list of desired and supported transports
                            var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);
                            this._transports = enabledTransports.main;
                            debug(this._transports.length + ' enabled transports');

                            this._connect();
                        };

                        SockJS.prototype._connect = function() {
                            for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {
                                debug('attempt', Transport.transportName);
                                if (Transport.needBody) {
                                    if (!global.document.body ||
                                        (typeof global.document.readyState !== 'undefined' &&
                                            global.document.readyState !== 'complete' &&
                                            global.document.readyState !== 'interactive')) {
                                        debug('waiting for body');
                                        this._transports.unshift(Transport);
                                        eventUtils.attachEvent('load', this._connect.bind(this));
                                        return;
                                    }
                                }

                                // calculate timeout based on RTO and round trips. Default to 5s
                                var timeoutMs = (this._rto * Transport.roundTrips) || 5000;
                                this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);
                                debug('using timeout', timeoutMs);

                                var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());
                                var options = this._transportOptions[Transport.transportName];
                                debug('transport url', transportUrl);
                                var transportObj = new Transport(transportUrl, this._transUrl, options);
                                transportObj.on('message', this._transportMessage.bind(this));
                                transportObj.once('close', this._transportClose.bind(this));
                                transportObj.transportName = Transport.transportName;
                                this._transport = transportObj;

                                return;
                            }
                            this._close(2000, 'All transports failed', false);
                        };

                        SockJS.prototype._transportTimeout = function() {
                            debug('_transportTimeout');
                            if (this.readyState === SockJS.CONNECTING) {
                                if (this._transport) {
                                    this._transport.close();
                                }

                                this._transportClose(2007, 'Transport timed out');
                            }
                        };

                        SockJS.prototype._transportMessage = function(msg) {
                            debug('_transportMessage', msg);
                            var self = this
                                , type = msg.slice(0, 1)
                                , content = msg.slice(1)
                                , payload
                            ;

                            // first check for messages that don't need a payload
                            switch (type) {
                                case 'o':
                                    this._open();
                                    return;
                                case 'h':
                                    this.dispatchEvent(new Event('heartbeat'));
                                    debug('heartbeat', this.transport);
                                    return;
                            }

                            if (content) {
                                try {
                                    payload = JSON3.parse(content);
                                } catch (e) {
                                    debug('bad json', content);
                                }
                            }

                            if (typeof payload === 'undefined') {
                                debug('empty payload', content);
                                return;
                            }

                            switch (type) {
                                case 'a':
                                    if (Array.isArray(payload)) {
                                        payload.forEach(function(p) {
                                            debug('message', self.transport, p);
                                            self.dispatchEvent(new TransportMessageEvent(p));
                                        });
                                    }
                                    break;
                                case 'm':
                                    debug('message', this.transport, payload);
                                    this.dispatchEvent(new TransportMessageEvent(payload));
                                    break;
                                case 'c':
                                    if (Array.isArray(payload) && payload.length === 2) {
                                        this._close(payload[0], payload[1], true);
                                    }
                                    break;
                            }
                        };

                        SockJS.prototype._transportClose = function(code, reason) {
                            debug('_transportClose', this.transport, code, reason);
                            if (this._transport) {
                                this._transport.removeAllListeners();
                                this._transport = null;
                                this.transport = null;
                            }

                            if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {
                                this._connect();
                                return;
                            }

                            this._close(code, reason);
                        };

                        SockJS.prototype._open = function() {
                            debug('_open', this._transport.transportName, this.readyState);
                            if (this.readyState === SockJS.CONNECTING) {
                                if (this._transportTimeoutId) {
                                    clearTimeout(this._transportTimeoutId);
                                    this._transportTimeoutId = null;
                                }
                                this.readyState = SockJS.OPEN;
                                this.transport = this._transport.transportName;
                                this.dispatchEvent(new Event('open'));
                                debug('connected', this.transport);
                            } else {
                                // The server might have been restarted, and lost track of our
                                // connection.
                                this._close(1006, 'Server lost session');
                            }
                        };

                        SockJS.prototype._close = function(code, reason, wasClean) {
                            debug('_close', this.transport, code, reason, wasClean, this.readyState);
                            var forceFail = false;

                            if (this._ir) {
                                forceFail = true;
                                this._ir.close();
                                this._ir = null;
                            }
                            if (this._transport) {
                                this._transport.close();
                                this._transport = null;
                                this.transport = null;
                            }

                            if (this.readyState === SockJS.CLOSED) {
                                throw new Error('InvalidStateError: SockJS has already been closed');
                            }

                            this.readyState = SockJS.CLOSING;
                            setTimeout(function() {
                                this.readyState = SockJS.CLOSED;

                                if (forceFail) {
                                    this.dispatchEvent(new Event('error'));
                                }

                                var e = new CloseEvent('close');
                                e.wasClean = wasClean || false;
                                e.code = code || 1000;
                                e.reason = reason;

                                this.dispatchEvent(e);
                                this.onmessage = this.onclose = this.onerror = null;
                                debug('disconnected');
                            }.bind(this), 0);
                        };

// See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/
// and RFC 2988.
                        SockJS.prototype.countRTO = function(rtt) {
                            // In a local environment, when using IE8/9 and the `jsonp-polling`
                            // transport the time needed to establish a connection (the time that pass
                            // from the opening of the transport to the call of `_dispatchOpen`) is
                            // around 200msec (the lower bound used in the article above) and this
                            // causes spurious timeouts. For this reason we calculate a value slightly
                            // larger than that used in the article.
                            if (rtt > 100) {
                                return 4 * rtt; // rto > 400msec
                            }
                            return 300 + rtt; // 300msec < rto <= 400msec
                        };

                        module.exports = function(availableTransports) {
                            transports = transport(availableTransports);
                            require('./iframe-bootstrap')(SockJS, availableTransports);
                            return SockJS;
                        };

                    }).call(this,{ env: {} },typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"./event/close":2,"./event/event":4,"./event/eventtarget":5,"./event/trans-message":6,"./iframe-bootstrap":8,"./info-receiver":12,"./location":13,"./shims":15,"./utils/browser":44,"./utils/escape":45,"./utils/event":46,"./utils/log":48,"./utils/object":49,"./utils/random":50,"./utils/transport":51,"./utils/url":52,"./version":53,"debug":55,"inherits":57,"json3":58,"url-parse":61}],15:[function(require,module,exports){
                    /* eslint-disable */
                    /* jscs: disable */
                    'use strict';

// pulled specific shims from https://github.com/es-shims/es5-shim

                    var ArrayPrototype = Array.prototype;
                    var ObjectPrototype = Object.prototype;
                    var FunctionPrototype = Function.prototype;
                    var StringPrototype = String.prototype;
                    var array_slice = ArrayPrototype.slice;

                    var _toString = ObjectPrototype.toString;
                    var isFunction = function (val) {
                        return ObjectPrototype.toString.call(val) === '[object Function]';
                    };
                    var isArray = function isArray(obj) {
                        return _toString.call(obj) === '[object Array]';
                    };
                    var isString = function isString(obj) {
                        return _toString.call(obj) === '[object String]';
                    };

                    var supportsDescriptors = Object.defineProperty && (function () {
                        try {
                            Object.defineProperty({}, 'x', {});
                            return true;
                        } catch (e) { /* this is ES3 */
                            return false;
                        }
                    }());

// Define configurable, writable and non-enumerable props
// if they don't exist.
                    var defineProperty;
                    if (supportsDescriptors) {
                        defineProperty = function (object, name, method, forceAssign) {
                            if (!forceAssign && (name in object)) { return; }
                            Object.defineProperty(object, name, {
                                configurable: true,
                                enumerable: false,
                                writable: true,
                                value: method
                            });
                        };
                    } else {
                        defineProperty = function (object, name, method, forceAssign) {
                            if (!forceAssign && (name in object)) { return; }
                            object[name] = method;
                        };
                    }
                    var defineProperties = function (object, map, forceAssign) {
                        for (var name in map) {
                            if (ObjectPrototype.hasOwnProperty.call(map, name)) {
                                defineProperty(object, name, map[name], forceAssign);
                            }
                        }
                    };

                    var toObject = function (o) {
                        if (o == null) { // this matches both null and undefined
                            throw new TypeError("can't convert " + o + ' to object');
                        }
                        return Object(o);
                    };

//
// Util
// ======
//

// ES5 9.4
// http://es5.github.com/#x9.4
// http://jsperf.com/to-integer

                    function toInteger(num) {
                        var n = +num;
                        if (n !== n) { // isNaN
                            n = 0;
                        } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {
                            n = (n > 0 || -1) * Math.floor(Math.abs(n));
                        }
                        return n;
                    }

                    function ToUint32(x) {
                        return x >>> 0;
                    }

//
// Function
// ========
//

// ES-5 15.3.4.5
// http://es5.github.com/#x15.3.4.5

                    function Empty() {}

                    defineProperties(FunctionPrototype, {
                        bind: function bind(that) { // .length is 1
                            // 1. Let Target be the this value.
                            var target = this;
                            // 2. If IsCallable(Target) is false, throw a TypeError exception.
                            if (!isFunction(target)) {
                                throw new TypeError('Function.prototype.bind called on incompatible ' + target);
                            }
                            // 3. Let A be a new (possibly empty) internal list of all of the
                            //   argument values provided after thisArg (arg1, arg2 etc), in order.
                            // XXX slicedArgs will stand in for "A" if used
                            var args = array_slice.call(arguments, 1); // for normal call
                            // 4. Let F be a new native ECMAScript object.
                            // 11. Set the [[Prototype]] internal property of F to the standard
                            //   built-in Function prototype object as specified in 15.3.3.1.
                            // 12. Set the [[Call]] internal property of F as described in
                            //   15.3.4.5.1.
                            // 13. Set the [[Construct]] internal property of F as described in
                            //   15.3.4.5.2.
                            // 14. Set the [[HasInstance]] internal property of F as described in
                            //   15.3.4.5.3.
                            var binder = function () {

                                if (this instanceof bound) {
                                    // 15.3.4.5.2 [[Construct]]
                                    // When the [[Construct]] internal method of a function object,
                                    // F that was created using the bind function is called with a
                                    // list of arguments ExtraArgs, the following steps are taken:
                                    // 1. Let target be the value of F's [[TargetFunction]]
                                    //   internal property.
                                    // 2. If target has no [[Construct]] internal method, a
                                    //   TypeError exception is thrown.
                                    // 3. Let boundArgs be the value of F's [[BoundArgs]] internal
                                    //   property.
                                    // 4. Let args be a new list containing the same values as the
                                    //   list boundArgs in the same order followed by the same
                                    //   values as the list ExtraArgs in the same order.
                                    // 5. Return the result of calling the [[Construct]] internal
                                    //   method of target providing args as the arguments.

                                    var result = target.apply(
                                        this,
                                        args.concat(array_slice.call(arguments))
                                    );
                                    if (Object(result) === result) {
                                        return result;
                                    }
                                    return this;

                                } else {
                                    // 15.3.4.5.1 [[Call]]
                                    // When the [[Call]] internal method of a function object, F,
                                    // which was created using the bind function is called with a
                                    // this value and a list of arguments ExtraArgs, the following
                                    // steps are taken:
                                    // 1. Let boundArgs be the value of F's [[BoundArgs]] internal
                                    //   property.
                                    // 2. Let boundThis be the value of F's [[BoundThis]] internal
                                    //   property.
                                    // 3. Let target be the value of F's [[TargetFunction]] internal
                                    //   property.
                                    // 4. Let args be a new list containing the same values as the
                                    //   list boundArgs in the same order followed by the same
                                    //   values as the list ExtraArgs in the same order.
                                    // 5. Return the result of calling the [[Call]] internal method
                                    //   of target providing boundThis as the this value and
                                    //   providing args as the arguments.

                                    // equiv: target.call(this, ...boundArgs, ...args)
                                    return target.apply(
                                        that,
                                        args.concat(array_slice.call(arguments))
                                    );

                                }

                            };

                            // 15. If the [[Class]] internal property of Target is "Function", then
                            //     a. Let L be the length property of Target minus the length of A.
                            //     b. Set the length own property of F to either 0 or L, whichever is
                            //       larger.
                            // 16. Else set the length own property of F to 0.

                            var boundLength = Math.max(0, target.length - args.length);

                            // 17. Set the attributes of the length own property of F to the values
                            //   specified in 15.3.5.1.
                            var boundArgs = [];
                            for (var i = 0; i < boundLength; i++) {
                                boundArgs.push('$' + i);
                            }

                            // XXX Build a dynamic function with desired amount of arguments is the only
                            // way to set the length property of a function.
                            // In environments where Content Security Policies enabled (Chrome extensions,
                            // for ex.) all use of eval or Function costructor throws an exception.
                            // However in all of these environments Function.prototype.bind exists
                            // and so this code will never be executed.
                            var bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);

                            if (target.prototype) {
                                Empty.prototype = target.prototype;
                                bound.prototype = new Empty();
                                // Clean up dangling references.
                                Empty.prototype = null;
                            }

                            // TODO
                            // 18. Set the [[Extensible]] internal property of F to true.

                            // TODO
                            // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).
                            // 20. Call the [[DefineOwnProperty]] internal method of F with
                            //   arguments "caller", PropertyDescriptor {[[Get]]: thrower, [[Set]]:
                            //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and
                            //   false.
                            // 21. Call the [[DefineOwnProperty]] internal method of F with
                            //   arguments "arguments", PropertyDescriptor {[[Get]]: thrower,
                            //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},
                            //   and false.

                            // TODO
                            // NOTE Function objects created using Function.prototype.bind do not
                            // have a prototype property or the [[Code]], [[FormalParameters]], and
                            // [[Scope]] internal properties.
                            // XXX can't delete prototype in pure-js.

                            // 22. Return F.
                            return bound;
                        }
                    });

//
// Array
// =====
//

// ES5 15.4.3.2
// http://es5.github.com/#x15.4.3.2
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray
                    defineProperties(Array, { isArray: isArray });


                    var boxedString = Object('a');
                    var splitString = boxedString[0] !== 'a' || !(0 in boxedString);

                    var properlyBoxesContext = function properlyBoxed(method) {
                        // Check node 0.6.21 bug where third parameter is not boxed
                        var properlyBoxesNonStrict = true;
                        var properlyBoxesStrict = true;
                        if (method) {
                            method.call('foo', function (_, __, context) {
                                if (typeof context !== 'object') { properlyBoxesNonStrict = false; }
                            });

                            method.call([1], function () {
                                'use strict';
                                properlyBoxesStrict = typeof this === 'string';
                            }, 'x');
                        }
                        return !!method && properlyBoxesNonStrict && properlyBoxesStrict;
                    };

                    defineProperties(ArrayPrototype, {
                        forEach: function forEach(fun /*, thisp*/) {
                            var object = toObject(this),
                                self = splitString && isString(this) ? this.split('') : object,
                                thisp = arguments[1],
                                i = -1,
                                length = self.length >>> 0;

                            // If no callback function or if callback is not a callable function
                            if (!isFunction(fun)) {
                                throw new TypeError(); // TODO message
                            }

                            while (++i < length) {
                                if (i in self) {
                                    // Invoke the callback function with call, passing arguments:
                                    // context, property value, property key, thisArg object
                                    // context
                                    fun.call(thisp, self[i], i, object);
                                }
                            }
                        }
                    }, !properlyBoxesContext(ArrayPrototype.forEach));

// ES5 15.4.4.14
// http://es5.github.com/#x15.4.4.14
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf
                    var hasFirefox2IndexOfBug = Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;
                    defineProperties(ArrayPrototype, {
                        indexOf: function indexOf(sought /*, fromIndex */ ) {
                            var self = splitString && isString(this) ? this.split('') : toObject(this),
                                length = self.length >>> 0;

                            if (!length) {
                                return -1;
                            }

                            var i = 0;
                            if (arguments.length > 1) {
                                i = toInteger(arguments[1]);
                            }

                            // handle negative indices
                            i = i >= 0 ? i : Math.max(0, length + i);
                            for (; i < length; i++) {
                                if (i in self && self[i] === sought) {
                                    return i;
                                }
                            }
                            return -1;
                        }
                    }, hasFirefox2IndexOfBug);

//
// String
// ======
//

// ES5 15.5.4.14
// http://es5.github.com/#x15.5.4.14

// [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]
// Many browsers do not split properly with regular expressions or they
// do not perform the split correctly under obscure conditions.
// See http://blog.stevenlevithan.com/archives/cross-browser-split
// I've tested in many browsers and this seems to cover the deviant ones:
//    'ab'.split(/(?:ab)*/) should be ["", ""], not [""]
//    '.'.split(/(.?)(.?)/) should be ["", ".", "", ""], not ["", ""]
//    'tesst'.split(/(s)*/) should be ["t", undefined, "e", "s", "t"], not
//       [undefined, "t", undefined, "e", ...]
//    ''.split(/.?/) should be [], not [""]
//    '.'.split(/()()/) should be ["."], not ["", "", "."]

                    var string_split = StringPrototype.split;
                    if (
                        'ab'.split(/(?:ab)*/).length !== 2 ||
                        '.'.split(/(.?)(.?)/).length !== 4 ||
                        'tesst'.split(/(s)*/)[1] === 't' ||
                        'test'.split(/(?:)/, -1).length !== 4 ||
                        ''.split(/.?/).length ||
                        '.'.split(/()()/).length > 1
                    ) {
                        (function () {
                            var compliantExecNpcg = /()??/.exec('')[1] === void 0; // NPCG: nonparticipating capturing group

                            StringPrototype.split = function (separator, limit) {
                                var string = this;
                                if (separator === void 0 && limit === 0) {
                                    return [];
                                }

                                // If `separator` is not a regex, use native split
                                if (_toString.call(separator) !== '[object RegExp]') {
                                    return string_split.call(this, separator, limit);
                                }

                                var output = [],
                                    flags = (separator.ignoreCase ? 'i' : '') +
                                        (separator.multiline  ? 'm' : '') +
                                        (separator.extended   ? 'x' : '') + // Proposed for ES6
                                        (separator.sticky     ? 'y' : ''), // Firefox 3+
                                    lastLastIndex = 0,
                                    // Make `global` and avoid `lastIndex` issues by working with a copy
                                    separator2, match, lastIndex, lastLength;
                                separator = new RegExp(separator.source, flags + 'g');
                                string += ''; // Type-convert
                                if (!compliantExecNpcg) {
                                    // Doesn't need flags gy, but they don't hurt
                                    separator2 = new RegExp('^' + separator.source + '$(?!\\s)', flags);
                                }
                                /* Values for `limit`, per the spec:
             * If undefined: 4294967295 // Math.pow(2, 32) - 1
             * If 0, Infinity, or NaN: 0
             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;
             * If negative number: 4294967296 - Math.floor(Math.abs(limit))
             * If other: Type-convert, then use the above rules
             */
                                limit = limit === void 0 ?
                                    -1 >>> 0 : // Math.pow(2, 32) - 1
                                    ToUint32(limit);
                                while (match = separator.exec(string)) {
                                    // `separator.lastIndex` is not reliable cross-browser
                                    lastIndex = match.index + match[0].length;
                                    if (lastIndex > lastLastIndex) {
                                        output.push(string.slice(lastLastIndex, match.index));
                                        // Fix browsers whose `exec` methods don't consistently return `undefined` for
                                        // nonparticipating capturing groups
                                        if (!compliantExecNpcg && match.length > 1) {
                                            match[0].replace(separator2, function () {
                                                for (var i = 1; i < arguments.length - 2; i++) {
                                                    if (arguments[i] === void 0) {
                                                        match[i] = void 0;
                                                    }
                                                }
                                            });
                                        }
                                        if (match.length > 1 && match.index < string.length) {
                                            ArrayPrototype.push.apply(output, match.slice(1));
                                        }
                                        lastLength = match[0].length;
                                        lastLastIndex = lastIndex;
                                        if (output.length >= limit) {
                                            break;
                                        }
                                    }
                                    if (separator.lastIndex === match.index) {
                                        separator.lastIndex++; // Avoid an infinite loop
                                    }
                                }
                                if (lastLastIndex === string.length) {
                                    if (lastLength || !separator.test('')) {
                                        output.push('');
                                    }
                                } else {
                                    output.push(string.slice(lastLastIndex));
                                }
                                return output.length > limit ? output.slice(0, limit) : output;
                            };
                        }());

// [bugfix, chrome]
// If separator is undefined, then the result array contains just one String,
// which is the this value (converted to a String). If limit is not undefined,
// then the output array is truncated so that it contains no more than limit
// elements.
// "0".split(undefined, 0) -> []
                    } else if ('0'.split(void 0, 0).length) {
                        StringPrototype.split = function split(separator, limit) {
                            if (separator === void 0 && limit === 0) { return []; }
                            return string_split.call(this, separator, limit);
                        };
                    }

// ECMA-262, 3rd B.2.3
// Not an ECMAScript standard, although ECMAScript 3rd Edition has a
// non-normative section suggesting uniform semantics and it should be
// normalized across all browsers
// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE
                    var string_substr = StringPrototype.substr;
                    var hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';
                    defineProperties(StringPrototype, {
                        substr: function substr(start, length) {
                            return string_substr.call(
                                this,
                                start < 0 ? ((start = this.length + start) < 0 ? 0 : start) : start,
                                length
                            );
                        }
                    }, hasNegativeSubstrBug);

                },{}],16:[function(require,module,exports){
                    'use strict';

                    module.exports = [
                        // streaming transports
                        require('./transport/websocket')
                        , require('./transport/xhr-streaming')
                        , require('./transport/xdr-streaming')
                        , require('./transport/eventsource')
                        , require('./transport/lib/iframe-wrap')(require('./transport/eventsource'))

                        // polling transports
                        , require('./transport/htmlfile')
                        , require('./transport/lib/iframe-wrap')(require('./transport/htmlfile'))
                        , require('./transport/xhr-polling')
                        , require('./transport/xdr-polling')
                        , require('./transport/lib/iframe-wrap')(require('./transport/xhr-polling'))
                        , require('./transport/jsonp-polling')
                    ];

                },{"./transport/eventsource":20,"./transport/htmlfile":21,"./transport/jsonp-polling":23,"./transport/lib/iframe-wrap":26,"./transport/websocket":38,"./transport/xdr-polling":39,"./transport/xdr-streaming":40,"./transport/xhr-polling":41,"./transport/xhr-streaming":42}],17:[function(require,module,exports){
                    (function (process,global){
                        'use strict';

                        var EventEmitter = require('events').EventEmitter
                            , inherits = require('inherits')
                            , utils = require('../../utils/event')
                            , urlUtils = require('../../utils/url')
                            , XHR = global.XMLHttpRequest
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:browser:xhr');
                        }

                        function AbstractXHRObject(method, url, payload, opts) {
                            debug(method, url);
                            var self = this;
                            EventEmitter.call(this);

                            setTimeout(function () {
                                self._start(method, url, payload, opts);
                            }, 0);
                        }

                        inherits(AbstractXHRObject, EventEmitter);

                        AbstractXHRObject.prototype._start = function(method, url, payload, opts) {
                            var self = this;

                            try {
                                this.xhr = new XHR();
                            } catch (x) {
                                // intentionally empty
                            }

                            if (!this.xhr) {
                                debug('no xhr');
                                this.emit('finish', 0, 'no xhr support');
                                this._cleanup();
                                return;
                            }

                            // several browsers cache POSTs
                            url = urlUtils.addQuery(url, 't=' + (+new Date()));

                            // Explorer tends to keep connection open, even after the
                            // tab gets closed: http://bugs.jquery.com/ticket/5280
                            this.unloadRef = utils.unloadAdd(function() {
                                debug('unload cleanup');
                                self._cleanup(true);
                            });
                            try {
                                this.xhr.open(method, url, true);
                                if (this.timeout && 'timeout' in this.xhr) {
                                    this.xhr.timeout = this.timeout;
                                    this.xhr.ontimeout = function() {
                                        debug('xhr timeout');
                                        self.emit('finish', 0, '');
                                        self._cleanup(false);
                                    };
                                }
                            } catch (e) {
                                debug('exception', e);
                                // IE raises an exception on wrong port.
                                this.emit('finish', 0, '');
                                this._cleanup(false);
                                return;
                            }

                            if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {
                                debug('withCredentials');
                                // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :
                                // "This never affects same-site requests."

                                this.xhr.withCredentials = true;
                            }
                            if (opts && opts.headers) {
                                for (var key in opts.headers) {
                                    this.xhr.setRequestHeader(key, opts.headers[key]);
                                }
                            }

                            this.xhr.onreadystatechange = function() {
                                if (self.xhr) {
                                    var x = self.xhr;
                                    var text, status;
                                    debug('readyState', x.readyState);
                                    switch (x.readyState) {
                                        case 3:
                                            // IE doesn't like peeking into responseText or status
                                            // on Microsoft.XMLHTTP and readystate=3
                                            try {
                                                status = x.status;
                                                text = x.responseText;
                                            } catch (e) {
                                                // intentionally empty
                                            }
                                            debug('status', status);
                                            // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450
                                            if (status === 1223) {
                                                status = 204;
                                            }

                                            // IE does return readystate == 3 for 404 answers.
                                            if (status === 200 && text && text.length > 0) {
                                                debug('chunk');
                                                self.emit('chunk', status, text);
                                            }
                                            break;
                                        case 4:
                                            status = x.status;
                                            debug('status', status);
                                            // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450
                                            if (status === 1223) {
                                                status = 204;
                                            }
                                            // IE returns this for a bad port
                                            // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx
                                            if (status === 12005 || status === 12029) {
                                                status = 0;
                                            }

                                            debug('finish', status, x.responseText);
                                            self.emit('finish', status, x.responseText);
                                            self._cleanup(false);
                                            break;
                                    }
                                }
                            };

                            try {
                                self.xhr.send(payload);
                            } catch (e) {
                                self.emit('finish', 0, '');
                                self._cleanup(false);
                            }
                        };

                        AbstractXHRObject.prototype._cleanup = function(abort) {
                            debug('cleanup');
                            if (!this.xhr) {
                                return;
                            }
                            this.removeAllListeners();
                            utils.unloadDel(this.unloadRef);

                            // IE needs this field to be a function
                            this.xhr.onreadystatechange = function() {};
                            if (this.xhr.ontimeout) {
                                this.xhr.ontimeout = null;
                            }

                            if (abort) {
                                try {
                                    this.xhr.abort();
                                } catch (x) {
                                    // intentionally empty
                                }
                            }
                            this.unloadRef = this.xhr = null;
                        };

                        AbstractXHRObject.prototype.close = function() {
                            debug('close');
                            this._cleanup(true);
                        };

                        AbstractXHRObject.enabled = !!XHR;
// override XMLHttpRequest for IE6/7
// obfuscate to avoid firewalls
                        var axo = ['Active'].concat('Object').join('X');
                        if (!AbstractXHRObject.enabled && (axo in global)) {
                            debug('overriding xmlhttprequest');
                            XHR = function() {
                                try {
                                    return new global[axo]('Microsoft.XMLHTTP');
                                } catch (e) {
                                    return null;
                                }
                            };
                            AbstractXHRObject.enabled = !!new XHR();
                        }

                        var cors = false;
                        try {
                            cors = 'withCredentials' in new XHR();
                        } catch (ignored) {
                            // intentionally empty
                        }

                        AbstractXHRObject.supportsCORS = cors;

                        module.exports = AbstractXHRObject;

                    }).call(this,{ env: {} },typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"../../utils/event":46,"../../utils/url":52,"debug":55,"events":3,"inherits":57}],18:[function(require,module,exports){
                    (function (global){
                        module.exports = global.EventSource;

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{}],19:[function(require,module,exports){
                    (function (global){
                        'use strict';

                        var Driver = global.WebSocket || global.MozWebSocket;
                        if (Driver) {
                            module.exports = function WebSocketBrowserDriver(url) {
                                return new Driver(url);
                            };
                        } else {
                            module.exports = undefined;
                        }

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{}],20:[function(require,module,exports){
                    'use strict';

                    var inherits = require('inherits')
                        , AjaxBasedTransport = require('./lib/ajax-based')
                        , EventSourceReceiver = require('./receiver/eventsource')
                        , XHRCorsObject = require('./sender/xhr-cors')
                        , EventSourceDriver = require('eventsource')
                    ;

                    function EventSourceTransport(transUrl) {
                        if (!EventSourceTransport.enabled()) {
                            throw new Error('Transport created when disabled');
                        }

                        AjaxBasedTransport.call(this, transUrl, '/eventsource', EventSourceReceiver, XHRCorsObject);
                    }

                    inherits(EventSourceTransport, AjaxBasedTransport);

                    EventSourceTransport.enabled = function() {
                        return !!EventSourceDriver;
                    };

                    EventSourceTransport.transportName = 'eventsource';
                    EventSourceTransport.roundTrips = 2;

                    module.exports = EventSourceTransport;

                },{"./lib/ajax-based":24,"./receiver/eventsource":29,"./sender/xhr-cors":35,"eventsource":18,"inherits":57}],21:[function(require,module,exports){
                    'use strict';

                    var inherits = require('inherits')
                        , HtmlfileReceiver = require('./receiver/htmlfile')
                        , XHRLocalObject = require('./sender/xhr-local')
                        , AjaxBasedTransport = require('./lib/ajax-based')
                    ;

                    function HtmlFileTransport(transUrl) {
                        if (!HtmlfileReceiver.enabled) {
                            throw new Error('Transport created when disabled');
                        }
                        AjaxBasedTransport.call(this, transUrl, '/htmlfile', HtmlfileReceiver, XHRLocalObject);
                    }

                    inherits(HtmlFileTransport, AjaxBasedTransport);

                    HtmlFileTransport.enabled = function(info) {
                        return HtmlfileReceiver.enabled && info.sameOrigin;
                    };

                    HtmlFileTransport.transportName = 'htmlfile';
                    HtmlFileTransport.roundTrips = 2;

                    module.exports = HtmlFileTransport;

                },{"./lib/ajax-based":24,"./receiver/htmlfile":30,"./sender/xhr-local":37,"inherits":57}],22:[function(require,module,exports){
                    (function (process){
                        'use strict';

// Few cool transports do work only for same-origin. In order to make
// them work cross-domain we shall use iframe, served from the
// remote domain. New browsers have capabilities to communicate with
// cross domain iframe using postMessage(). In IE it was implemented
// from IE 8+, but of course, IE got some details wrong:
//    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx
//    http://stevesouders.com/misc/test-postmessage.php

                        var inherits = require('inherits')
                            , JSON3 = require('json3')
                            , EventEmitter = require('events').EventEmitter
                            , version = require('../version')
                            , urlUtils = require('../utils/url')
                            , iframeUtils = require('../utils/iframe')
                            , eventUtils = require('../utils/event')
                            , random = require('../utils/random')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:transport:iframe');
                        }

                        function IframeTransport(transport, transUrl, baseUrl) {
                            if (!IframeTransport.enabled()) {
                                throw new Error('Transport created when disabled');
                            }
                            EventEmitter.call(this);

                            var self = this;
                            this.origin = urlUtils.getOrigin(baseUrl);
                            this.baseUrl = baseUrl;
                            this.transUrl = transUrl;
                            this.transport = transport;
                            this.windowId = random.string(8);

                            var iframeUrl = urlUtils.addPath(baseUrl, '/iframe.html') + '#' + this.windowId;
                            debug(transport, transUrl, iframeUrl);

                            this.iframeObj = iframeUtils.createIframe(iframeUrl, function(r) {
                                debug('err callback');
                                self.emit('close', 1006, 'Unable to load an iframe (' + r + ')');
                                self.close();
                            });

                            this.onmessageCallback = this._message.bind(this);
                            eventUtils.attachEvent('message', this.onmessageCallback);
                        }

                        inherits(IframeTransport, EventEmitter);

                        IframeTransport.prototype.close = function() {
                            debug('close');
                            this.removeAllListeners();
                            if (this.iframeObj) {
                                eventUtils.detachEvent('message', this.onmessageCallback);
                                try {
                                    // When the iframe is not loaded, IE raises an exception
                                    // on 'contentWindow'.
                                    this.postMessage('c');
                                } catch (x) {
                                    // intentionally empty
                                }
                                this.iframeObj.cleanup();
                                this.iframeObj = null;
                                this.onmessageCallback = this.iframeObj = null;
                            }
                        };

                        IframeTransport.prototype._message = function(e) {
                            debug('message', e.data);
                            if (!urlUtils.isOriginEqual(e.origin, this.origin)) {
                                debug('not same origin', e.origin, this.origin);
                                return;
                            }

                            var iframeMessage;
                            try {
                                iframeMessage = JSON3.parse(e.data);
                            } catch (ignored) {
                                debug('bad json', e.data);
                                return;
                            }

                            if (iframeMessage.windowId !== this.windowId) {
                                debug('mismatched window id', iframeMessage.windowId, this.windowId);
                                return;
                            }

                            switch (iframeMessage.type) {
                                case 's':
                                    this.iframeObj.loaded();
                                    // window global dependency
                                    this.postMessage('s', JSON3.stringify([
                                        version
                                        , this.transport
                                        , this.transUrl
                                        , this.baseUrl
                                    ]));
                                    break;
                                case 't':
                                    this.emit('message', iframeMessage.data);
                                    break;
                                case 'c':
                                    var cdata;
                                    try {
                                        cdata = JSON3.parse(iframeMessage.data);
                                    } catch (ignored) {
                                        debug('bad json', iframeMessage.data);
                                        return;
                                    }
                                    this.emit('close', cdata[0], cdata[1]);
                                    this.close();
                                    break;
                            }
                        };

                        IframeTransport.prototype.postMessage = function(type, data) {
                            debug('postMessage', type, data);
                            this.iframeObj.post(JSON3.stringify({
                                windowId: this.windowId
                                , type: type
                                , data: data || ''
                            }), this.origin);
                        };

                        IframeTransport.prototype.send = function(message) {
                            debug('send', message);
                            this.postMessage('m', message);
                        };

                        IframeTransport.enabled = function() {
                            return iframeUtils.iframeEnabled;
                        };

                        IframeTransport.transportName = 'iframe';
                        IframeTransport.roundTrips = 2;

                        module.exports = IframeTransport;

                    }).call(this,{ env: {} })

                },{"../utils/event":46,"../utils/iframe":47,"../utils/random":50,"../utils/url":52,"../version":53,"debug":55,"events":3,"inherits":57,"json3":58}],23:[function(require,module,exports){
                    (function (global){
                        'use strict';

// The simplest and most robust transport, using the well-know cross
// domain hack - JSONP. This transport is quite inefficient - one
// message could use up to one http request. But at least it works almost
// everywhere.
// Known limitations:
//   o you will get a spinning cursor
//   o for Konqueror a dumb timer is needed to detect errors

                        var inherits = require('inherits')
                            , SenderReceiver = require('./lib/sender-receiver')
                            , JsonpReceiver = require('./receiver/jsonp')
                            , jsonpSender = require('./sender/jsonp')
                        ;

                        function JsonPTransport(transUrl) {
                            if (!JsonPTransport.enabled()) {
                                throw new Error('Transport created when disabled');
                            }
                            SenderReceiver.call(this, transUrl, '/jsonp', jsonpSender, JsonpReceiver);
                        }

                        inherits(JsonPTransport, SenderReceiver);

                        JsonPTransport.enabled = function() {
                            return !!global.document;
                        };

                        JsonPTransport.transportName = 'jsonp-polling';
                        JsonPTransport.roundTrips = 1;
                        JsonPTransport.needBody = true;

                        module.exports = JsonPTransport;

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"./lib/sender-receiver":28,"./receiver/jsonp":31,"./sender/jsonp":33,"inherits":57}],24:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var inherits = require('inherits')
                            , urlUtils = require('../../utils/url')
                            , SenderReceiver = require('./sender-receiver')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:ajax-based');
                        }

                        function createAjaxSender(AjaxObject) {
                            return function(url, payload, callback) {
                                debug('create ajax sender', url, payload);
                                var opt = {};
                                if (typeof payload === 'string') {
                                    opt.headers = {'Content-type': 'text/plain'};
                                }
                                var ajaxUrl = urlUtils.addPath(url, '/xhr_send');
                                var xo = new AjaxObject('POST', ajaxUrl, payload, opt);
                                xo.once('finish', function(status) {
                                    debug('finish', status);
                                    xo = null;

                                    if (status !== 200 && status !== 204) {
                                        return callback(new Error('http status ' + status));
                                    }
                                    callback();
                                });
                                return function() {
                                    debug('abort');
                                    xo.close();
                                    xo = null;

                                    var err = new Error('Aborted');
                                    err.code = 1000;
                                    callback(err);
                                };
                            };
                        }

                        function AjaxBasedTransport(transUrl, urlSuffix, Receiver, AjaxObject) {
                            SenderReceiver.call(this, transUrl, urlSuffix, createAjaxSender(AjaxObject), Receiver, AjaxObject);
                        }

                        inherits(AjaxBasedTransport, SenderReceiver);

                        module.exports = AjaxBasedTransport;

                    }).call(this,{ env: {} })

                },{"../../utils/url":52,"./sender-receiver":28,"debug":55,"inherits":57}],25:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var inherits = require('inherits')
                            , EventEmitter = require('events').EventEmitter
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:buffered-sender');
                        }

                        function BufferedSender(url, sender) {
                            debug(url);
                            EventEmitter.call(this);
                            this.sendBuffer = [];
                            this.sender = sender;
                            this.url = url;
                        }

                        inherits(BufferedSender, EventEmitter);

                        BufferedSender.prototype.send = function(message) {
                            debug('send', message);
                            this.sendBuffer.push(message);
                            if (!this.sendStop) {
                                this.sendSchedule();
                            }
                        };

// For polling transports in a situation when in the message callback,
// new message is being send. If the sending connection was started
// before receiving one, it is possible to saturate the network and
// timeout due to the lack of receiving socket. To avoid that we delay
// sending messages by some small time, in order to let receiving
// connection be started beforehand. This is only a halfmeasure and
// does not fix the big problem, but it does make the tests go more
// stable on slow networks.
                        BufferedSender.prototype.sendScheduleWait = function() {
                            debug('sendScheduleWait');
                            var self = this;
                            var tref;
                            this.sendStop = function() {
                                debug('sendStop');
                                self.sendStop = null;
                                clearTimeout(tref);
                            };
                            tref = setTimeout(function() {
                                debug('timeout');
                                self.sendStop = null;
                                self.sendSchedule();
                            }, 25);
                        };

                        BufferedSender.prototype.sendSchedule = function() {
                            debug('sendSchedule', this.sendBuffer.length);
                            var self = this;
                            if (this.sendBuffer.length > 0) {
                                var payload = '[' + this.sendBuffer.join(',') + ']';
                                this.sendStop = this.sender(this.url, payload, function(err) {
                                    self.sendStop = null;
                                    if (err) {
                                        debug('error', err);
                                        self.emit('close', err.code || 1006, 'Sending error: ' + err);
                                        self.close();
                                    } else {
                                        self.sendScheduleWait();
                                    }
                                });
                                this.sendBuffer = [];
                            }
                        };

                        BufferedSender.prototype._cleanup = function() {
                            debug('_cleanup');
                            this.removeAllListeners();
                        };

                        BufferedSender.prototype.close = function() {
                            debug('close');
                            this._cleanup();
                            if (this.sendStop) {
                                this.sendStop();
                                this.sendStop = null;
                            }
                        };

                        module.exports = BufferedSender;

                    }).call(this,{ env: {} })

                },{"debug":55,"events":3,"inherits":57}],26:[function(require,module,exports){
                    (function (global){
                        'use strict';

                        var inherits = require('inherits')
                            , IframeTransport = require('../iframe')
                            , objectUtils = require('../../utils/object')
                        ;

                        module.exports = function(transport) {

                            function IframeWrapTransport(transUrl, baseUrl) {
                                IframeTransport.call(this, transport.transportName, transUrl, baseUrl);
                            }

                            inherits(IframeWrapTransport, IframeTransport);

                            IframeWrapTransport.enabled = function(url, info) {
                                if (!global.document) {
                                    return false;
                                }

                                var iframeInfo = objectUtils.extend({}, info);
                                iframeInfo.sameOrigin = true;
                                return transport.enabled(iframeInfo) && IframeTransport.enabled();
                            };

                            IframeWrapTransport.transportName = 'iframe-' + transport.transportName;
                            IframeWrapTransport.needBody = true;
                            IframeWrapTransport.roundTrips = IframeTransport.roundTrips + transport.roundTrips - 1; // html, javascript (2) + transport - no CORS (1)

                            IframeWrapTransport.facadeTransport = transport;

                            return IframeWrapTransport;
                        };

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"../../utils/object":49,"../iframe":22,"inherits":57}],27:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var inherits = require('inherits')
                            , EventEmitter = require('events').EventEmitter
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:polling');
                        }

                        function Polling(Receiver, receiveUrl, AjaxObject) {
                            debug(receiveUrl);
                            EventEmitter.call(this);
                            this.Receiver = Receiver;
                            this.receiveUrl = receiveUrl;
                            this.AjaxObject = AjaxObject;
                            this._scheduleReceiver();
                        }

                        inherits(Polling, EventEmitter);

                        Polling.prototype._scheduleReceiver = function() {
                            debug('_scheduleReceiver');
                            var self = this;
                            var poll = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);

                            poll.on('message', function(msg) {
                                debug('message', msg);
                                self.emit('message', msg);
                            });

                            poll.once('close', function(code, reason) {
                                debug('close', code, reason, self.pollIsClosing);
                                self.poll = poll = null;

                                if (!self.pollIsClosing) {
                                    if (reason === 'network') {
                                        self._scheduleReceiver();
                                    } else {
                                        self.emit('close', code || 1006, reason);
                                        self.removeAllListeners();
                                    }
                                }
                            });
                        };

                        Polling.prototype.abort = function() {
                            debug('abort');
                            this.removeAllListeners();
                            this.pollIsClosing = true;
                            if (this.poll) {
                                this.poll.abort();
                            }
                        };

                        module.exports = Polling;

                    }).call(this,{ env: {} })

                },{"debug":55,"events":3,"inherits":57}],28:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var inherits = require('inherits')
                            , urlUtils = require('../../utils/url')
                            , BufferedSender = require('./buffered-sender')
                            , Polling = require('./polling')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:sender-receiver');
                        }

                        function SenderReceiver(transUrl, urlSuffix, senderFunc, Receiver, AjaxObject) {
                            var pollUrl = urlUtils.addPath(transUrl, urlSuffix);
                            debug(pollUrl);
                            var self = this;
                            BufferedSender.call(this, transUrl, senderFunc);

                            this.poll = new Polling(Receiver, pollUrl, AjaxObject);
                            this.poll.on('message', function(msg) {
                                debug('poll message', msg);
                                self.emit('message', msg);
                            });
                            this.poll.once('close', function(code, reason) {
                                debug('poll close', code, reason);
                                self.poll = null;
                                self.emit('close', code, reason);
                                self.close();
                            });
                        }

                        inherits(SenderReceiver, BufferedSender);

                        SenderReceiver.prototype.close = function() {
                            BufferedSender.prototype.close.call(this);
                            debug('close');
                            this.removeAllListeners();
                            if (this.poll) {
                                this.poll.abort();
                                this.poll = null;
                            }
                        };

                        module.exports = SenderReceiver;

                    }).call(this,{ env: {} })

                },{"../../utils/url":52,"./buffered-sender":25,"./polling":27,"debug":55,"inherits":57}],29:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var inherits = require('inherits')
                            , EventEmitter = require('events').EventEmitter
                            , EventSourceDriver = require('eventsource')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:receiver:eventsource');
                        }

                        function EventSourceReceiver(url) {
                            debug(url);
                            EventEmitter.call(this);

                            var self = this;
                            var es = this.es = new EventSourceDriver(url);
                            es.onmessage = function(e) {
                                debug('message', e.data);
                                self.emit('message', decodeURI(e.data));
                            };
                            es.onerror = function(e) {
                                debug('error', es.readyState, e);
                                // ES on reconnection has readyState = 0 or 1.
                                // on network error it's CLOSED = 2
                                var reason = (es.readyState !== 2 ? 'network' : 'permanent');
                                self._cleanup();
                                self._close(reason);
                            };
                        }

                        inherits(EventSourceReceiver, EventEmitter);

                        EventSourceReceiver.prototype.abort = function() {
                            debug('abort');
                            this._cleanup();
                            this._close('user');
                        };

                        EventSourceReceiver.prototype._cleanup = function() {
                            debug('cleanup');
                            var es = this.es;
                            if (es) {
                                es.onmessage = es.onerror = null;
                                es.close();
                                this.es = null;
                            }
                        };

                        EventSourceReceiver.prototype._close = function(reason) {
                            debug('close', reason);
                            var self = this;
                            // Safari and chrome < 15 crash if we close window before
                            // waiting for ES cleanup. See:
                            // https://code.google.com/p/chromium/issues/detail?id=89155
                            setTimeout(function() {
                                self.emit('close', null, reason);
                                self.removeAllListeners();
                            }, 200);
                        };

                        module.exports = EventSourceReceiver;

                    }).call(this,{ env: {} })

                },{"debug":55,"events":3,"eventsource":18,"inherits":57}],30:[function(require,module,exports){
                    (function (process,global){
                        'use strict';

                        var inherits = require('inherits')
                            , iframeUtils = require('../../utils/iframe')
                            , urlUtils = require('../../utils/url')
                            , EventEmitter = require('events').EventEmitter
                            , random = require('../../utils/random')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:receiver:htmlfile');
                        }

                        function HtmlfileReceiver(url) {
                            debug(url);
                            EventEmitter.call(this);
                            var self = this;
                            iframeUtils.polluteGlobalNamespace();

                            this.id = 'a' + random.string(6);
                            url = urlUtils.addQuery(url, 'c=' + decodeURIComponent(iframeUtils.WPrefix + '.' + this.id));

                            debug('using htmlfile', HtmlfileReceiver.htmlfileEnabled);
                            var constructFunc = HtmlfileReceiver.htmlfileEnabled ?
                                iframeUtils.createHtmlfile : iframeUtils.createIframe;

                            global[iframeUtils.WPrefix][this.id] = {
                                start: function() {
                                    debug('start');
                                    self.iframeObj.loaded();
                                }
                                , message: function(data) {
                                    debug('message', data);
                                    self.emit('message', data);
                                }
                                , stop: function() {
                                    debug('stop');
                                    self._cleanup();
                                    self._close('network');
                                }
                            };
                            this.iframeObj = constructFunc(url, function() {
                                debug('callback');
                                self._cleanup();
                                self._close('permanent');
                            });
                        }

                        inherits(HtmlfileReceiver, EventEmitter);

                        HtmlfileReceiver.prototype.abort = function() {
                            debug('abort');
                            this._cleanup();
                            this._close('user');
                        };

                        HtmlfileReceiver.prototype._cleanup = function() {
                            debug('_cleanup');
                            if (this.iframeObj) {
                                this.iframeObj.cleanup();
                                this.iframeObj = null;
                            }
                            delete global[iframeUtils.WPrefix][this.id];
                        };

                        HtmlfileReceiver.prototype._close = function(reason) {
                            debug('_close', reason);
                            this.emit('close', null, reason);
                            this.removeAllListeners();
                        };

                        HtmlfileReceiver.htmlfileEnabled = false;

// obfuscate to avoid firewalls
                        var axo = ['Active'].concat('Object').join('X');
                        if (axo in global) {
                            try {
                                HtmlfileReceiver.htmlfileEnabled = !!new global[axo]('htmlfile');
                            } catch (x) {
                                // intentionally empty
                            }
                        }

                        HtmlfileReceiver.enabled = HtmlfileReceiver.htmlfileEnabled || iframeUtils.iframeEnabled;

                        module.exports = HtmlfileReceiver;

                    }).call(this,{ env: {} },typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"../../utils/iframe":47,"../../utils/random":50,"../../utils/url":52,"debug":55,"events":3,"inherits":57}],31:[function(require,module,exports){
                    (function (process,global){
                        'use strict';

                        var utils = require('../../utils/iframe')
                            , random = require('../../utils/random')
                            , browser = require('../../utils/browser')
                            , urlUtils = require('../../utils/url')
                            , inherits = require('inherits')
                            , EventEmitter = require('events').EventEmitter
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:receiver:jsonp');
                        }

                        function JsonpReceiver(url) {
                            debug(url);
                            var self = this;
                            EventEmitter.call(this);

                            utils.polluteGlobalNamespace();

                            this.id = 'a' + random.string(6);
                            var urlWithId = urlUtils.addQuery(url, 'c=' + encodeURIComponent(utils.WPrefix + '.' + this.id));

                            global[utils.WPrefix][this.id] = this._callback.bind(this);
                            this._createScript(urlWithId);

                            // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.
                            this.timeoutId = setTimeout(function() {
                                debug('timeout');
                                self._abort(new Error('JSONP script loaded abnormally (timeout)'));
                            }, JsonpReceiver.timeout);
                        }

                        inherits(JsonpReceiver, EventEmitter);

                        JsonpReceiver.prototype.abort = function() {
                            debug('abort');
                            if (global[utils.WPrefix][this.id]) {
                                var err = new Error('JSONP user aborted read');
                                err.code = 1000;
                                this._abort(err);
                            }
                        };

                        JsonpReceiver.timeout = 35000;
                        JsonpReceiver.scriptErrorTimeout = 1000;

                        JsonpReceiver.prototype._callback = function(data) {
                            debug('_callback', data);
                            this._cleanup();

                            if (this.aborting) {
                                return;
                            }

                            if (data) {
                                debug('message', data);
                                this.emit('message', data);
                            }
                            this.emit('close', null, 'network');
                            this.removeAllListeners();
                        };

                        JsonpReceiver.prototype._abort = function(err) {
                            debug('_abort', err);
                            this._cleanup();
                            this.aborting = true;
                            this.emit('close', err.code, err.message);
                            this.removeAllListeners();
                        };

                        JsonpReceiver.prototype._cleanup = function() {
                            debug('_cleanup');
                            clearTimeout(this.timeoutId);
                            if (this.script2) {
                                this.script2.parentNode.removeChild(this.script2);
                                this.script2 = null;
                            }
                            if (this.script) {
                                var script = this.script;
                                // Unfortunately, you can't really abort script loading of
                                // the script.
                                script.parentNode.removeChild(script);
                                script.onreadystatechange = script.onerror =
                                    script.onload = script.onclick = null;
                                this.script = null;
                            }
                            delete global[utils.WPrefix][this.id];
                        };

                        JsonpReceiver.prototype._scriptError = function() {
                            debug('_scriptError');
                            var self = this;
                            if (this.errorTimer) {
                                return;
                            }

                            this.errorTimer = setTimeout(function() {
                                if (!self.loadedOkay) {
                                    self._abort(new Error('JSONP script loaded abnormally (onerror)'));
                                }
                            }, JsonpReceiver.scriptErrorTimeout);
                        };

                        JsonpReceiver.prototype._createScript = function(url) {
                            debug('_createScript', url);
                            var self = this;
                            var script = this.script = global.document.createElement('script');
                            var script2;  // Opera synchronous load trick.

                            script.id = 'a' + random.string(8);
                            script.src = url;
                            script.type = 'text/javascript';
                            script.charset = 'UTF-8';
                            script.onerror = this._scriptError.bind(this);
                            script.onload = function() {
                                debug('onload');
                                self._abort(new Error('JSONP script loaded abnormally (onload)'));
                            };

                            // IE9 fires 'error' event after onreadystatechange or before, in random order.
                            // Use loadedOkay to determine if actually errored
                            script.onreadystatechange = function() {
                                debug('onreadystatechange', script.readyState);
                                if (/loaded|closed/.test(script.readyState)) {
                                    if (script && script.htmlFor && script.onclick) {
                                        self.loadedOkay = true;
                                        try {
                                            // In IE, actually execute the script.
                                            script.onclick();
                                        } catch (x) {
                                            // intentionally empty
                                        }
                                    }
                                    if (script) {
                                        self._abort(new Error('JSONP script loaded abnormally (onreadystatechange)'));
                                    }
                                }
                            };
                            // IE: event/htmlFor/onclick trick.
                            // One can't rely on proper order for onreadystatechange. In order to
                            // make sure, set a 'htmlFor' and 'event' properties, so that
                            // script code will be installed as 'onclick' handler for the
                            // script object. Later, onreadystatechange, manually execute this
                            // code. FF and Chrome doesn't work with 'event' and 'htmlFor'
                            // set. For reference see:
                            //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html
                            // Also, read on that about script ordering:
                            //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order
                            if (typeof script.async === 'undefined' && global.document.attachEvent) {
                                // According to mozilla docs, in recent browsers script.async defaults
                                // to 'true', so we may use it to detect a good browser:
                                // https://developer.mozilla.org/en/HTML/Element/script
                                if (!browser.isOpera()) {
                                    // Naively assume we're in IE
                                    try {
                                        script.htmlFor = script.id;
                                        script.event = 'onclick';
                                    } catch (x) {
                                        // intentionally empty
                                    }
                                    script.async = true;
                                } else {
                                    // Opera, second sync script hack
                                    script2 = this.script2 = global.document.createElement('script');
                                    script2.text = "try{var a = document.getElementById('" + script.id + "'); if(a)a.onerror();}catch(x){};";
                                    script.async = script2.async = false;
                                }
                            }
                            if (typeof script.async !== 'undefined') {
                                script.async = true;
                            }

                            var head = global.document.getElementsByTagName('head')[0];
                            head.insertBefore(script, head.firstChild);
                            if (script2) {
                                head.insertBefore(script2, head.firstChild);
                            }
                        };

                        module.exports = JsonpReceiver;

                    }).call(this,{ env: {} },typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"../../utils/browser":44,"../../utils/iframe":47,"../../utils/random":50,"../../utils/url":52,"debug":55,"events":3,"inherits":57}],32:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var inherits = require('inherits')
                            , EventEmitter = require('events').EventEmitter
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:receiver:xhr');
                        }

                        function XhrReceiver(url, AjaxObject) {
                            debug(url);
                            EventEmitter.call(this);
                            var self = this;

                            this.bufferPosition = 0;

                            this.xo = new AjaxObject('POST', url, null);
                            this.xo.on('chunk', this._chunkHandler.bind(this));
                            this.xo.once('finish', function(status, text) {
                                debug('finish', status, text);
                                self._chunkHandler(status, text);
                                self.xo = null;
                                var reason = status === 200 ? 'network' : 'permanent';
                                debug('close', reason);
                                self.emit('close', null, reason);
                                self._cleanup();
                            });
                        }

                        inherits(XhrReceiver, EventEmitter);

                        XhrReceiver.prototype._chunkHandler = function(status, text) {
                            debug('_chunkHandler', status);
                            if (status !== 200 || !text) {
                                return;
                            }

                            for (var idx = -1; ; this.bufferPosition += idx + 1) {
                                var buf = text.slice(this.bufferPosition);
                                idx = buf.indexOf('\n');
                                if (idx === -1) {
                                    break;
                                }
                                var msg = buf.slice(0, idx);
                                if (msg) {
                                    debug('message', msg);
                                    this.emit('message', msg);
                                }
                            }
                        };

                        XhrReceiver.prototype._cleanup = function() {
                            debug('_cleanup');
                            this.removeAllListeners();
                        };

                        XhrReceiver.prototype.abort = function() {
                            debug('abort');
                            if (this.xo) {
                                this.xo.close();
                                debug('close');
                                this.emit('close', null, 'user');
                                this.xo = null;
                            }
                            this._cleanup();
                        };

                        module.exports = XhrReceiver;

                    }).call(this,{ env: {} })

                },{"debug":55,"events":3,"inherits":57}],33:[function(require,module,exports){
                    (function (process,global){
                        'use strict';

                        var random = require('../../utils/random')
                            , urlUtils = require('../../utils/url')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:sender:jsonp');
                        }

                        var form, area;

                        function createIframe(id) {
                            debug('createIframe', id);
                            try {
                                // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
                                return global.document.createElement('<iframe name="' + id + '">');
                            } catch (x) {
                                var iframe = global.document.createElement('iframe');
                                iframe.name = id;
                                return iframe;
                            }
                        }

                        function createForm() {
                            debug('createForm');
                            form = global.document.createElement('form');
                            form.style.display = 'none';
                            form.style.position = 'absolute';
                            form.method = 'POST';
                            form.enctype = 'application/x-www-form-urlencoded';
                            form.acceptCharset = 'UTF-8';

                            area = global.document.createElement('textarea');
                            area.name = 'd';
                            form.appendChild(area);

                            global.document.body.appendChild(form);
                        }

                        module.exports = function(url, payload, callback) {
                            debug(url, payload);
                            if (!form) {
                                createForm();
                            }
                            var id = 'a' + random.string(8);
                            form.target = id;
                            form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);

                            var iframe = createIframe(id);
                            iframe.id = id;
                            iframe.style.display = 'none';
                            form.appendChild(iframe);

                            try {
                                area.value = payload;
                            } catch (e) {
                                // seriously broken browsers get here
                            }
                            form.submit();

                            var completed = function(err) {
                                debug('completed', id, err);
                                if (!iframe.onerror) {
                                    return;
                                }
                                iframe.onreadystatechange = iframe.onerror = iframe.onload = null;
                                // Opera mini doesn't like if we GC iframe
                                // immediately, thus this timeout.
                                setTimeout(function() {
                                    debug('cleaning up', id);
                                    iframe.parentNode.removeChild(iframe);
                                    iframe = null;
                                }, 500);
                                area.value = '';
                                // It is not possible to detect if the iframe succeeded or
                                // failed to submit our form.
                                callback(err);
                            };
                            iframe.onerror = function() {
                                debug('onerror', id);
                                completed();
                            };
                            iframe.onload = function() {
                                debug('onload', id);
                                completed();
                            };
                            iframe.onreadystatechange = function(e) {
                                debug('onreadystatechange', id, iframe.readyState, e);
                                if (iframe.readyState === 'complete') {
                                    completed();
                                }
                            };
                            return function() {
                                debug('aborted', id);
                                completed(new Error('Aborted'));
                            };
                        };

                    }).call(this,{ env: {} },typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"../../utils/random":50,"../../utils/url":52,"debug":55}],34:[function(require,module,exports){
                    (function (process,global){
                        'use strict';

                        var EventEmitter = require('events').EventEmitter
                            , inherits = require('inherits')
                            , eventUtils = require('../../utils/event')
                            , browser = require('../../utils/browser')
                            , urlUtils = require('../../utils/url')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:sender:xdr');
                        }

// References:
//   http://ajaxian.com/archives/100-line-ajax-wrapper
//   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx

                        function XDRObject(method, url, payload) {
                            debug(method, url);
                            var self = this;
                            EventEmitter.call(this);

                            setTimeout(function() {
                                self._start(method, url, payload);
                            }, 0);
                        }

                        inherits(XDRObject, EventEmitter);

                        XDRObject.prototype._start = function(method, url, payload) {
                            debug('_start');
                            var self = this;
                            var xdr = new global.XDomainRequest();
                            // IE caches even POSTs
                            url = urlUtils.addQuery(url, 't=' + (+new Date()));

                            xdr.onerror = function() {
                                debug('onerror');
                                self._error();
                            };
                            xdr.ontimeout = function() {
                                debug('ontimeout');
                                self._error();
                            };
                            xdr.onprogress = function() {
                                debug('progress', xdr.responseText);
                                self.emit('chunk', 200, xdr.responseText);
                            };
                            xdr.onload = function() {
                                debug('load');
                                self.emit('finish', 200, xdr.responseText);
                                self._cleanup(false);
                            };
                            this.xdr = xdr;
                            this.unloadRef = eventUtils.unloadAdd(function() {
                                self._cleanup(true);
                            });
                            try {
                                // Fails with AccessDenied if port number is bogus
                                this.xdr.open(method, url);
                                if (this.timeout) {
                                    this.xdr.timeout = this.timeout;
                                }
                                this.xdr.send(payload);
                            } catch (x) {
                                this._error();
                            }
                        };

                        XDRObject.prototype._error = function() {
                            this.emit('finish', 0, '');
                            this._cleanup(false);
                        };

                        XDRObject.prototype._cleanup = function(abort) {
                            debug('cleanup', abort);
                            if (!this.xdr) {
                                return;
                            }
                            this.removeAllListeners();
                            eventUtils.unloadDel(this.unloadRef);

                            this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress = this.xdr.onload = null;
                            if (abort) {
                                try {
                                    this.xdr.abort();
                                } catch (x) {
                                    // intentionally empty
                                }
                            }
                            this.unloadRef = this.xdr = null;
                        };

                        XDRObject.prototype.close = function() {
                            debug('close');
                            this._cleanup(true);
                        };

// IE 8/9 if the request target uses the same scheme - #79
                        XDRObject.enabled = !!(global.XDomainRequest && browser.hasDomain());

                        module.exports = XDRObject;

                    }).call(this,{ env: {} },typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"../../utils/browser":44,"../../utils/event":46,"../../utils/url":52,"debug":55,"events":3,"inherits":57}],35:[function(require,module,exports){
                    'use strict';

                    var inherits = require('inherits')
                        , XhrDriver = require('../driver/xhr')
                    ;

                    function XHRCorsObject(method, url, payload, opts) {
                        XhrDriver.call(this, method, url, payload, opts);
                    }

                    inherits(XHRCorsObject, XhrDriver);

                    XHRCorsObject.enabled = XhrDriver.enabled && XhrDriver.supportsCORS;

                    module.exports = XHRCorsObject;

                },{"../driver/xhr":17,"inherits":57}],36:[function(require,module,exports){
                    'use strict';

                    var EventEmitter = require('events').EventEmitter
                        , inherits = require('inherits')
                    ;

                    function XHRFake(/* method, url, payload, opts */) {
                        var self = this;
                        EventEmitter.call(this);

                        this.to = setTimeout(function() {
                            self.emit('finish', 200, '{}');
                        }, XHRFake.timeout);
                    }

                    inherits(XHRFake, EventEmitter);

                    XHRFake.prototype.close = function() {
                        clearTimeout(this.to);
                    };

                    XHRFake.timeout = 2000;

                    module.exports = XHRFake;

                },{"events":3,"inherits":57}],37:[function(require,module,exports){
                    'use strict';

                    var inherits = require('inherits')
                        , XhrDriver = require('../driver/xhr')
                    ;

                    function XHRLocalObject(method, url, payload /*, opts */) {
                        XhrDriver.call(this, method, url, payload, {
                            noCredentials: true
                        });
                    }

                    inherits(XHRLocalObject, XhrDriver);

                    XHRLocalObject.enabled = XhrDriver.enabled;

                    module.exports = XHRLocalObject;

                },{"../driver/xhr":17,"inherits":57}],38:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var utils = require('../utils/event')
                            , urlUtils = require('../utils/url')
                            , inherits = require('inherits')
                            , EventEmitter = require('events').EventEmitter
                            , WebsocketDriver = require('./driver/websocket')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:websocket');
                        }

                        function WebSocketTransport(transUrl, ignore, options) {
                            if (!WebSocketTransport.enabled()) {
                                throw new Error('Transport created when disabled');
                            }

                            EventEmitter.call(this);
                            debug('constructor', transUrl);

                            var self = this;
                            var url = urlUtils.addPath(transUrl, '/websocket');
                            if (url.slice(0, 5) === 'https') {
                                url = 'wss' + url.slice(5);
                            } else {
                                url = 'ws' + url.slice(4);
                            }
                            this.url = url;

                            this.ws = new WebsocketDriver(this.url, [], options);
                            this.ws.onmessage = function(e) {
                                debug('message event', e.data);
                                self.emit('message', e.data);
                            };
                            // Firefox has an interesting bug. If a websocket connection is
                            // created after onunload, it stays alive even when user
                            // navigates away from the page. In such situation let's lie -
                            // let's not open the ws connection at all. See:
                            // https://github.com/sockjs/sockjs-client/issues/28
                            // https://bugzilla.mozilla.org/show_bug.cgi?id=696085
                            this.unloadRef = utils.unloadAdd(function() {
                                debug('unload');
                                self.ws.close();
                            });
                            this.ws.onclose = function(e) {
                                debug('close event', e.code, e.reason);
                                self.emit('close', e.code, e.reason);
                                self._cleanup();
                            };
                            this.ws.onerror = function(e) {
                                debug('error event', e);
                                self.emit('close', 1006, 'WebSocket connection broken');
                                self._cleanup();
                            };
                        }

                        inherits(WebSocketTransport, EventEmitter);

                        WebSocketTransport.prototype.send = function(data) {
                            var msg = '[' + data + ']';
                            debug('send', msg);
                            this.ws.send(msg);
                        };

                        WebSocketTransport.prototype.close = function() {
                            debug('close');
                            var ws = this.ws;
                            this._cleanup();
                            if (ws) {
                                ws.close();
                            }
                        };

                        WebSocketTransport.prototype._cleanup = function() {
                            debug('_cleanup');
                            var ws = this.ws;
                            if (ws) {
                                ws.onmessage = ws.onclose = ws.onerror = null;
                            }
                            utils.unloadDel(this.unloadRef);
                            this.unloadRef = this.ws = null;
                            this.removeAllListeners();
                        };

                        WebSocketTransport.enabled = function() {
                            debug('enabled');
                            return !!WebsocketDriver;
                        };
                        WebSocketTransport.transportName = 'websocket';

// In theory, ws should require 1 round trip. But in chrome, this is
// not very stable over SSL. Most likely a ws connection requires a
// separate SSL connection, in which case 2 round trips are an
// absolute minumum.
                        WebSocketTransport.roundTrips = 2;

                        module.exports = WebSocketTransport;

                    }).call(this,{ env: {} })

                },{"../utils/event":46,"../utils/url":52,"./driver/websocket":19,"debug":55,"events":3,"inherits":57}],39:[function(require,module,exports){
                    'use strict';

                    var inherits = require('inherits')
                        , AjaxBasedTransport = require('./lib/ajax-based')
                        , XdrStreamingTransport = require('./xdr-streaming')
                        , XhrReceiver = require('./receiver/xhr')
                        , XDRObject = require('./sender/xdr')
                    ;

                    function XdrPollingTransport(transUrl) {
                        if (!XDRObject.enabled) {
                            throw new Error('Transport created when disabled');
                        }
                        AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XDRObject);
                    }

                    inherits(XdrPollingTransport, AjaxBasedTransport);

                    XdrPollingTransport.enabled = XdrStreamingTransport.enabled;
                    XdrPollingTransport.transportName = 'xdr-polling';
                    XdrPollingTransport.roundTrips = 2; // preflight, ajax

                    module.exports = XdrPollingTransport;

                },{"./lib/ajax-based":24,"./receiver/xhr":32,"./sender/xdr":34,"./xdr-streaming":40,"inherits":57}],40:[function(require,module,exports){
                    'use strict';

                    var inherits = require('inherits')
                        , AjaxBasedTransport = require('./lib/ajax-based')
                        , XhrReceiver = require('./receiver/xhr')
                        , XDRObject = require('./sender/xdr')
                    ;

// According to:
//   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests
//   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/

                    function XdrStreamingTransport(transUrl) {
                        if (!XDRObject.enabled) {
                            throw new Error('Transport created when disabled');
                        }
                        AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XDRObject);
                    }

                    inherits(XdrStreamingTransport, AjaxBasedTransport);

                    XdrStreamingTransport.enabled = function(info) {
                        if (info.cookie_needed || info.nullOrigin) {
                            return false;
                        }
                        return XDRObject.enabled && info.sameScheme;
                    };

                    XdrStreamingTransport.transportName = 'xdr-streaming';
                    XdrStreamingTransport.roundTrips = 2; // preflight, ajax

                    module.exports = XdrStreamingTransport;

                },{"./lib/ajax-based":24,"./receiver/xhr":32,"./sender/xdr":34,"inherits":57}],41:[function(require,module,exports){
                    'use strict';

                    var inherits = require('inherits')
                        , AjaxBasedTransport = require('./lib/ajax-based')
                        , XhrReceiver = require('./receiver/xhr')
                        , XHRCorsObject = require('./sender/xhr-cors')
                        , XHRLocalObject = require('./sender/xhr-local')
                    ;

                    function XhrPollingTransport(transUrl) {
                        if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {
                            throw new Error('Transport created when disabled');
                        }
                        AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XHRCorsObject);
                    }

                    inherits(XhrPollingTransport, AjaxBasedTransport);

                    XhrPollingTransport.enabled = function(info) {
                        if (info.nullOrigin) {
                            return false;
                        }

                        if (XHRLocalObject.enabled && info.sameOrigin) {
                            return true;
                        }
                        return XHRCorsObject.enabled;
                    };

                    XhrPollingTransport.transportName = 'xhr-polling';
                    XhrPollingTransport.roundTrips = 2; // preflight, ajax

                    module.exports = XhrPollingTransport;

                },{"./lib/ajax-based":24,"./receiver/xhr":32,"./sender/xhr-cors":35,"./sender/xhr-local":37,"inherits":57}],42:[function(require,module,exports){
                    (function (global){
                        'use strict';

                        var inherits = require('inherits')
                            , AjaxBasedTransport = require('./lib/ajax-based')
                            , XhrReceiver = require('./receiver/xhr')
                            , XHRCorsObject = require('./sender/xhr-cors')
                            , XHRLocalObject = require('./sender/xhr-local')
                            , browser = require('../utils/browser')
                        ;

                        function XhrStreamingTransport(transUrl) {
                            if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {
                                throw new Error('Transport created when disabled');
                            }
                            AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XHRCorsObject);
                        }

                        inherits(XhrStreamingTransport, AjaxBasedTransport);

                        XhrStreamingTransport.enabled = function(info) {
                            if (info.nullOrigin) {
                                return false;
                            }
                            // Opera doesn't support xhr-streaming #60
                            // But it might be able to #92
                            if (browser.isOpera()) {
                                return false;
                            }

                            return XHRCorsObject.enabled;
                        };

                        XhrStreamingTransport.transportName = 'xhr-streaming';
                        XhrStreamingTransport.roundTrips = 2; // preflight, ajax

// Safari gets confused when a streaming ajax request is started
// before onload. This causes the load indicator to spin indefinetely.
// Only require body when used in a browser
                        XhrStreamingTransport.needBody = !!global.document;

                        module.exports = XhrStreamingTransport;

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"../utils/browser":44,"./lib/ajax-based":24,"./receiver/xhr":32,"./sender/xhr-cors":35,"./sender/xhr-local":37,"inherits":57}],43:[function(require,module,exports){
                    (function (global){
                        'use strict';

                        if (global.crypto && global.crypto.getRandomValues) {
                            module.exports.randomBytes = function(length) {
                                var bytes = new Uint8Array(length);
                                global.crypto.getRandomValues(bytes);
                                return bytes;
                            };
                        } else {
                            module.exports.randomBytes = function(length) {
                                var bytes = new Array(length);
                                for (var i = 0; i < length; i++) {
                                    bytes[i] = Math.floor(Math.random() * 256);
                                }
                                return bytes;
                            };
                        }

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{}],44:[function(require,module,exports){
                    (function (global){
                        'use strict';

                        module.exports = {
                            isOpera: function() {
                                return global.navigator &&
                                    /opera/i.test(global.navigator.userAgent);
                            }

                            , isKonqueror: function() {
                                return global.navigator &&
                                    /konqueror/i.test(global.navigator.userAgent);
                            }

                            // #187 wrap document.domain in try/catch because of WP8 from file:///
                            , hasDomain: function () {
                                // non-browser client always has a domain
                                if (!global.document) {
                                    return true;
                                }

                                try {
                                    return !!global.document.domain;
                                } catch (e) {
                                    return false;
                                }
                            }
                        };

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{}],45:[function(require,module,exports){
                    'use strict';

                    var JSON3 = require('json3');

// Some extra characters that Chrome gets wrong, and substitutes with
// something else on the wire.
// eslint-disable-next-line no-control-regex
                    var extraEscapable = /[\x00-\x1f\ud800-\udfff\ufffe\uffff\u0300-\u0333\u033d-\u0346\u034a-\u034c\u0350-\u0352\u0357-\u0358\u035c-\u0362\u0374\u037e\u0387\u0591-\u05af\u05c4\u0610-\u0617\u0653-\u0654\u0657-\u065b\u065d-\u065e\u06df-\u06e2\u06eb-\u06ec\u0730\u0732-\u0733\u0735-\u0736\u073a\u073d\u073f-\u0741\u0743\u0745\u0747\u07eb-\u07f1\u0951\u0958-\u095f\u09dc-\u09dd\u09df\u0a33\u0a36\u0a59-\u0a5b\u0a5e\u0b5c-\u0b5d\u0e38-\u0e39\u0f43\u0f4d\u0f52\u0f57\u0f5c\u0f69\u0f72-\u0f76\u0f78\u0f80-\u0f83\u0f93\u0f9d\u0fa2\u0fa7\u0fac\u0fb9\u1939-\u193a\u1a17\u1b6b\u1cda-\u1cdb\u1dc0-\u1dcf\u1dfc\u1dfe\u1f71\u1f73\u1f75\u1f77\u1f79\u1f7b\u1f7d\u1fbb\u1fbe\u1fc9\u1fcb\u1fd3\u1fdb\u1fe3\u1feb\u1fee-\u1fef\u1ff9\u1ffb\u1ffd\u2000-\u2001\u20d0-\u20d1\u20d4-\u20d7\u20e7-\u20e9\u2126\u212a-\u212b\u2329-\u232a\u2adc\u302b-\u302c\uaab2-\uaab3\uf900-\ufa0d\ufa10\ufa12\ufa15-\ufa1e\ufa20\ufa22\ufa25-\ufa26\ufa2a-\ufa2d\ufa30-\ufa6d\ufa70-\ufad9\ufb1d\ufb1f\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufb4e\ufff0-\uffff]/g
                        , extraLookup;

// This may be quite slow, so let's delay until user actually uses bad
// characters.
                    var unrollLookup = function(escapable) {
                        var i;
                        var unrolled = {};
                        var c = [];
                        for (i = 0; i < 65536; i++) {
                            c.push( String.fromCharCode(i) );
                        }
                        escapable.lastIndex = 0;
                        c.join('').replace(escapable, function(a) {
                            unrolled[ a ] = '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
                            return '';
                        });
                        escapable.lastIndex = 0;
                        return unrolled;
                    };

// Quote string, also taking care of unicode characters that browsers
// often break. Especially, take care of unicode surrogates:
// http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates
                    module.exports = {
                        quote: function(string) {
                            var quoted = JSON3.stringify(string);

                            // In most cases this should be very fast and good enough.
                            extraEscapable.lastIndex = 0;
                            if (!extraEscapable.test(quoted)) {
                                return quoted;
                            }

                            if (!extraLookup) {
                                extraLookup = unrollLookup(extraEscapable);
                            }

                            return quoted.replace(extraEscapable, function(a) {
                                return extraLookup[a];
                            });
                        }
                    };

                },{"json3":58}],46:[function(require,module,exports){
                    (function (global){
                        'use strict';

                        var random = require('./random');

                        var onUnload = {}
                            , afterUnload = false
                            // detect google chrome packaged apps because they don't allow the 'unload' event
                            , isChromePackagedApp = global.chrome && global.chrome.app && global.chrome.app.runtime
                        ;

                        module.exports = {
                            attachEvent: function(event, listener) {
                                if (typeof global.addEventListener !== 'undefined') {
                                    global.addEventListener(event, listener, false);
                                } else if (global.document && global.attachEvent) {
                                    // IE quirks.
                                    // According to: http://stevesouders.com/misc/test-postmessage.php
                                    // the message gets delivered only to 'document', not 'window'.
                                    global.document.attachEvent('on' + event, listener);
                                    // I get 'window' for ie8.
                                    global.attachEvent('on' + event, listener);
                                }
                            }

                            , detachEvent: function(event, listener) {
                                if (typeof global.addEventListener !== 'undefined') {
                                    global.removeEventListener(event, listener, false);
                                } else if (global.document && global.detachEvent) {
                                    global.document.detachEvent('on' + event, listener);
                                    global.detachEvent('on' + event, listener);
                                }
                            }

                            , unloadAdd: function(listener) {
                                if (isChromePackagedApp) {
                                    return null;
                                }

                                var ref = random.string(8);
                                onUnload[ref] = listener;
                                if (afterUnload) {
                                    setTimeout(this.triggerUnloadCallbacks, 0);
                                }
                                return ref;
                            }

                            , unloadDel: function(ref) {
                                if (ref in onUnload) {
                                    delete onUnload[ref];
                                }
                            }

                            , triggerUnloadCallbacks: function() {
                                for (var ref in onUnload) {
                                    onUnload[ref]();
                                    delete onUnload[ref];
                                }
                            }
                        };

                        var unloadTriggered = function() {
                            if (afterUnload) {
                                return;
                            }
                            afterUnload = true;
                            module.exports.triggerUnloadCallbacks();
                        };

// 'unload' alone is not reliable in opera within an iframe, but we
// can't use `beforeunload` as IE fires it on javascript: links.
                        if (!isChromePackagedApp) {
                            module.exports.attachEvent('unload', unloadTriggered);
                        }

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"./random":50}],47:[function(require,module,exports){
                    (function (process,global){
                        'use strict';

                        var eventUtils = require('./event')
                            , JSON3 = require('json3')
                            , browser = require('./browser')
                        ;

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:utils:iframe');
                        }

                        module.exports = {
                            WPrefix: '_jp'
                            , currentWindowId: null

                            , polluteGlobalNamespace: function() {
                                if (!(module.exports.WPrefix in global)) {
                                    global[module.exports.WPrefix] = {};
                                }
                            }

                            , postMessage: function(type, data) {
                                if (global.parent !== global) {
                                    global.parent.postMessage(JSON3.stringify({
                                        windowId: module.exports.currentWindowId
                                        , type: type
                                        , data: data || ''
                                    }), '*');
                                } else {
                                    debug('Cannot postMessage, no parent window.', type, data);
                                }
                            }

                            , createIframe: function(iframeUrl, errorCallback) {
                                var iframe = global.document.createElement('iframe');
                                var tref, unloadRef;
                                var unattach = function() {
                                    debug('unattach');
                                    clearTimeout(tref);
                                    // Explorer had problems with that.
                                    try {
                                        iframe.onload = null;
                                    } catch (x) {
                                        // intentionally empty
                                    }
                                    iframe.onerror = null;
                                };
                                var cleanup = function() {
                                    debug('cleanup');
                                    if (iframe) {
                                        unattach();
                                        // This timeout makes chrome fire onbeforeunload event
                                        // within iframe. Without the timeout it goes straight to
                                        // onunload.
                                        setTimeout(function() {
                                            if (iframe) {
                                                iframe.parentNode.removeChild(iframe);
                                            }
                                            iframe = null;
                                        }, 0);
                                        eventUtils.unloadDel(unloadRef);
                                    }
                                };
                                var onerror = function(err) {
                                    debug('onerror', err);
                                    if (iframe) {
                                        cleanup();
                                        errorCallback(err);
                                    }
                                };
                                var post = function(msg, origin) {
                                    debug('post', msg, origin);
                                    setTimeout(function() {
                                        try {
                                            // When the iframe is not loaded, IE raises an exception
                                            // on 'contentWindow'.
                                            if (iframe && iframe.contentWindow) {
                                                iframe.contentWindow.postMessage(msg, origin);
                                            }
                                        } catch (x) {
                                            // intentionally empty
                                        }
                                    }, 0);
                                };

                                iframe.src = iframeUrl;
                                iframe.style.display = 'none';
                                iframe.style.position = 'absolute';
                                iframe.onerror = function() {
                                    onerror('onerror');
                                };
                                iframe.onload = function() {
                                    debug('onload');
                                    // `onload` is triggered before scripts on the iframe are
                                    // executed. Give it few seconds to actually load stuff.
                                    clearTimeout(tref);
                                    tref = setTimeout(function() {
                                        onerror('onload timeout');
                                    }, 2000);
                                };
                                global.document.body.appendChild(iframe);
                                tref = setTimeout(function() {
                                    onerror('timeout');
                                }, 15000);
                                unloadRef = eventUtils.unloadAdd(cleanup);
                                return {
                                    post: post
                                    , cleanup: cleanup
                                    , loaded: unattach
                                };
                            }

                            /* eslint no-undef: "off", new-cap: "off" */
                            , createHtmlfile: function(iframeUrl, errorCallback) {
                                var axo = ['Active'].concat('Object').join('X');
                                var doc = new global[axo]('htmlfile');
                                var tref, unloadRef;
                                var iframe;
                                var unattach = function() {
                                    clearTimeout(tref);
                                    iframe.onerror = null;
                                };
                                var cleanup = function() {
                                    if (doc) {
                                        unattach();
                                        eventUtils.unloadDel(unloadRef);
                                        iframe.parentNode.removeChild(iframe);
                                        iframe = doc = null;
                                        CollectGarbage();
                                    }
                                };
                                var onerror = function(r) {
                                    debug('onerror', r);
                                    if (doc) {
                                        cleanup();
                                        errorCallback(r);
                                    }
                                };
                                var post = function(msg, origin) {
                                    try {
                                        // When the iframe is not loaded, IE raises an exception
                                        // on 'contentWindow'.
                                        setTimeout(function() {
                                            if (iframe && iframe.contentWindow) {
                                                iframe.contentWindow.postMessage(msg, origin);
                                            }
                                        }, 0);
                                    } catch (x) {
                                        // intentionally empty
                                    }
                                };

                                doc.open();
                                doc.write('<html><s' + 'cript>' +
                                    'document.domain="' + global.document.domain + '";' +
                                    '</s' + 'cript></html>');
                                doc.close();
                                doc.parentWindow[module.exports.WPrefix] = global[module.exports.WPrefix];
                                var c = doc.createElement('div');
                                doc.body.appendChild(c);
                                iframe = doc.createElement('iframe');
                                c.appendChild(iframe);
                                iframe.src = iframeUrl;
                                iframe.onerror = function() {
                                    onerror('onerror');
                                };
                                tref = setTimeout(function() {
                                    onerror('timeout');
                                }, 15000);
                                unloadRef = eventUtils.unloadAdd(cleanup);
                                return {
                                    post: post
                                    , cleanup: cleanup
                                    , loaded: unattach
                                };
                            }
                        };

                        module.exports.iframeEnabled = false;
                        if (global.document) {
                            // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with
                            // huge delay, or not at all.
                            module.exports.iframeEnabled = (typeof global.postMessage === 'function' ||
                                typeof global.postMessage === 'object') && (!browser.isKonqueror());
                        }

                    }).call(this,{ env: {} },typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"./browser":44,"./event":46,"debug":55,"json3":58}],48:[function(require,module,exports){
                    (function (global){
                        'use strict';

                        var logObject = {};
                        ['log', 'debug', 'warn'].forEach(function (level) {
                            var levelExists;

                            try {
                                levelExists = global.console && global.console[level] && global.console[level].apply;
                            } catch(e) {
                                // do nothing
                            }

                            logObject[level] = levelExists ? function () {
                                return global.console[level].apply(global.console, arguments);
                            } : (level === 'log' ? function () {} : logObject.log);
                        });

                        module.exports = logObject;

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{}],49:[function(require,module,exports){
                    'use strict';

                    module.exports = {
                        isObject: function(obj) {
                            var type = typeof obj;
                            return type === 'function' || type === 'object' && !!obj;
                        }

                        , extend: function(obj) {
                            if (!this.isObject(obj)) {
                                return obj;
                            }
                            var source, prop;
                            for (var i = 1, length = arguments.length; i < length; i++) {
                                source = arguments[i];
                                for (prop in source) {
                                    if (Object.prototype.hasOwnProperty.call(source, prop)) {
                                        obj[prop] = source[prop];
                                    }
                                }
                            }
                            return obj;
                        }
                    };

                },{}],50:[function(require,module,exports){
                    'use strict';

                    /* global crypto:true */
                    var crypto = require('crypto');

// This string has length 32, a power of 2, so the modulus doesn't introduce a
// bias.
                    var _randomStringChars = 'abcdefghijklmnopqrstuvwxyz012345';
                    module.exports = {
                        string: function(length) {
                            var max = _randomStringChars.length;
                            var bytes = crypto.randomBytes(length);
                            var ret = [];
                            for (var i = 0; i < length; i++) {
                                ret.push(_randomStringChars.substr(bytes[i] % max, 1));
                            }
                            return ret.join('');
                        }

                        , number: function(max) {
                            return Math.floor(Math.random() * max);
                        }

                        , numberString: function(max) {
                            var t = ('' + (max - 1)).length;
                            var p = new Array(t + 1).join('0');
                            return (p + this.number(max)).slice(-t);
                        }
                    };

                },{"crypto":43}],51:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:utils:transport');
                        }

                        module.exports = function(availableTransports) {
                            return {
                                filterToEnabled: function(transportsWhitelist, info) {
                                    var transports = {
                                        main: []
                                        , facade: []
                                    };
                                    if (!transportsWhitelist) {
                                        transportsWhitelist = [];
                                    } else if (typeof transportsWhitelist === 'string') {
                                        transportsWhitelist = [transportsWhitelist];
                                    }

                                    availableTransports.forEach(function(trans) {
                                        if (!trans) {
                                            return;
                                        }

                                        if (trans.transportName === 'websocket' && info.websocket === false) {
                                            debug('disabled from server', 'websocket');
                                            return;
                                        }

                                        if (transportsWhitelist.length &&
                                            transportsWhitelist.indexOf(trans.transportName) === -1) {
                                            debug('not in whitelist', trans.transportName);
                                            return;
                                        }

                                        if (trans.enabled(info)) {
                                            debug('enabled', trans.transportName);
                                            transports.main.push(trans);
                                            if (trans.facadeTransport) {
                                                transports.facade.push(trans.facadeTransport);
                                            }
                                        } else {
                                            debug('disabled', trans.transportName);
                                        }
                                    });
                                    return transports;
                                }
                            };
                        };

                    }).call(this,{ env: {} })

                },{"debug":55}],52:[function(require,module,exports){
                    (function (process){
                        'use strict';

                        var URL = require('url-parse');

                        var debug = function() {};
                        if (process.env.NODE_ENV !== 'production') {
                            debug = require('debug')('sockjs-client:utils:url');
                        }

                        module.exports = {
                            getOrigin: function(url) {
                                if (!url) {
                                    return null;
                                }

                                var p = new URL(url);
                                if (p.protocol === 'file:') {
                                    return null;
                                }

                                var port = p.port;
                                if (!port) {
                                    port = (p.protocol === 'https:') ? '443' : '80';
                                }

                                return p.protocol + '//' + p.hostname + ':' + port;
                            }

                            , isOriginEqual: function(a, b) {
                                var res = this.getOrigin(a) === this.getOrigin(b);
                                debug('same', a, b, res);
                                return res;
                            }

                            , isSchemeEqual: function(a, b) {
                                return (a.split(':')[0] === b.split(':')[0]);
                            }

                            , addPath: function (url, path) {
                                var qs = url.split('?');
                                return qs[0] + path + (qs[1] ? '?' + qs[1] : '');
                            }

                            , addQuery: function (url, q) {
                                return url + (url.indexOf('?') === -1 ? ('?' + q) : ('&' + q));
                            }
                        };

                    }).call(this,{ env: {} })

                },{"debug":55,"url-parse":61}],53:[function(require,module,exports){
                    module.exports = '1.3.0';

                },{}],54:[function(require,module,exports){
                    /**
                     * Helpers.
                     */

                    var s = 1000;
                    var m = s * 60;
                    var h = m * 60;
                    var d = h * 24;
                    var w = d * 7;
                    var y = d * 365.25;

                    /**
                     * Parse or format the given `val`.
                     *
                     * Options:
                     *
                     *  - `long` verbose formatting [false]
                     *
                     * @param {String|Number} val
                     * @param {Object} [options]
                     * @throws {Error} throw an error if val is not a non-empty string or a number
                     * @return {String|Number}
                     * @api public
                     */

                    module.exports = function(val, options) {
                        options = options || {};
                        var type = typeof val;
                        if (type === 'string' && val.length > 0) {
                            return parse(val);
                        } else if (type === 'number' && isNaN(val) === false) {
                            return options.long ? fmtLong(val) : fmtShort(val);
                        }
                        throw new Error(
                            'val is not a non-empty string or a valid number. val=' +
                            JSON.stringify(val)
                        );
                    };

                    /**
                     * Parse the given `str` and return milliseconds.
                     *
                     * @param {String} str
                     * @return {Number}
                     * @api private
                     */

                    function parse(str) {
                        str = String(str);
                        if (str.length > 100) {
                            return;
                        }
                        var match = /^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
                            str
                        );
                        if (!match) {
                            return;
                        }
                        var n = parseFloat(match[1]);
                        var type = (match[2] || 'ms').toLowerCase();
                        switch (type) {
                            case 'years':
                            case 'year':
                            case 'yrs':
                            case 'yr':
                            case 'y':
                                return n * y;
                            case 'weeks':
                            case 'week':
                            case 'w':
                                return n * w;
                            case 'days':
                            case 'day':
                            case 'd':
                                return n * d;
                            case 'hours':
                            case 'hour':
                            case 'hrs':
                            case 'hr':
                            case 'h':
                                return n * h;
                            case 'minutes':
                            case 'minute':
                            case 'mins':
                            case 'min':
                            case 'm':
                                return n * m;
                            case 'seconds':
                            case 'second':
                            case 'secs':
                            case 'sec':
                            case 's':
                                return n * s;
                            case 'milliseconds':
                            case 'millisecond':
                            case 'msecs':
                            case 'msec':
                            case 'ms':
                                return n;
                            default:
                                return undefined;
                        }
                    }

                    /**
                     * Short format for `ms`.
                     *
                     * @param {Number} ms
                     * @return {String}
                     * @api private
                     */

                    function fmtShort(ms) {
                        var msAbs = Math.abs(ms);
                        if (msAbs >= d) {
                            return Math.round(ms / d) + 'd';
                        }
                        if (msAbs >= h) {
                            return Math.round(ms / h) + 'h';
                        }
                        if (msAbs >= m) {
                            return Math.round(ms / m) + 'm';
                        }
                        if (msAbs >= s) {
                            return Math.round(ms / s) + 's';
                        }
                        return ms + 'ms';
                    }

                    /**
                     * Long format for `ms`.
                     *
                     * @param {Number} ms
                     * @return {String}
                     * @api private
                     */

                    function fmtLong(ms) {
                        var msAbs = Math.abs(ms);
                        if (msAbs >= d) {
                            return plural(ms, msAbs, d, 'day');
                        }
                        if (msAbs >= h) {
                            return plural(ms, msAbs, h, 'hour');
                        }
                        if (msAbs >= m) {
                            return plural(ms, msAbs, m, 'minute');
                        }
                        if (msAbs >= s) {
                            return plural(ms, msAbs, s, 'second');
                        }
                        return ms + ' ms';
                    }

                    /**
                     * Pluralization helper.
                     */

                    function plural(ms, msAbs, n, name) {
                        var isPlural = msAbs >= n * 1.5;
                        return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
                    }

                },{}],55:[function(require,module,exports){
                    (function (process){
                        "use strict";

                        function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

                        /* eslint-env browser */

                        /**
                         * This is the web browser implementation of `debug()`.
                         */
                        exports.log = log;
                        exports.formatArgs = formatArgs;
                        exports.save = save;
                        exports.load = load;
                        exports.useColors = useColors;
                        exports.storage = localstorage();
                        /**
                         * Colors.
                         */

                        exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
                        /**
                         * Currently only WebKit-based Web Inspectors, Firefox >= v31,
                         * and the Firebug extension (any Firefox version) are known
                         * to support "%c" CSS customizations.
                         *
                         * TODO: add a `localStorage` variable to explicitly enable/disable colors
                         */
// eslint-disable-next-line complexity

                        function useColors() {
                            // NB: In an Electron preload script, document will be defined but not fully
                            // initialized. Since we know we're in Chrome, we'll just detect this case
                            // explicitly
                            if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
                                return true;
                            } // Internet Explorer and Edge do not support colors.


                            if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
                                return false;
                            } // Is webkit? http://stackoverflow.com/a/16459606/376773
                            // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632


                            return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
                                typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
                                // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
                                typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
                                typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
                        }
                        /**
                         * Colorize log arguments if enabled.
                         *
                         * @api public
                         */


                        function formatArgs(args) {
                            args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);

                            if (!this.useColors) {
                                return;
                            }

                            var c = 'color: ' + this.color;
                            args.splice(1, 0, c, 'color: inherit'); // The final "%c" is somewhat tricky, because there could be other
                            // arguments passed either before or after the %c, so we need to
                            // figure out the correct index to insert the CSS into

                            var index = 0;
                            var lastC = 0;
                            args[0].replace(/%[a-zA-Z%]/g, function (match) {
                                if (match === '%%') {
                                    return;
                                }

                                index++;

                                if (match === '%c') {
                                    // We only are interested in the *last* %c
                                    // (the user may have provided their own)
                                    lastC = index;
                                }
                            });
                            args.splice(lastC, 0, c);
                        }
                        /**
                         * Invokes `console.log()` when available.
                         * No-op when `console.log` is not a "function".
                         *
                         * @api public
                         */


                        function log() {
                            var _console;

                            // This hackery is required for IE8/9, where
                            // the `console.log` function doesn't have 'apply'
                            return (typeof console === "undefined" ? "undefined" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);
                        }
                        /**
                         * Save `namespaces`.
                         *
                         * @param {String} namespaces
                         * @api private
                         */


                        function save(namespaces) {
                            try {
                                if (namespaces) {
                                    exports.storage.setItem('debug', namespaces);
                                } else {
                                    exports.storage.removeItem('debug');
                                }
                            } catch (error) {// Swallow
                                // XXX (@Qix-) should we be logging these?
                            }
                        }
                        /**
                         * Load `namespaces`.
                         *
                         * @return {String} returns the previously persisted debug modes
                         * @api private
                         */


                        function load() {
                            var r;

                            try {
                                r = exports.storage.getItem('debug');
                            } catch (error) {} // Swallow
                            // XXX (@Qix-) should we be logging these?
                            // If debug isn't set in LS, and we're in Electron, try to load $DEBUG


                            if (!r && typeof process !== 'undefined' && 'env' in process) {
                                r = process.env.DEBUG;
                            }

                            return r;
                        }
                        /**
                         * Localstorage attempts to return the localstorage.
                         *
                         * This is necessary because safari throws
                         * when a user disables cookies/localstorage
                         * and you attempt to access it.
                         *
                         * @return {LocalStorage}
                         * @api private
                         */


                        function localstorage() {
                            try {
                                // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
                                // The Browser also has localStorage in the global context.
                                return localStorage;
                            } catch (error) {// Swallow
                                // XXX (@Qix-) should we be logging these?
                            }
                        }

                        module.exports = require('./common')(exports);
                        var formatters = module.exports.formatters;
                        /**
                         * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
                         */

                        formatters.j = function (v) {
                            try {
                                return JSON.stringify(v);
                            } catch (error) {
                                return '[UnexpectedJSONParseError]: ' + error.message;
                            }
                        };


                    }).call(this,{ env: {} })

                },{"./common":56}],56:[function(require,module,exports){
                    "use strict";

                    /**
                     * This is the common logic for both the Node.js and web browser
                     * implementations of `debug()`.
                     */
                    function setup(env) {
                        createDebug.debug = createDebug;
                        createDebug.default = createDebug;
                        createDebug.coerce = coerce;
                        createDebug.disable = disable;
                        createDebug.enable = enable;
                        createDebug.enabled = enabled;
                        createDebug.humanize = require('ms');
                        Object.keys(env).forEach(function (key) {
                            createDebug[key] = env[key];
                        });
                        /**
                         * Active `debug` instances.
                         */

                        createDebug.instances = [];
                        /**
                         * The currently active debug mode names, and names to skip.
                         */

                        createDebug.names = [];
                        createDebug.skips = [];
                        /**
                         * Map of special "%n" handling functions, for the debug "format" argument.
                         *
                         * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
                         */

                        createDebug.formatters = {};
                        /**
                         * Selects a color for a debug namespace
                         * @param {String} namespace The namespace string for the for the debug instance to be colored
                         * @return {Number|String} An ANSI color code for the given namespace
                         * @api private
                         */

                        function selectColor(namespace) {
                            var hash = 0;

                            for (var i = 0; i < namespace.length; i++) {
                                hash = (hash << 5) - hash + namespace.charCodeAt(i);
                                hash |= 0; // Convert to 32bit integer
                            }

                            return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
                        }

                        createDebug.selectColor = selectColor;
                        /**
                         * Create a debugger with the given `namespace`.
                         *
                         * @param {String} namespace
                         * @return {Function}
                         * @api public
                         */

                        function createDebug(namespace) {
                            var prevTime;

                            function debug() {
                                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                                    args[_key] = arguments[_key];
                                }

                                // Disabled?
                                if (!debug.enabled) {
                                    return;
                                }

                                var self = debug; // Set `diff` timestamp

                                var curr = Number(new Date());
                                var ms = curr - (prevTime || curr);
                                self.diff = ms;
                                self.prev = prevTime;
                                self.curr = curr;
                                prevTime = curr;
                                args[0] = createDebug.coerce(args[0]);

                                if (typeof args[0] !== 'string') {
                                    // Anything else let's inspect with %O
                                    args.unshift('%O');
                                } // Apply any `formatters` transformations


                                var index = 0;
                                args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
                                    // If we encounter an escaped % then don't increase the array index
                                    if (match === '%%') {
                                        return match;
                                    }

                                    index++;
                                    var formatter = createDebug.formatters[format];

                                    if (typeof formatter === 'function') {
                                        var val = args[index];
                                        match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`

                                        args.splice(index, 1);
                                        index--;
                                    }

                                    return match;
                                }); // Apply env-specific formatting (colors, etc.)

                                createDebug.formatArgs.call(self, args);
                                var logFn = self.log || createDebug.log;
                                logFn.apply(self, args);
                            }

                            debug.namespace = namespace;
                            debug.enabled = createDebug.enabled(namespace);
                            debug.useColors = createDebug.useColors();
                            debug.color = selectColor(namespace);
                            debug.destroy = destroy;
                            debug.extend = extend; // Debug.formatArgs = formatArgs;
                            // debug.rawLog = rawLog;
                            // env-specific initialization logic for debug instances

                            if (typeof createDebug.init === 'function') {
                                createDebug.init(debug);
                            }

                            createDebug.instances.push(debug);
                            return debug;
                        }

                        function destroy() {
                            var index = createDebug.instances.indexOf(this);

                            if (index !== -1) {
                                createDebug.instances.splice(index, 1);
                                return true;
                            }

                            return false;
                        }

                        function extend(namespace, delimiter) {
                            return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
                        }
                        /**
                         * Enables a debug mode by namespaces. This can include modes
                         * separated by a colon and wildcards.
                         *
                         * @param {String} namespaces
                         * @api public
                         */


                        function enable(namespaces) {
                            createDebug.save(namespaces);
                            createDebug.names = [];
                            createDebug.skips = [];
                            var i;
                            var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
                            var len = split.length;

                            for (i = 0; i < len; i++) {
                                if (!split[i]) {
                                    // ignore empty strings
                                    continue;
                                }

                                namespaces = split[i].replace(/\*/g, '.*?');

                                if (namespaces[0] === '-') {
                                    createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
                                } else {
                                    createDebug.names.push(new RegExp('^' + namespaces + '$'));
                                }
                            }

                            for (i = 0; i < createDebug.instances.length; i++) {
                                var instance = createDebug.instances[i];
                                instance.enabled = createDebug.enabled(instance.namespace);
                            }
                        }
                        /**
                         * Disable debug output.
                         *
                         * @api public
                         */


                        function disable() {
                            createDebug.enable('');
                        }
                        /**
                         * Returns true if the given mode name is enabled, false otherwise.
                         *
                         * @param {String} name
                         * @return {Boolean}
                         * @api public
                         */


                        function enabled(name) {
                            if (name[name.length - 1] === '*') {
                                return true;
                            }

                            var i;
                            var len;

                            for (i = 0, len = createDebug.skips.length; i < len; i++) {
                                if (createDebug.skips[i].test(name)) {
                                    return false;
                                }
                            }

                            for (i = 0, len = createDebug.names.length; i < len; i++) {
                                if (createDebug.names[i].test(name)) {
                                    return true;
                                }
                            }

                            return false;
                        }
                        /**
                         * Coerce `val`.
                         *
                         * @param {Mixed} val
                         * @return {Mixed}
                         * @api private
                         */


                        function coerce(val) {
                            if (val instanceof Error) {
                                return val.stack || val.message;
                            }

                            return val;
                        }

                        createDebug.enable(createDebug.load());
                        return createDebug;
                    }

                    module.exports = setup;


                },{"ms":54}],57:[function(require,module,exports){
                    if (typeof Object.create === 'function') {
                        // implementation from standard node.js 'util' module
                        module.exports = function inherits(ctor, superCtor) {
                            ctor.super_ = superCtor
                            ctor.prototype = Object.create(superCtor.prototype, {
                                constructor: {
                                    value: ctor,
                                    enumerable: false,
                                    writable: true,
                                    configurable: true
                                }
                            });
                        };
                    } else {
                        // old school shim for old browsers
                        module.exports = function inherits(ctor, superCtor) {
                            ctor.super_ = superCtor
                            var TempCtor = function () {}
                            TempCtor.prototype = superCtor.prototype
                            ctor.prototype = new TempCtor()
                            ctor.prototype.constructor = ctor
                        }
                    }

                },{}],58:[function(require,module,exports){
                    (function (global){
                        /*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */
                        ;(function () {
                            // Detect the `define` function exposed by asynchronous module loaders. The
                            // strict `define` check is necessary for compatibility with `r.js`.
                            var isLoader = typeof define === "function" && define.amd;

                            // A set of types used to distinguish objects from primitives.
                            var objectTypes = {
                                "function": true,
                                "object": true
                            };

                            // Detect the `exports` object exposed by CommonJS implementations.
                            var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

                            // Use the `global` object exposed by Node (including Browserify via
                            // `insert-module-globals`), Narwhal, and Ringo as the default context,
                            // and the `window` object in browsers. Rhino exports a `global` function
                            // instead.
                            var root = objectTypes[typeof window] && window || this,
                                freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == "object" && global;

                            if (freeGlobal && (freeGlobal["global"] === freeGlobal || freeGlobal["window"] === freeGlobal || freeGlobal["self"] === freeGlobal)) {
                                root = freeGlobal;
                            }

                            // Public: Initializes JSON 3 using the given `context` object, attaching the
                            // `stringify` and `parse` functions to the specified `exports` object.
                            function runInContext(context, exports) {
                                context || (context = root["Object"]());
                                exports || (exports = root["Object"]());

                                // Native constructor aliases.
                                var Number = context["Number"] || root["Number"],
                                    String = context["String"] || root["String"],
                                    Object = context["Object"] || root["Object"],
                                    Date = context["Date"] || root["Date"],
                                    SyntaxError = context["SyntaxError"] || root["SyntaxError"],
                                    TypeError = context["TypeError"] || root["TypeError"],
                                    Math = context["Math"] || root["Math"],
                                    nativeJSON = context["JSON"] || root["JSON"];

                                // Delegate to the native `stringify` and `parse` implementations.
                                if (typeof nativeJSON == "object" && nativeJSON) {
                                    exports.stringify = nativeJSON.stringify;
                                    exports.parse = nativeJSON.parse;
                                }

                                // Convenience aliases.
                                var objectProto = Object.prototype,
                                    getClass = objectProto.toString,
                                    isProperty, forEach, undef;

                                // Test the `Date#getUTC*` methods. Based on work by @Yaffle.
                                var isExtended = new Date(-3509827334573292);
                                try {
                                    // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical
                                    // results for certain dates in Opera >= 10.53.
                                    isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&
                                        // Safari < 2.0.2 stores the internal millisecond time value correctly,
                                        // but clips the values returned by the date methods to the range of
                                        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).
                                        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;
                                } catch (exception) {}

                                // Internal: Determines whether the native `JSON.stringify` and `parse`
                                // implementations are spec-compliant. Based on work by Ken Snyder.
                                function has(name) {
                                    if (has[name] !== undef) {
                                        // Return cached feature test result.
                                        return has[name];
                                    }
                                    var isSupported;
                                    if (name == "bug-string-char-index") {
                                        // IE <= 7 doesn't support accessing string characters using square
                                        // bracket notation. IE 8 only supports this for primitives.
                                        isSupported = "a"[0] != "a";
                                    } else if (name == "json") {
                                        // Indicates whether both `JSON.stringify` and `JSON.parse` are
                                        // supported.
                                        isSupported = has("json-stringify") && has("json-parse");
                                    } else {
                                        var value, serialized = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                                        // Test `JSON.stringify`.
                                        if (name == "json-stringify") {
                                            var stringify = exports.stringify, stringifySupported = typeof stringify == "function" && isExtended;
                                            if (stringifySupported) {
                                                // A test function object with a custom `toJSON` method.
                                                (value = function () {
                                                    return 1;
                                                }).toJSON = value;
                                                try {
                                                    stringifySupported =
                                                        // Firefox 3.1b1 and b2 serialize string, number, and boolean
                                                        // primitives as object literals.
                                                        stringify(0) === "0" &&
                                                        // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object
                                                        // literals.
                                                        stringify(new Number()) === "0" &&
                                                        stringify(new String()) == '""' &&
                                                        // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or
                                                        // does not define a canonical JSON representation (this applies to
                                                        // objects with `toJSON` properties as well, *unless* they are nested
                                                        // within an object or array).
                                                        stringify(getClass) === undef &&
                                                        // IE 8 serializes `undefined` as `"undefined"`. Safari <= 5.1.7 and
                                                        // FF 3.1b3 pass this test.
                                                        stringify(undef) === undef &&
                                                        // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,
                                                        // respectively, if the value is omitted entirely.
                                                        stringify() === undef &&
                                                        // FF 3.1b1, 2 throw an error if the given value is not a number,
                                                        // string, array, object, Boolean, or `null` literal. This applies to
                                                        // objects with custom `toJSON` methods as well, unless they are nested
                                                        // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`
                                                        // methods entirely.
                                                        stringify(value) === "1" &&
                                                        stringify([value]) == "[1]" &&
                                                        // Prototype <= 1.6.1 serializes `[undefined]` as `"[]"` instead of
                                                        // `"[null]"`.
                                                        stringify([undef]) == "[null]" &&
                                                        // YUI 3.0.0b1 fails to serialize `null` literals.
                                                        stringify(null) == "null" &&
                                                        // FF 3.1b1, 2 halts serialization if an array contains a function:
                                                        // `[1, true, getClass, 1]` serializes as "[1,true,],". FF 3.1b3
                                                        // elides non-JSON values from objects and arrays, unless they
                                                        // define custom `toJSON` methods.
                                                        stringify([undef, getClass, null]) == "[null,null,null]" &&
                                                        // Simple serialization test. FF 3.1b1 uses Unicode escape sequences
                                                        // where character escape codes are expected (e.g., `\b` => `\u0008`).
                                                        stringify({ "a": [value, true, false, null, "\x00\b\n\f\r\t"] }) == serialized &&
                                                        // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.
                                                        stringify(null, value) === "1" &&
                                                        stringify([1, 2], null, 1) == "[\n 1,\n 2\n]" &&
                                                        // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly
                                                        // serialize extended years.
                                                        stringify(new Date(-8.64e15)) == '"-271821-04-20T00:00:00.000Z"' &&
                                                        // The milliseconds are optional in ES 5, but required in 5.1.
                                                        stringify(new Date(8.64e15)) == '"+275760-09-13T00:00:00.000Z"' &&
                                                        // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative
                                                        // four-digit years instead of six-digit years. Credits: @Yaffle.
                                                        stringify(new Date(-621987552e5)) == '"-000001-01-01T00:00:00.000Z"' &&
                                                        // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond
                                                        // values less than 1000. Credits: @Yaffle.
                                                        stringify(new Date(-1)) == '"1969-12-31T23:59:59.999Z"';
                                                } catch (exception) {
                                                    stringifySupported = false;
                                                }
                                            }
                                            isSupported = stringifySupported;
                                        }
                                        // Test `JSON.parse`.
                                        if (name == "json-parse") {
                                            var parse = exports.parse;
                                            if (typeof parse == "function") {
                                                try {
                                                    // FF 3.1b1, b2 will throw an exception if a bare literal is provided.
                                                    // Conforming implementations should also coerce the initial argument to
                                                    // a string prior to parsing.
                                                    if (parse("0") === 0 && !parse(false)) {
                                                        // Simple parsing test.
                                                        value = parse(serialized);
                                                        var parseSupported = value["a"].length == 5 && value["a"][0] === 1;
                                                        if (parseSupported) {
                                                            try {
                                                                // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.
                                                                parseSupported = !parse('"\t"');
                                                            } catch (exception) {}
                                                            if (parseSupported) {
                                                                try {
                                                                    // FF 4.0 and 4.0.1 allow leading `+` signs and leading
                                                                    // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow
                                                                    // certain octal literals.
                                                                    parseSupported = parse("01") !== 1;
                                                                } catch (exception) {}
                                                            }
                                                            if (parseSupported) {
                                                                try {
                                                                    // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal
                                                                    // points. These environments, along with FF 3.1b1 and 2,
                                                                    // also allow trailing commas in JSON objects and arrays.
                                                                    parseSupported = parse("1.") !== 1;
                                                                } catch (exception) {}
                                                            }
                                                        }
                                                    }
                                                } catch (exception) {
                                                    parseSupported = false;
                                                }
                                            }
                                            isSupported = parseSupported;
                                        }
                                    }
                                    return has[name] = !!isSupported;
                                }

                                if (!has("json")) {
                                    // Common `[[Class]]` name aliases.
                                    var functionClass = "[object Function]",
                                        dateClass = "[object Date]",
                                        numberClass = "[object Number]",
                                        stringClass = "[object String]",
                                        arrayClass = "[object Array]",
                                        booleanClass = "[object Boolean]";

                                    // Detect incomplete support for accessing string characters by index.
                                    var charIndexBuggy = has("bug-string-char-index");

                                    // Define additional utility methods if the `Date` methods are buggy.
                                    if (!isExtended) {
                                        var floor = Math.floor;
                                        // A mapping between the months of the year and the number of days between
                                        // January 1st and the first of the respective month.
                                        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
                                        // Internal: Calculates the number of days between the Unix epoch and the
                                        // first day of the given month.
                                        var getDay = function (year, month) {
                                            return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);
                                        };
                                    }

                                    // Internal: Determines if a property is a direct property of the given
                                    // object. Delegates to the native `Object#hasOwnProperty` method.
                                    if (!(isProperty = objectProto.hasOwnProperty)) {
                                        isProperty = function (property) {
                                            var members = {}, constructor;
                                            if ((members.__proto__ = null, members.__proto__ = {
                                                // The *proto* property cannot be set multiple times in recent
                                                // versions of Firefox and SeaMonkey.
                                                "toString": 1
                                            }, members).toString != getClass) {
                                                // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but
                                                // supports the mutable *proto* property.
                                                isProperty = function (property) {
                                                    // Capture and break the object's prototype chain (see section 8.6.2
                                                    // of the ES 5.1 spec). The parenthesized expression prevents an
                                                    // unsafe transformation by the Closure Compiler.
                                                    var original = this.__proto__, result = property in (this.__proto__ = null, this);
                                                    // Restore the original prototype chain.
                                                    this.__proto__ = original;
                                                    return result;
                                                };
                                            } else {
                                                // Capture a reference to the top-level `Object` constructor.
                                                constructor = members.constructor;
                                                // Use the `constructor` property to simulate `Object#hasOwnProperty` in
                                                // other environments.
                                                isProperty = function (property) {
                                                    var parent = (this.constructor || constructor).prototype;
                                                    return property in this && !(property in parent && this[property] === parent[property]);
                                                };
                                            }
                                            members = null;
                                            return isProperty.call(this, property);
                                        };
                                    }

                                    // Internal: Normalizes the `for...in` iteration algorithm across
                                    // environments. Each enumerated key is yielded to a `callback` function.
                                    forEach = function (object, callback) {
                                        var size = 0, Properties, members, property;

                                        // Tests for bugs in the current environment's `for...in` algorithm. The
                                        // `valueOf` property inherits the non-enumerable flag from
                                        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.
                                        (Properties = function () {
                                            this.valueOf = 0;
                                        }).prototype.valueOf = 0;

                                        // Iterate over a new instance of the `Properties` class.
                                        members = new Properties();
                                        for (property in members) {
                                            // Ignore all properties inherited from `Object.prototype`.
                                            if (isProperty.call(members, property)) {
                                                size++;
                                            }
                                        }
                                        Properties = members = null;

                                        // Normalize the iteration algorithm.
                                        if (!size) {
                                            // A list of non-enumerable properties inherited from `Object.prototype`.
                                            members = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"];
                                            // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable
                                            // properties.
                                            forEach = function (object, callback) {
                                                var isFunction = getClass.call(object) == functionClass, property, length;
                                                var hasProperty = !isFunction && typeof object.constructor != "function" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;
                                                for (property in object) {
                                                    // Gecko <= 1.0 enumerates the `prototype` property of functions under
                                                    // certain conditions; IE does not.
                                                    if (!(isFunction && property == "prototype") && hasProperty.call(object, property)) {
                                                        callback(property);
                                                    }
                                                }
                                                // Manually invoke the callback for each non-enumerable property.
                                                for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));
                                            };
                                        } else if (size == 2) {
                                            // Safari <= 2.0.4 enumerates shadowed properties twice.
                                            forEach = function (object, callback) {
                                                // Create a set of iterated properties.
                                                var members = {}, isFunction = getClass.call(object) == functionClass, property;
                                                for (property in object) {
                                                    // Store each property name to prevent double enumeration. The
                                                    // `prototype` property of functions is not enumerated due to cross-
                                                    // environment inconsistencies.
                                                    if (!(isFunction && property == "prototype") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {
                                                        callback(property);
                                                    }
                                                }
                                            };
                                        } else {
                                            // No bugs detected; use the standard `for...in` algorithm.
                                            forEach = function (object, callback) {
                                                var isFunction = getClass.call(object) == functionClass, property, isConstructor;
                                                for (property in object) {
                                                    if (!(isFunction && property == "prototype") && isProperty.call(object, property) && !(isConstructor = property === "constructor")) {
                                                        callback(property);
                                                    }
                                                }
                                                // Manually invoke the callback for the `constructor` property due to
                                                // cross-environment inconsistencies.
                                                if (isConstructor || isProperty.call(object, (property = "constructor"))) {
                                                    callback(property);
                                                }
                                            };
                                        }
                                        return forEach(object, callback);
                                    };

                                    // Public: Serializes a JavaScript `value` as a JSON string. The optional
                                    // `filter` argument may specify either a function that alters how object and
                                    // array members are serialized, or an array of strings and numbers that
                                    // indicates which properties should be serialized. The optional `width`
                                    // argument may be either a string or number that specifies the indentation
                                    // level of the output.
                                    if (!has("json-stringify")) {
                                        // Internal: A map of control characters and their escaped equivalents.
                                        var Escapes = {
                                            92: "\\\\",
                                            34: '\\"',
                                            8: "\\b",
                                            12: "\\f",
                                            10: "\\n",
                                            13: "\\r",
                                            9: "\\t"
                                        };

                                        // Internal: Converts `value` into a zero-padded string such that its
                                        // length is at least equal to `width`. The `width` must be <= 6.
                                        var leadingZeroes = "000000";
                                        var toPaddedString = function (width, value) {
                                            // The `|| 0` expression is necessary to work around a bug in
                                            // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== "0"`.
                                            return (leadingZeroes + (value || 0)).slice(-width);
                                        };

                                        // Internal: Double-quotes a string `value`, replacing all ASCII control
                                        // characters (characters with code unit values between 0 and 31) with
                                        // their escaped equivalents. This is an implementation of the
                                        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.
                                        var unicodePrefix = "\\u00";
                                        var quote = function (value) {
                                            var result = '"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;
                                            var symbols = useCharIndex && (charIndexBuggy ? value.split("") : value);
                                            for (; index < length; index++) {
                                                var charCode = value.charCodeAt(index);
                                                // If the character is a control character, append its Unicode or
                                                // shorthand escape sequence; otherwise, append the character as-is.
                                                switch (charCode) {
                                                    case 8: case 9: case 10: case 12: case 13: case 34: case 92:
                                                        result += Escapes[charCode];
                                                        break;
                                                    default:
                                                        if (charCode < 32) {
                                                            result += unicodePrefix + toPaddedString(2, charCode.toString(16));
                                                            break;
                                                        }
                                                        result += useCharIndex ? symbols[index] : value.charAt(index);
                                                }
                                            }
                                            return result + '"';
                                        };

                                        // Internal: Recursively serializes an object. Implements the
                                        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.
                                        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {
                                            var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;
                                            try {
                                                // Necessary for host object support.
                                                value = object[property];
                                            } catch (exception) {}
                                            if (typeof value == "object" && value) {
                                                className = getClass.call(value);
                                                if (className == dateClass && !isProperty.call(value, "toJSON")) {
                                                    if (value > -1 / 0 && value < 1 / 0) {
                                                        // Dates are serialized according to the `Date#toJSON` method
                                                        // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15
                                                        // for the ISO 8601 date time string format.
                                                        if (getDay) {
                                                            // Manually compute the year, month, date, hours, minutes,
                                                            // seconds, and milliseconds if the `getUTC*` methods are
                                                            // buggy. Adapted from @Yaffle's `date-shim` project.
                                                            date = floor(value / 864e5);
                                                            for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);
                                                            for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);
                                                            date = 1 + date - getDay(year, month);
                                                            // The `time` value specifies the time within the day (see ES
                                                            // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used
                                                            // to compute `A modulo B`, as the `%` operator does not
                                                            // correspond to the `modulo` operation for negative numbers.
                                                            time = (value % 864e5 + 864e5) % 864e5;
                                                            // The hours, minutes, seconds, and milliseconds are obtained by
                                                            // decomposing the time within the day. See section 15.9.1.10.
                                                            hours = floor(time / 36e5) % 24;
                                                            minutes = floor(time / 6e4) % 60;
                                                            seconds = floor(time / 1e3) % 60;
                                                            milliseconds = time % 1e3;
                                                        } else {
                                                            year = value.getUTCFullYear();
                                                            month = value.getUTCMonth();
                                                            date = value.getUTCDate();
                                                            hours = value.getUTCHours();
                                                            minutes = value.getUTCMinutes();
                                                            seconds = value.getUTCSeconds();
                                                            milliseconds = value.getUTCMilliseconds();
                                                        }
                                                        // Serialize extended years correctly.
                                                        value = (year <= 0 || year >= 1e4 ? (year < 0 ? "-" : "+") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +
                                                            "-" + toPaddedString(2, month + 1) + "-" + toPaddedString(2, date) +
                                                            // Months, dates, hours, minutes, and seconds should have two
                                                            // digits; milliseconds should have three.
                                                            "T" + toPaddedString(2, hours) + ":" + toPaddedString(2, minutes) + ":" + toPaddedString(2, seconds) +
                                                            // Milliseconds are optional in ES 5.0, but required in 5.1.
                                                            "." + toPaddedString(3, milliseconds) + "Z";
                                                    } else {
                                                        value = null;
                                                    }
                                                } else if (typeof value.toJSON == "function" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, "toJSON"))) {
                                                    // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the
                                                    // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3
                                                    // ignores all `toJSON` methods on these objects unless they are
                                                    // defined directly on an instance.
                                                    value = value.toJSON(property);
                                                }
                                            }
                                            if (callback) {
                                                // If a replacement function was provided, call it to obtain the value
                                                // for serialization.
                                                value = callback.call(object, property, value);
                                            }
                                            if (value === null) {
                                                return "null";
                                            }
                                            className = getClass.call(value);
                                            if (className == booleanClass) {
                                                // Booleans are represented literally.
                                                return "" + value;
                                            } else if (className == numberClass) {
                                                // JSON numbers must be finite. `Infinity` and `NaN` are serialized as
                                                // `"null"`.
                                                return value > -1 / 0 && value < 1 / 0 ? "" + value : "null";
                                            } else if (className == stringClass) {
                                                // Strings are double-quoted and escaped.
                                                return quote("" + value);
                                            }
                                            // Recursively serialize objects and arrays.
                                            if (typeof value == "object") {
                                                // Check for cyclic structures. This is a linear search; performance
                                                // is inversely proportional to the number of unique nested objects.
                                                for (length = stack.length; length--;) {
                                                    if (stack[length] === value) {
                                                        // Cyclic structures cannot be serialized by `JSON.stringify`.
                                                        throw TypeError();
                                                    }
                                                }
                                                // Add the object to the stack of traversed objects.
                                                stack.push(value);
                                                results = [];
                                                // Save the current indentation level and indent one additional level.
                                                prefix = indentation;
                                                indentation += whitespace;
                                                if (className == arrayClass) {
                                                    // Recursively serialize array elements.
                                                    for (index = 0, length = value.length; index < length; index++) {
                                                        element = serialize(index, value, callback, properties, whitespace, indentation, stack);
                                                        results.push(element === undef ? "null" : element);
                                                    }
                                                    result = results.length ? (whitespace ? "[\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "]" : ("[" + results.join(",") + "]")) : "[]";
                                                } else {
                                                    // Recursively serialize object members. Members are selected from
                                                    // either a user-specified list of property names, or the object
                                                    // itself.
                                                    forEach(properties || value, function (property) {
                                                        var element = serialize(property, value, callback, properties, whitespace, indentation, stack);
                                                        if (element !== undef) {
                                                            // According to ES 5.1 section 15.12.3: "If `gap` {whitespace}
                                                            // is not the empty string, let `member` {quote(property) + ":"}
                                                            // be the concatenation of `member` and the `space` character."
                                                            // The "`space` character" refers to the literal space
                                                            // character, not the `space` {width} argument provided to
                                                            // `JSON.stringify`.
                                                            results.push(quote(property) + ":" + (whitespace ? " " : "") + element);
                                                        }
                                                    });
                                                    result = results.length ? (whitespace ? "{\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "}" : ("{" + results.join(",") + "}")) : "{}";
                                                }
                                                // Remove the object from the traversed object stack.
                                                stack.pop();
                                                return result;
                                            }
                                        };

                                        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.
                                        exports.stringify = function (source, filter, width) {
                                            var whitespace, callback, properties, className;
                                            if (objectTypes[typeof filter] && filter) {
                                                if ((className = getClass.call(filter)) == functionClass) {
                                                    callback = filter;
                                                } else if (className == arrayClass) {
                                                    // Convert the property names array into a makeshift set.
                                                    properties = {};
                                                    for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));
                                                }
                                            }
                                            if (width) {
                                                if ((className = getClass.call(width)) == numberClass) {
                                                    // Convert the `width` to an integer and create a string containing
                                                    // `width` number of space characters.
                                                    if ((width -= width % 1) > 0) {
                                                        for (whitespace = "", width > 10 && (width = 10); whitespace.length < width; whitespace += " ");
                                                    }
                                                } else if (className == stringClass) {
                                                    whitespace = width.length <= 10 ? width : width.slice(0, 10);
                                                }
                                            }
                                            // Opera <= 7.54u2 discards the values associated with empty string keys
                                            // (`""`) only if they are used directly within an object member list
                                            // (e.g., `!("" in { "": 1})`).
                                            return serialize("", (value = {}, value[""] = source, value), callback, properties, whitespace, "", []);
                                        };
                                    }

                                    // Public: Parses a JSON source string.
                                    if (!has("json-parse")) {
                                        var fromCharCode = String.fromCharCode;

                                        // Internal: A map of escaped control characters and their unescaped
                                        // equivalents.
                                        var Unescapes = {
                                            92: "\\",
                                            34: '"',
                                            47: "/",
                                            98: "\b",
                                            116: "\t",
                                            110: "\n",
                                            102: "\f",
                                            114: "\r"
                                        };

                                        // Internal: Stores the parser state.
                                        var Index, Source;

                                        // Internal: Resets the parser state and throws a `SyntaxError`.
                                        var abort = function () {
                                            Index = Source = null;
                                            throw SyntaxError();
                                        };

                                        // Internal: Returns the next token, or `"$"` if the parser has reached
                                        // the end of the source string. A token may be a string, number, `null`
                                        // literal, or Boolean literal.
                                        var lex = function () {
                                            var source = Source, length = source.length, value, begin, position, isSigned, charCode;
                                            while (Index < length) {
                                                charCode = source.charCodeAt(Index);
                                                switch (charCode) {
                                                    case 9: case 10: case 13: case 32:
                                                        // Skip whitespace tokens, including tabs, carriage returns, line
                                                        // feeds, and space characters.
                                                        Index++;
                                                        break;
                                                    case 123: case 125: case 91: case 93: case 58: case 44:
                                                        // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at
                                                        // the current position.
                                                        value = charIndexBuggy ? source.charAt(Index) : source[Index];
                                                        Index++;
                                                        return value;
                                                    case 34:
                                                        // `"` delimits a JSON string; advance to the next character and
                                                        // begin parsing the string. String tokens are prefixed with the
                                                        // sentinel `@` character to distinguish them from punctuators and
                                                        // end-of-string tokens.
                                                        for (value = "@", Index++; Index < length;) {
                                                            charCode = source.charCodeAt(Index);
                                                            if (charCode < 32) {
                                                                // Unescaped ASCII control characters (those with a code unit
                                                                // less than the space character) are not permitted.
                                                                abort();
                                                            } else if (charCode == 92) {
                                                                // A reverse solidus (`\`) marks the beginning of an escaped
                                                                // control character (including `"`, `\`, and `/`) or Unicode
                                                                // escape sequence.
                                                                charCode = source.charCodeAt(++Index);
                                                                switch (charCode) {
                                                                    case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:
                                                                        // Revive escaped control characters.
                                                                        value += Unescapes[charCode];
                                                                        Index++;
                                                                        break;
                                                                    case 117:
                                                                        // `\u` marks the beginning of a Unicode escape sequence.
                                                                        // Advance to the first character and validate the
                                                                        // four-digit code point.
                                                                        begin = ++Index;
                                                                        for (position = Index + 4; Index < position; Index++) {
                                                                            charCode = source.charCodeAt(Index);
                                                                            // A valid sequence comprises four hexdigits (case-
                                                                            // insensitive) that form a single hexadecimal value.
                                                                            if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {
                                                                                // Invalid Unicode escape sequence.
                                                                                abort();
                                                                            }
                                                                        }
                                                                        // Revive the escaped character.
                                                                        value += fromCharCode("0x" + source.slice(begin, Index));
                                                                        break;
                                                                    default:
                                                                        // Invalid escape sequence.
                                                                        abort();
                                                                }
                                                            } else {
                                                                if (charCode == 34) {
                                                                    // An unescaped double-quote character marks the end of the
                                                                    // string.
                                                                    break;
                                                                }
                                                                charCode = source.charCodeAt(Index);
                                                                begin = Index;
                                                                // Optimize for the common case where a string is valid.
                                                                while (charCode >= 32 && charCode != 92 && charCode != 34) {
                                                                    charCode = source.charCodeAt(++Index);
                                                                }
                                                                // Append the string as-is.
                                                                value += source.slice(begin, Index);
                                                            }
                                                        }
                                                        if (source.charCodeAt(Index) == 34) {
                                                            // Advance to the next character and return the revived string.
                                                            Index++;
                                                            return value;
                                                        }
                                                        // Unterminated string.
                                                        abort();
                                                    default:
                                                        // Parse numbers and literals.
                                                        begin = Index;
                                                        // Advance past the negative sign, if one is specified.
                                                        if (charCode == 45) {
                                                            isSigned = true;
                                                            charCode = source.charCodeAt(++Index);
                                                        }
                                                        // Parse an integer or floating-point value.
                                                        if (charCode >= 48 && charCode <= 57) {
                                                            // Leading zeroes are interpreted as octal literals.
                                                            if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {
                                                                // Illegal octal literal.
                                                                abort();
                                                            }
                                                            isSigned = false;
                                                            // Parse the integer component.
                                                            for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);
                                                            // Floats cannot contain a leading decimal point; however, this
                                                            // case is already accounted for by the parser.
                                                            if (source.charCodeAt(Index) == 46) {
                                                                position = ++Index;
                                                                // Parse the decimal component.
                                                                for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);
                                                                if (position == Index) {
                                                                    // Illegal trailing decimal.
                                                                    abort();
                                                                }
                                                                Index = position;
                                                            }
                                                            // Parse exponents. The `e` denoting the exponent is
                                                            // case-insensitive.
                                                            charCode = source.charCodeAt(Index);
                                                            if (charCode == 101 || charCode == 69) {
                                                                charCode = source.charCodeAt(++Index);
                                                                // Skip past the sign following the exponent, if one is
                                                                // specified.
                                                                if (charCode == 43 || charCode == 45) {
                                                                    Index++;
                                                                }
                                                                // Parse the exponential component.
                                                                for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);
                                                                if (position == Index) {
                                                                    // Illegal empty exponent.
                                                                    abort();
                                                                }
                                                                Index = position;
                                                            }
                                                            // Coerce the parsed value to a JavaScript number.
                                                            return +source.slice(begin, Index);
                                                        }
                                                        // A negative sign may only precede numbers.
                                                        if (isSigned) {
                                                            abort();
                                                        }
                                                        // `true`, `false`, and `null` literals.
                                                        if (source.slice(Index, Index + 4) == "true") {
                                                            Index += 4;
                                                            return true;
                                                        } else if (source.slice(Index, Index + 5) == "false") {
                                                            Index += 5;
                                                            return false;
                                                        } else if (source.slice(Index, Index + 4) == "null") {
                                                            Index += 4;
                                                            return null;
                                                        }
                                                        // Unrecognized token.
                                                        abort();
                                                }
                                            }
                                            // Return the sentinel `$` character if the parser has reached the end
                                            // of the source string.
                                            return "$";
                                        };

                                        // Internal: Parses a JSON `value` token.
                                        var get = function (value) {
                                            var results, hasMembers;
                                            if (value == "$") {
                                                // Unexpected end of input.
                                                abort();
                                            }
                                            if (typeof value == "string") {
                                                if ((charIndexBuggy ? value.charAt(0) : value[0]) == "@") {
                                                    // Remove the sentinel `@` character.
                                                    return value.slice(1);
                                                }
                                                // Parse object and array literals.
                                                if (value == "[") {
                                                    // Parses a JSON array, returning a new JavaScript array.
                                                    results = [];
                                                    for (;; hasMembers || (hasMembers = true)) {
                                                        value = lex();
                                                        // A closing square bracket marks the end of the array literal.
                                                        if (value == "]") {
                                                            break;
                                                        }
                                                        // If the array literal contains elements, the current token
                                                        // should be a comma separating the previous element from the
                                                        // next.
                                                        if (hasMembers) {
                                                            if (value == ",") {
                                                                value = lex();
                                                                if (value == "]") {
                                                                    // Unexpected trailing `,` in array literal.
                                                                    abort();
                                                                }
                                                            } else {
                                                                // A `,` must separate each array element.
                                                                abort();
                                                            }
                                                        }
                                                        // Elisions and leading commas are not permitted.
                                                        if (value == ",") {
                                                            abort();
                                                        }
                                                        results.push(get(value));
                                                    }
                                                    return results;
                                                } else if (value == "{") {
                                                    // Parses a JSON object, returning a new JavaScript object.
                                                    results = {};
                                                    for (;; hasMembers || (hasMembers = true)) {
                                                        value = lex();
                                                        // A closing curly brace marks the end of the object literal.
                                                        if (value == "}") {
                                                            break;
                                                        }
                                                        // If the object literal contains members, the current token
                                                        // should be a comma separator.
                                                        if (hasMembers) {
                                                            if (value == ",") {
                                                                value = lex();
                                                                if (value == "}") {
                                                                    // Unexpected trailing `,` in object literal.
                                                                    abort();
                                                                }
                                                            } else {
                                                                // A `,` must separate each object member.
                                                                abort();
                                                            }
                                                        }
                                                        // Leading commas are not permitted, object property names must be
                                                        // double-quoted strings, and a `:` must separate each property
                                                        // name and value.
                                                        if (value == "," || typeof value != "string" || (charIndexBuggy ? value.charAt(0) : value[0]) != "@" || lex() != ":") {
                                                            abort();
                                                        }
                                                        results[value.slice(1)] = get(lex());
                                                    }
                                                    return results;
                                                }
                                                // Unexpected token encountered.
                                                abort();
                                            }
                                            return value;
                                        };

                                        // Internal: Updates a traversed object member.
                                        var update = function (source, property, callback) {
                                            var element = walk(source, property, callback);
                                            if (element === undef) {
                                                delete source[property];
                                            } else {
                                                source[property] = element;
                                            }
                                        };

                                        // Internal: Recursively traverses a parsed JSON object, invoking the
                                        // `callback` function for each value. This is an implementation of the
                                        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.
                                        var walk = function (source, property, callback) {
                                            var value = source[property], length;
                                            if (typeof value == "object" && value) {
                                                // `forEach` can't be used to traverse an array in Opera <= 8.54
                                                // because its `Object#hasOwnProperty` implementation returns `false`
                                                // for array indices (e.g., `![1, 2, 3].hasOwnProperty("0")`).
                                                if (getClass.call(value) == arrayClass) {
                                                    for (length = value.length; length--;) {
                                                        update(value, length, callback);
                                                    }
                                                } else {
                                                    forEach(value, function (property) {
                                                        update(value, property, callback);
                                                    });
                                                }
                                            }
                                            return callback.call(source, property, value);
                                        };

                                        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.
                                        exports.parse = function (source, callback) {
                                            var result, value;
                                            Index = 0;
                                            Source = "" + source;
                                            result = get(lex());
                                            // If a JSON string contains multiple tokens, it is invalid.
                                            if (lex() != "$") {
                                                abort();
                                            }
                                            // Reset the parser state.
                                            Index = Source = null;
                                            return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[""] = result, value), "", callback) : result;
                                        };
                                    }
                                }

                                exports["runInContext"] = runInContext;
                                return exports;
                            }

                            if (freeExports && !isLoader) {
                                // Export for CommonJS environments.
                                runInContext(root, freeExports);
                            } else {
                                // Export for web browsers and JavaScript engines.
                                var nativeJSON = root.JSON,
                                    previousJSON = root["JSON3"],
                                    isRestored = false;

                                var JSON3 = runInContext(root, (root["JSON3"] = {
                                    // Public: Restores the original value of the global `JSON` object and
                                    // returns a reference to the `JSON3` object.
                                    "noConflict": function () {
                                        if (!isRestored) {
                                            isRestored = true;
                                            root.JSON = nativeJSON;
                                            root["JSON3"] = previousJSON;
                                            nativeJSON = previousJSON = null;
                                        }
                                        return JSON3;
                                    }
                                }));

                                root.JSON = {
                                    "parse": JSON3.parse,
                                    "stringify": JSON3.stringify
                                };
                            }

                            // Export for asynchronous module loaders.
                            if (isLoader) {
                                define(function () {
                                    return JSON3;
                                });
                            }
                        }).call(this);

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{}],59:[function(require,module,exports){
                    'use strict';

                    var has = Object.prototype.hasOwnProperty;

                    /**
                     * Decode a URI encoded string.
                     *
                     * @param {String} input The URI encoded string.
                     * @returns {String} The decoded string.
                     * @api private
                     */
                    function decode(input) {
                        return decodeURIComponent(input.replace(/\+/g, ' '));
                    }

                    /**
                     * Simple query string parser.
                     *
                     * @param {String} query The query string that needs to be parsed.
                     * @returns {Object}
                     * @api public
                     */
                    function querystring(query) {
                        var parser = /([^=?&]+)=?([^&]*)/g
                            , result = {}
                            , part;

                        while (part = parser.exec(query)) {
                            var key = decode(part[1])
                                , value = decode(part[2]);

                            //
                            // Prevent overriding of existing properties. This ensures that build-in
                            // methods like `toString` or __proto__ are not overriden by malicious
                            // querystrings.
                            //
                            if (key in result) continue;
                            result[key] = value;
                        }

                        return result;
                    }

                    /**
                     * Transform a query string to an object.
                     *
                     * @param {Object} obj Object that should be transformed.
                     * @param {String} prefix Optional prefix.
                     * @returns {String}
                     * @api public
                     */
                    function querystringify(obj, prefix) {
                        prefix = prefix || '';

                        var pairs = [];

                        //
                        // Optionally prefix with a '?' if needed
                        //
                        if ('string' !== typeof prefix) prefix = '?';

                        for (var key in obj) {
                            if (has.call(obj, key)) {
                                pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));
                            }
                        }

                        return pairs.length ? prefix + pairs.join('&') : '';
                    }

//
// Expose the module.
//
                    exports.stringify = querystringify;
                    exports.parse = querystring;

                },{}],60:[function(require,module,exports){
                    'use strict';

                    /**
                     * Check if we're required to add a port number.
                     *
                     * @see https://url.spec.whatwg.org/#default-port
                     * @param {Number|String} port Port number we need to check
                     * @param {String} protocol Protocol we need to check against.
                     * @returns {Boolean} Is it a default port for the given protocol
                     * @api private
                     */
                    module.exports = function required(port, protocol) {
                        protocol = protocol.split(':')[0];
                        port = +port;

                        if (!port) return false;

                        switch (protocol) {
                            case 'http':
                            case 'ws':
                                return port !== 80;

                            case 'https':
                            case 'wss':
                                return port !== 443;

                            case 'ftp':
                                return port !== 21;

                            case 'gopher':
                                return port !== 70;

                            case 'file':
                                return false;
                        }

                        return port !== 0;
                    };

                },{}],61:[function(require,module,exports){
                    (function (global){
                        'use strict';

                        var required = require('requires-port')
                            , qs = require('querystringify')
                            , protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i
                            , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//;

                        /**
                         * These are the parse rules for the URL parser, it informs the parser
                         * about:
                         *
                         * 0. The char it Needs to parse, if it's a string it should be done using
                         *    indexOf, RegExp using exec and NaN means set as current value.
                         * 1. The property we should set when parsing this value.
                         * 2. Indication if it's backwards or forward parsing, when set as number it's
                         *    the value of extra chars that should be split off.
                         * 3. Inherit from location if non existing in the parser.
                         * 4. `toLowerCase` the resulting value.
                         */
                        var rules = [
                            ['#', 'hash'],                        // Extract from the back.
                            ['?', 'query'],                       // Extract from the back.
                            function sanitize(address) {          // Sanitize what is left of the address
                                return address.replace('\\', '/');
                            },
                            ['/', 'pathname'],                    // Extract from the back.
                            ['@', 'auth', 1],                     // Extract from the front.
                            [NaN, 'host', undefined, 1, 1],       // Set left over value.
                            [/:(\d+)$/, 'port', undefined, 1],    // RegExp the back.
                            [NaN, 'hostname', undefined, 1, 1]    // Set left over.
                        ];

                        /**
                         * These properties should not be copied or inherited from. This is only needed
                         * for all non blob URL's as a blob URL does not include a hash, only the
                         * origin.
                         *
                         * @type {Object}
                         * @private
                         */
                        var ignore = { hash: 1, query: 1 };

                        /**
                         * The location object differs when your code is loaded through a normal page,
                         * Worker or through a worker using a blob. And with the blobble begins the
                         * trouble as the location object will contain the URL of the blob, not the
                         * location of the page where our code is loaded in. The actual origin is
                         * encoded in the `pathname` so we can thankfully generate a good "default"
                         * location from it so we can generate proper relative URL's again.
                         *
                         * @param {Object|String} loc Optional default location object.
                         * @returns {Object} lolcation object.
                         * @public
                         */
                        function lolcation(loc) {
                            var location = global && global.location || {};
                            loc = loc || location;

                            var finaldestination = {}
                                , type = typeof loc
                                , key;

                            if ('blob:' === loc.protocol) {
                                finaldestination = new Url(unescape(loc.pathname), {});
                            } else if ('string' === type) {
                                finaldestination = new Url(loc, {});
                                for (key in ignore) delete finaldestination[key];
                            } else if ('object' === type) {
                                for (key in loc) {
                                    if (key in ignore) continue;
                                    finaldestination[key] = loc[key];
                                }

                                if (finaldestination.slashes === undefined) {
                                    finaldestination.slashes = slashes.test(loc.href);
                                }
                            }

                            return finaldestination;
                        }

                        /**
                         * @typedef ProtocolExtract
                         * @type Object
                         * @property {String} protocol Protocol matched in the URL, in lowercase.
                         * @property {Boolean} slashes `true` if protocol is followed by "//", else `false`.
                         * @property {String} rest Rest of the URL that is not part of the protocol.
                         */

                        /**
                         * Extract protocol information from a URL with/without double slash ("//").
                         *
                         * @param {String} address URL we want to extract from.
                         * @return {ProtocolExtract} Extracted information.
                         * @private
                         */
                        function extractProtocol(address) {
                            var match = protocolre.exec(address);

                            return {
                                protocol: match[1] ? match[1].toLowerCase() : '',
                                slashes: !!match[2],
                                rest: match[3]
                            };
                        }

                        /**
                         * Resolve a relative URL pathname against a base URL pathname.
                         *
                         * @param {String} relative Pathname of the relative URL.
                         * @param {String} base Pathname of the base URL.
                         * @return {String} Resolved pathname.
                         * @private
                         */
                        function resolve(relative, base) {
                            var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))
                                , i = path.length
                                , last = path[i - 1]
                                , unshift = false
                                , up = 0;

                            while (i--) {
                                if (path[i] === '.') {
                                    path.splice(i, 1);
                                } else if (path[i] === '..') {
                                    path.splice(i, 1);
                                    up++;
                                } else if (up) {
                                    if (i === 0) unshift = true;
                                    path.splice(i, 1);
                                    up--;
                                }
                            }

                            if (unshift) path.unshift('');
                            if (last === '.' || last === '..') path.push('');

                            return path.join('/');
                        }

                        /**
                         * The actual URL instance. Instead of returning an object we've opted-in to
                         * create an actual constructor as it's much more memory efficient and
                         * faster and it pleases my OCD.
                         *
                         * It is worth noting that we should not use `URL` as class name to prevent
                         * clashes with the global URL instance that got introduced in browsers.
                         *
                         * @constructor
                         * @param {String} address URL we want to parse.
                         * @param {Object|String} location Location defaults for relative paths.
                         * @param {Boolean|Function} parser Parser for the query string.
                         * @private
                         */
                        function Url(address, location, parser) {
                            if (!(this instanceof Url)) {
                                return new Url(address, location, parser);
                            }

                            var relative, extracted, parse, instruction, index, key
                                , instructions = rules.slice()
                                , type = typeof location
                                , url = this
                                , i = 0;

                            //
                            // The following if statements allows this module two have compatibility with
                            // 2 different API:
                            //
                            // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments
                            //    where the boolean indicates that the query string should also be parsed.
                            //
                            // 2. The `URL` interface of the browser which accepts a URL, object as
                            //    arguments. The supplied object will be used as default values / fall-back
                            //    for relative paths.
                            //
                            if ('object' !== type && 'string' !== type) {
                                parser = location;
                                location = null;
                            }

                            if (parser && 'function' !== typeof parser) parser = qs.parse;

                            location = lolcation(location);

                            //
                            // Extract protocol information before running the instructions.
                            //
                            extracted = extractProtocol(address || '');
                            relative = !extracted.protocol && !extracted.slashes;
                            url.slashes = extracted.slashes || relative && location.slashes;
                            url.protocol = extracted.protocol || location.protocol || '';
                            address = extracted.rest;

                            //
                            // When the authority component is absent the URL starts with a path
                            // component.
                            //
                            if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];

                            for (; i < instructions.length; i++) {
                                instruction = instructions[i];

                                if (typeof instruction === 'function') {
                                    address = instruction(address);
                                    continue;
                                }

                                parse = instruction[0];
                                key = instruction[1];

                                if (parse !== parse) {
                                    url[key] = address;
                                } else if ('string' === typeof parse) {
                                    if (~(index = address.indexOf(parse))) {
                                        if ('number' === typeof instruction[2]) {
                                            url[key] = address.slice(0, index);
                                            address = address.slice(index + instruction[2]);
                                        } else {
                                            url[key] = address.slice(index);
                                            address = address.slice(0, index);
                                        }
                                    }
                                } else if ((index = parse.exec(address))) {
                                    url[key] = index[1];
                                    address = address.slice(0, index.index);
                                }

                                url[key] = url[key] || (
                                    relative && instruction[3] ? location[key] || '' : ''
                                );

                                //
                                // Hostname, host and protocol should be lowercased so they can be used to
                                // create a proper `origin`.
                                //
                                if (instruction[4]) url[key] = url[key].toLowerCase();
                            }

                            //
                            // Also parse the supplied query string in to an object. If we're supplied
                            // with a custom parser as function use that instead of the default build-in
                            // parser.
                            //
                            if (parser) url.query = parser(url.query);

                            //
                            // If the URL is relative, resolve the pathname against the base URL.
                            //
                            if (
                                relative
                                && location.slashes
                                && url.pathname.charAt(0) !== '/'
                                && (url.pathname !== '' || location.pathname !== '')
                            ) {
                                url.pathname = resolve(url.pathname, location.pathname);
                            }

                            //
                            // We should not add port numbers if they are already the default port number
                            // for a given protocol. As the host also contains the port number we're going
                            // override it with the hostname which contains no port number.
                            //
                            if (!required(url.port, url.protocol)) {
                                url.host = url.hostname;
                                url.port = '';
                            }

                            //
                            // Parse down the `auth` for the username and password.
                            //
                            url.username = url.password = '';
                            if (url.auth) {
                                instruction = url.auth.split(':');
                                url.username = instruction[0] || '';
                                url.password = instruction[1] || '';
                            }

                            url.origin = url.protocol && url.host && url.protocol !== 'file:'
                                ? url.protocol +'//'+ url.host
                                : 'null';

                            //
                            // The href is just the compiled result.
                            //
                            url.href = url.toString();
                        }

                        /**
                         * This is convenience method for changing properties in the URL instance to
                         * insure that they all propagate correctly.
                         *
                         * @param {String} part          Property we need to adjust.
                         * @param {Mixed} value          The newly assigned value.
                         * @param {Boolean|Function} fn  When setting the query, it will be the function
                         *                               used to parse the query.
                         *                               When setting the protocol, double slash will be
                         *                               removed from the final url if it is true.
                         * @returns {URL} URL instance for chaining.
                         * @public
                         */
                        function set(part, value, fn) {
                            var url = this;

                            switch (part) {
                                case 'query':
                                    if ('string' === typeof value && value.length) {
                                        value = (fn || qs.parse)(value);
                                    }

                                    url[part] = value;
                                    break;

                                case 'port':
                                    url[part] = value;

                                    if (!required(value, url.protocol)) {
                                        url.host = url.hostname;
                                        url[part] = '';
                                    } else if (value) {
                                        url.host = url.hostname +':'+ value;
                                    }

                                    break;

                                case 'hostname':
                                    url[part] = value;

                                    if (url.port) value += ':'+ url.port;
                                    url.host = value;
                                    break;

                                case 'host':
                                    url[part] = value;

                                    if (/:\d+$/.test(value)) {
                                        value = value.split(':');
                                        url.port = value.pop();
                                        url.hostname = value.join(':');
                                    } else {
                                        url.hostname = value;
                                        url.port = '';
                                    }

                                    break;

                                case 'protocol':
                                    url.protocol = value.toLowerCase();
                                    url.slashes = !fn;
                                    break;

                                case 'pathname':
                                case 'hash':
                                    if (value) {
                                        var char = part === 'pathname' ? '/' : '#';
                                        url[part] = value.charAt(0) !== char ? char + value : value;
                                    } else {
                                        url[part] = value;
                                    }
                                    break;

                                default:
                                    url[part] = value;
                            }

                            for (var i = 0; i < rules.length; i++) {
                                var ins = rules[i];

                                if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();
                            }

                            url.origin = url.protocol && url.host && url.protocol !== 'file:'
                                ? url.protocol +'//'+ url.host
                                : 'null';

                            url.href = url.toString();

                            return url;
                        }

                        /**
                         * Transform the properties back in to a valid and full URL string.
                         *
                         * @param {Function} stringify Optional query stringify function.
                         * @returns {String} Compiled version of the URL.
                         * @public
                         */
                        function toString(stringify) {
                            if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;

                            var query
                                , url = this
                                , protocol = url.protocol;

                            if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';

                            var result = protocol + (url.slashes ? '//' : '');

                            if (url.username) {
                                result += url.username;
                                if (url.password) result += ':'+ url.password;
                                result += '@';
                            }

                            result += url.host + url.pathname;

                            query = 'object' === typeof url.query ? stringify(url.query) : url.query;
                            if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;

                            if (url.hash) result += url.hash;

                            return result;
                        }

                        Url.prototype = { set: set, toString: toString };

//
// Expose the URL parser and some additional properties that might be useful for
// others or testing.
//
                        Url.extractProtocol = extractProtocol;
                        Url.location = lolcation;
                        Url.qs = qs;

                        module.exports = Url;

                    }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

                },{"querystringify":59,"requires-port":60}]},{},[1])(1)
            });


//# sourceMappingURL=sockjs.js.map

            /* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

        /***/ }),

    /***/ "./node_modules/strip-ansi/index.js":
    /*!******************************************!*\
  !*** ./node_modules/strip-ansi/index.js ***!
  \******************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";

        var ansiRegex = __webpack_require__(/*! ansi-regex */ "./node_modules/ansi-regex/index.js")();

        module.exports = function (str) {
            return typeof str === 'string' ? str.replace(ansiRegex, '') : str;
        };


        /***/ }),

    /***/ "./node_modules/style-loader/lib/addStyles.js":
    /*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        /*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

        var stylesInDom = {};

        var	memoize = function (fn) {
            var memo;

            return function () {
                if (typeof memo === "undefined") memo = fn.apply(this, arguments);
                return memo;
            };
        };

        var isOldIE = memoize(function () {
            // Test for IE <= 9 as proposed by Browserhacks
            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
            // Tests for existence of standard globals is to allow style-loader
            // to operate correctly into non-standard environments
            // @see https://github.com/webpack-contrib/style-loader/issues/177
            return window && document && document.all && !window.atob;
        });

        var getTarget = function (target, parent) {
            if (parent){
                return parent.querySelector(target);
            }
            return document.querySelector(target);
        };

        var getElement = (function (fn) {
            var memo = {};

            return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                    return target();
                }
                if (typeof memo[target] === "undefined") {
                    var styleTarget = getTarget.call(this, target, parent);
                    // Special case to return head of iframe instead of iframe itself
                    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
                        try {
                            // This will throw an exception if access to iframe is blocked
                            // due to cross-origin restrictions
                            styleTarget = styleTarget.contentDocument.head;
                        } catch(e) {
                            styleTarget = null;
                        }
                    }
                    memo[target] = styleTarget;
                }
                return memo[target]
            };
        })();

        var singleton = null;
        var	singletonCounter = 0;
        var	stylesInsertedAtTop = [];

        var	fixUrls = __webpack_require__(/*! ./urls */ "./node_modules/style-loader/lib/urls.js");

        module.exports = function(list, options) {
            if (typeof DEBUG !== "undefined" && DEBUG) {
                if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
            }

            options = options || {};

            options.attrs = typeof options.attrs === "object" ? options.attrs : {};

            // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
            // tags it will allow on a page
            if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

            // By default, add <style> tags to the <head> element
            if (!options.insertInto) options.insertInto = "head";

            // By default, add <style> tags to the bottom of the target
            if (!options.insertAt) options.insertAt = "bottom";

            var styles = listToStyles(list, options);

            addStylesToDom(styles, options);

            return function update (newList) {
                var mayRemove = [];

                for (var i = 0; i < styles.length; i++) {
                    var item = styles[i];
                    var domStyle = stylesInDom[item.id];

                    domStyle.refs--;
                    mayRemove.push(domStyle);
                }

                if(newList) {
                    var newStyles = listToStyles(newList, options);
                    addStylesToDom(newStyles, options);
                }

                for (var i = 0; i < mayRemove.length; i++) {
                    var domStyle = mayRemove[i];

                    if(domStyle.refs === 0) {
                        for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

                        delete stylesInDom[domStyle.id];
                    }
                }
            };
        };

        function addStylesToDom (styles, options) {
            for (var i = 0; i < styles.length; i++) {
                var item = styles[i];
                var domStyle = stylesInDom[item.id];

                if(domStyle) {
                    domStyle.refs++;

                    for(var j = 0; j < domStyle.parts.length; j++) {
                        domStyle.parts[j](item.parts[j]);
                    }

                    for(; j < item.parts.length; j++) {
                        domStyle.parts.push(addStyle(item.parts[j], options));
                    }
                } else {
                    var parts = [];

                    for(var j = 0; j < item.parts.length; j++) {
                        parts.push(addStyle(item.parts[j], options));
                    }

                    stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
                }
            }
        }

        function listToStyles (list, options) {
            var styles = [];
            var newStyles = {};

            for (var i = 0; i < list.length; i++) {
                var item = list[i];
                var id = options.base ? item[0] + options.base : item[0];
                var css = item[1];
                var media = item[2];
                var sourceMap = item[3];
                var part = {css: css, media: media, sourceMap: sourceMap};

                if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
                else newStyles[id].parts.push(part);
            }

            return styles;
        }

        function insertStyleElement (options, style) {
            var target = getElement(options.insertInto)

            if (!target) {
                throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
            }

            var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

            if (options.insertAt === "top") {
                if (!lastStyleElementInsertedAtTop) {
                    target.insertBefore(style, target.firstChild);
                } else if (lastStyleElementInsertedAtTop.nextSibling) {
                    target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
                } else {
                    target.appendChild(style);
                }
                stylesInsertedAtTop.push(style);
            } else if (options.insertAt === "bottom") {
                target.appendChild(style);
            } else if (typeof options.insertAt === "object" && options.insertAt.before) {
                var nextSibling = getElement(options.insertAt.before, target);
                target.insertBefore(style, nextSibling);
            } else {
                throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
            }
        }

        function removeStyleElement (style) {
            if (style.parentNode === null) return false;
            style.parentNode.removeChild(style);

            var idx = stylesInsertedAtTop.indexOf(style);
            if(idx >= 0) {
                stylesInsertedAtTop.splice(idx, 1);
            }
        }

        function createStyleElement (options) {
            var style = document.createElement("style");

            if(options.attrs.type === undefined) {
                options.attrs.type = "text/css";
            }

            if(options.attrs.nonce === undefined) {
                var nonce = getNonce();
                if (nonce) {
                    options.attrs.nonce = nonce;
                }
            }

            addAttrs(style, options.attrs);
            insertStyleElement(options, style);

            return style;
        }

        function createLinkElement (options) {
            var link = document.createElement("link");

            if(options.attrs.type === undefined) {
                options.attrs.type = "text/css";
            }
            options.attrs.rel = "stylesheet";

            addAttrs(link, options.attrs);
            insertStyleElement(options, link);

            return link;
        }

        function addAttrs (el, attrs) {
            Object.keys(attrs).forEach(function (key) {
                el.setAttribute(key, attrs[key]);
            });
        }

        function getNonce() {
            if (false) {}

            return __webpack_require__.nc;
        }

        function addStyle (obj, options) {
            var style, update, remove, result;

            // If a transform function was defined, run it on the css
            if (options.transform && obj.css) {
                result = typeof options.transform === 'function'
                    ? options.transform(obj.css)
                    : options.transform.default(obj.css);

                if (result) {
                    // If transform returns a value, use that instead of the original css.
                    // This allows running runtime transformations on the css.
                    obj.css = result;
                } else {
                    // If the transform function returns a falsy value, don't add this css.
                    // This allows conditional loading of css
                    return function() {
                        // noop
                    };
                }
            }

            if (options.singleton) {
                var styleIndex = singletonCounter++;

                style = singleton || (singleton = createStyleElement(options));

                update = applyToSingletonTag.bind(null, style, styleIndex, false);
                remove = applyToSingletonTag.bind(null, style, styleIndex, true);

            } else if (
                obj.sourceMap &&
                typeof URL === "function" &&
                typeof URL.createObjectURL === "function" &&
                typeof URL.revokeObjectURL === "function" &&
                typeof Blob === "function" &&
                typeof btoa === "function"
            ) {
                style = createLinkElement(options);
                update = updateLink.bind(null, style, options);
                remove = function () {
                    removeStyleElement(style);

                    if(style.href) URL.revokeObjectURL(style.href);
                };
            } else {
                style = createStyleElement(options);
                update = applyToTag.bind(null, style);
                remove = function () {
                    removeStyleElement(style);
                };
            }

            update(obj);

            return function updateStyle (newObj) {
                if (newObj) {
                    if (
                        newObj.css === obj.css &&
                        newObj.media === obj.media &&
                        newObj.sourceMap === obj.sourceMap
                    ) {
                        return;
                    }

                    update(obj = newObj);
                } else {
                    remove();
                }
            };
        }

        var replaceText = (function () {
            var textStore = [];

            return function (index, replacement) {
                textStore[index] = replacement;

                return textStore.filter(Boolean).join('\n');
            };
        })();

        function applyToSingletonTag (style, index, remove, obj) {
            var css = remove ? "" : obj.css;

            if (style.styleSheet) {
                style.styleSheet.cssText = replaceText(index, css);
            } else {
                var cssNode = document.createTextNode(css);
                var childNodes = style.childNodes;

                if (childNodes[index]) style.removeChild(childNodes[index]);

                if (childNodes.length) {
                    style.insertBefore(cssNode, childNodes[index]);
                } else {
                    style.appendChild(cssNode);
                }
            }
        }

        function applyToTag (style, obj) {
            var css = obj.css;
            var media = obj.media;

            if(media) {
                style.setAttribute("media", media)
            }

            if(style.styleSheet) {
                style.styleSheet.cssText = css;
            } else {
                while(style.firstChild) {
                    style.removeChild(style.firstChild);
                }

                style.appendChild(document.createTextNode(css));
            }
        }

        function updateLink (link, options, obj) {
            var css = obj.css;
            var sourceMap = obj.sourceMap;

            /*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
            var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

            if (options.convertToAbsoluteUrls || autoFixUrls) {
                css = fixUrls(css);
            }

            if (sourceMap) {
                // http://stackoverflow.com/a/26603875
                css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
            }

            var blob = new Blob([css], { type: "text/css" });

            var oldSrc = link.href;

            link.href = URL.createObjectURL(blob);

            if(oldSrc) URL.revokeObjectURL(oldSrc);
        }


        /***/ }),

    /***/ "./node_modules/style-loader/lib/urls.js":
    /*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {


        /**
         * When source maps are enabled, `style-loader` uses a link element with a data-uri to
         * embed the css on the page. This breaks all relative urls because now they are relative to a
         * bundle instead of the current page.
         *
         * One solution is to only use full urls, but that may be impossible.
         *
         * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
         *
         * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
         *
         */

        module.exports = function (css) {
            // get current location
            var location = typeof window !== "undefined" && window.location;

            if (!location) {
                throw new Error("fixUrls requires window.location");
            }

            // blank or null?
            if (!css || typeof css !== "string") {
                return css;
            }

            var baseUrl = location.protocol + "//" + location.host;
            var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

            // convert each url(...)
            /*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
            var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
                // strip quotes (if they exist)
                var unquotedOrigUrl = origUrl
                    .trim()
                    .replace(/^"(.*)"$/, function(o, $1){ return $1; })
                    .replace(/^'(.*)'$/, function(o, $1){ return $1; });

                // already a full url? no change
                if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
                    return fullMatch;
                }

                // convert the url to a full url
                var newUrl;

                if (unquotedOrigUrl.indexOf("//") === 0) {
                    //TODO: should we add protocol?
                    newUrl = unquotedOrigUrl;
                } else if (unquotedOrigUrl.indexOf("/") === 0) {
                    // path should be relative to the base url
                    newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
                } else {
                    // path should be relative to current directory
                    newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
                }

                // send back the fixed url(...)
                return "url(" + JSON.stringify(newUrl) + ")";
            });

            // send back the fixed css
            return fixedCss;
        };


        /***/ }),

    /***/ "./node_modules/timers-browserify/main.js":
    /*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
            var apply = Function.prototype.apply;

// DOM APIs, for completeness

            exports.setTimeout = function() {
                return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
            };
            exports.setInterval = function() {
                return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
            };
            exports.clearTimeout =
                exports.clearInterval = function(timeout) {
                    if (timeout) {
                        timeout.close();
                    }
                };

            function Timeout(id, clearFn) {
                this._id = id;
                this._clearFn = clearFn;
            }
            Timeout.prototype.unref = Timeout.prototype.ref = function() {};
            Timeout.prototype.close = function() {
                this._clearFn.call(scope, this._id);
            };

// Does not start the time, just sets up the members needed.
            exports.enroll = function(item, msecs) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = msecs;
            };

            exports.unenroll = function(item) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = -1;
            };

            exports._unrefActive = exports.active = function(item) {
                clearTimeout(item._idleTimeoutId);

                var msecs = item._idleTimeout;
                if (msecs >= 0) {
                    item._idleTimeoutId = setTimeout(function onTimeout() {
                        if (item._onTimeout)
                            item._onTimeout();
                    }, msecs);
                }
            };

// setimmediate attaches itself to the global object
            __webpack_require__(/*! setimmediate */ "./node_modules/setimmediate/setImmediate.js");
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
            exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                (typeof global !== "undefined" && global.setImmediate) ||
                (this && this.setImmediate);
            exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                (typeof global !== "undefined" && global.clearImmediate) ||
                (this && this.clearImmediate);

            /* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

        /***/ }),

    /***/ "./node_modules/url/url.js":
    /*!*********************************!*\
  !*** ./node_modules/url/url.js ***!
  \*********************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



        var punycode = __webpack_require__(/*! punycode */ "./node_modules/punycode/punycode.js");
        var util = __webpack_require__(/*! ./util */ "./node_modules/url/util.js");

        exports.parse = urlParse;
        exports.resolve = urlResolve;
        exports.resolveObject = urlResolveObject;
        exports.format = urlFormat;

        exports.Url = Url;

        function Url() {
            this.protocol = null;
            this.slashes = null;
            this.auth = null;
            this.host = null;
            this.port = null;
            this.hostname = null;
            this.hash = null;
            this.search = null;
            this.query = null;
            this.pathname = null;
            this.path = null;
            this.href = null;
        }

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
        var protocolPattern = /^([a-z0-9.+-]+:)/i,
            portPattern = /:[0-9]*$/,

            // Special case for a simple path URL
            simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

            // RFC 2396: characters reserved for delimiting URLs.
            // We actually just auto-escape these.
            delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

            // RFC 2396: characters not allowed for various reasons.
            unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

            // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
            autoEscape = ['\''].concat(unwise),
            // Characters that are never ever allowed in a hostname.
            // Note that any invalid chars are also handled, but these
            // are the ones that are *expected* to be seen, so we fast-path
            // them.
            nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
            hostEndingChars = ['/', '?', '#'],
            hostnameMaxLen = 255,
            hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
            hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
            // protocols that can allow "unsafe" and "unwise" chars.
            unsafeProtocol = {
                'javascript': true,
                'javascript:': true
            },
            // protocols that never have a hostname.
            hostlessProtocol = {
                'javascript': true,
                'javascript:': true
            },
            // protocols that always contain a // bit.
            slashedProtocol = {
                'http': true,
                'https': true,
                'ftp': true,
                'gopher': true,
                'file': true,
                'http:': true,
                'https:': true,
                'ftp:': true,
                'gopher:': true,
                'file:': true
            },
            querystring = __webpack_require__(/*! querystring */ "./node_modules/querystring-es3/index.js");

        function urlParse(url, parseQueryString, slashesDenoteHost) {
            if (url && util.isObject(url) && url instanceof Url) return url;

            var u = new Url;
            u.parse(url, parseQueryString, slashesDenoteHost);
            return u;
        }

        Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
            if (!util.isString(url)) {
                throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
            }

            // Copy chrome, IE, opera backslash-handling behavior.
            // Back slashes before the query string get converted to forward slashes
            // See: https://code.google.com/p/chromium/issues/detail?id=25916
            var queryIndex = url.indexOf('?'),
                splitter =
                    (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
                uSplit = url.split(splitter),
                slashRegex = /\\/g;
            uSplit[0] = uSplit[0].replace(slashRegex, '/');
            url = uSplit.join(splitter);

            var rest = url;

            // trim before proceeding.
            // This is to support parse stuff like "  http://foo.com  \n"
            rest = rest.trim();

            if (!slashesDenoteHost && url.split('#').length === 1) {
                // Try fast path regexp
                var simplePath = simplePathPattern.exec(rest);
                if (simplePath) {
                    this.path = rest;
                    this.href = rest;
                    this.pathname = simplePath[1];
                    if (simplePath[2]) {
                        this.search = simplePath[2];
                        if (parseQueryString) {
                            this.query = querystring.parse(this.search.substr(1));
                        } else {
                            this.query = this.search.substr(1);
                        }
                    } else if (parseQueryString) {
                        this.search = '';
                        this.query = {};
                    }
                    return this;
                }
            }

            var proto = protocolPattern.exec(rest);
            if (proto) {
                proto = proto[0];
                var lowerProto = proto.toLowerCase();
                this.protocol = lowerProto;
                rest = rest.substr(proto.length);
            }

            // figure out if it's got a host
            // user@server is *always* interpreted as a hostname, and url
            // resolution will treat //foo/bar as host=foo,path=bar because that's
            // how the browser resolves relative URLs.
            if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
                var slashes = rest.substr(0, 2) === '//';
                if (slashes && !(proto && hostlessProtocol[proto])) {
                    rest = rest.substr(2);
                    this.slashes = true;
                }
            }

            if (!hostlessProtocol[proto] &&
                (slashes || (proto && !slashedProtocol[proto]))) {

                // there's a hostname.
                // the first instance of /, ?, ;, or # ends the host.
                //
                // If there is an @ in the hostname, then non-host chars *are* allowed
                // to the left of the last @ sign, unless some host-ending character
                // comes *before* the @-sign.
                // URLs are obnoxious.
                //
                // ex:
                // http://a@b@c/ => user:a@b host:c
                // http://a@b?@c => user:a host:c path:/?@c

                // v0.12 TODO(isaacs): This is not quite how Chrome does things.
                // Review our test case against browsers more comprehensively.

                // find the first instance of any hostEndingChars
                var hostEnd = -1;
                for (var i = 0; i < hostEndingChars.length; i++) {
                    var hec = rest.indexOf(hostEndingChars[i]);
                    if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                        hostEnd = hec;
                }

                // at this point, either we have an explicit point where the
                // auth portion cannot go past, or the last @ char is the decider.
                var auth, atSign;
                if (hostEnd === -1) {
                    // atSign can be anywhere.
                    atSign = rest.lastIndexOf('@');
                } else {
                    // atSign must be in auth portion.
                    // http://a@b/c@d => host:b auth:a path:/c@d
                    atSign = rest.lastIndexOf('@', hostEnd);
                }

                // Now we have a portion which is definitely the auth.
                // Pull that off.
                if (atSign !== -1) {
                    auth = rest.slice(0, atSign);
                    rest = rest.slice(atSign + 1);
                    this.auth = decodeURIComponent(auth);
                }

                // the host is the remaining to the left of the first non-host char
                hostEnd = -1;
                for (var i = 0; i < nonHostChars.length; i++) {
                    var hec = rest.indexOf(nonHostChars[i]);
                    if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                        hostEnd = hec;
                }
                // if we still have not hit it, then the entire thing is a host.
                if (hostEnd === -1)
                    hostEnd = rest.length;

                this.host = rest.slice(0, hostEnd);
                rest = rest.slice(hostEnd);

                // pull out port.
                this.parseHost();

                // we've indicated that there is a hostname,
                // so even if it's empty, it has to be present.
                this.hostname = this.hostname || '';

                // if hostname begins with [ and ends with ]
                // assume that it's an IPv6 address.
                var ipv6Hostname = this.hostname[0] === '[' &&
                    this.hostname[this.hostname.length - 1] === ']';

                // validate a little.
                if (!ipv6Hostname) {
                    var hostparts = this.hostname.split(/\./);
                    for (var i = 0, l = hostparts.length; i < l; i++) {
                        var part = hostparts[i];
                        if (!part) continue;
                        if (!part.match(hostnamePartPattern)) {
                            var newpart = '';
                            for (var j = 0, k = part.length; j < k; j++) {
                                if (part.charCodeAt(j) > 127) {
                                    // we replace non-ASCII char with a temporary placeholder
                                    // we need this to make sure size of hostname is not
                                    // broken by replacing non-ASCII by nothing
                                    newpart += 'x';
                                } else {
                                    newpart += part[j];
                                }
                            }
                            // we test again with ASCII char only
                            if (!newpart.match(hostnamePartPattern)) {
                                var validParts = hostparts.slice(0, i);
                                var notHost = hostparts.slice(i + 1);
                                var bit = part.match(hostnamePartStart);
                                if (bit) {
                                    validParts.push(bit[1]);
                                    notHost.unshift(bit[2]);
                                }
                                if (notHost.length) {
                                    rest = '/' + notHost.join('.') + rest;
                                }
                                this.hostname = validParts.join('.');
                                break;
                            }
                        }
                    }
                }

                if (this.hostname.length > hostnameMaxLen) {
                    this.hostname = '';
                } else {
                    // hostnames are always lower case.
                    this.hostname = this.hostname.toLowerCase();
                }

                if (!ipv6Hostname) {
                    // IDNA Support: Returns a punycoded representation of "domain".
                    // It only converts parts of the domain name that
                    // have non-ASCII characters, i.e. it doesn't matter if
                    // you call it with a domain that already is ASCII-only.
                    this.hostname = punycode.toASCII(this.hostname);
                }

                var p = this.port ? ':' + this.port : '';
                var h = this.hostname || '';
                this.host = h + p;
                this.href += this.host;

                // strip [ and ] from the hostname
                // the host field still retains them, though
                if (ipv6Hostname) {
                    this.hostname = this.hostname.substr(1, this.hostname.length - 2);
                    if (rest[0] !== '/') {
                        rest = '/' + rest;
                    }
                }
            }

            // now rest is set to the post-host stuff.
            // chop off any delim chars.
            if (!unsafeProtocol[lowerProto]) {

                // First, make 100% sure that any "autoEscape" chars get
                // escaped, even if encodeURIComponent doesn't think they
                // need to be.
                for (var i = 0, l = autoEscape.length; i < l; i++) {
                    var ae = autoEscape[i];
                    if (rest.indexOf(ae) === -1)
                        continue;
                    var esc = encodeURIComponent(ae);
                    if (esc === ae) {
                        esc = escape(ae);
                    }
                    rest = rest.split(ae).join(esc);
                }
            }


            // chop off from the tail first.
            var hash = rest.indexOf('#');
            if (hash !== -1) {
                // got a fragment string.
                this.hash = rest.substr(hash);
                rest = rest.slice(0, hash);
            }
            var qm = rest.indexOf('?');
            if (qm !== -1) {
                this.search = rest.substr(qm);
                this.query = rest.substr(qm + 1);
                if (parseQueryString) {
                    this.query = querystring.parse(this.query);
                }
                rest = rest.slice(0, qm);
            } else if (parseQueryString) {
                // no query string, but parseQueryString still requested
                this.search = '';
                this.query = {};
            }
            if (rest) this.pathname = rest;
            if (slashedProtocol[lowerProto] &&
                this.hostname && !this.pathname) {
                this.pathname = '/';
            }

            //to support http.request
            if (this.pathname || this.search) {
                var p = this.pathname || '';
                var s = this.search || '';
                this.path = p + s;
            }

            // finally, reconstruct the href based on what has been validated.
            this.href = this.format();
            return this;
        };

// format a parsed object into a url string
        function urlFormat(obj) {
            // ensure it's an object, and not a string url.
            // If it's an obj, this is a no-op.
            // this way, you can call url_format() on strings
            // to clean up potentially wonky urls.
            if (util.isString(obj)) obj = urlParse(obj);
            if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
            return obj.format();
        }

        Url.prototype.format = function() {
            var auth = this.auth || '';
            if (auth) {
                auth = encodeURIComponent(auth);
                auth = auth.replace(/%3A/i, ':');
                auth += '@';
            }

            var protocol = this.protocol || '',
                pathname = this.pathname || '',
                hash = this.hash || '',
                host = false,
                query = '';

            if (this.host) {
                host = auth + this.host;
            } else if (this.hostname) {
                host = auth + (this.hostname.indexOf(':') === -1 ?
                    this.hostname :
                    '[' + this.hostname + ']');
                if (this.port) {
                    host += ':' + this.port;
                }
            }

            if (this.query &&
                util.isObject(this.query) &&
                Object.keys(this.query).length) {
                query = querystring.stringify(this.query);
            }

            var search = this.search || (query && ('?' + query)) || '';

            if (protocol && protocol.substr(-1) !== ':') protocol += ':';

            // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
            // unless they had them to begin with.
            if (this.slashes ||
                (!protocol || slashedProtocol[protocol]) && host !== false) {
                host = '//' + (host || '');
                if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
            } else if (!host) {
                host = '';
            }

            if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
            if (search && search.charAt(0) !== '?') search = '?' + search;

            pathname = pathname.replace(/[?#]/g, function(match) {
                return encodeURIComponent(match);
            });
            search = search.replace('#', '%23');

            return protocol + host + pathname + search + hash;
        };

        function urlResolve(source, relative) {
            return urlParse(source, false, true).resolve(relative);
        }

        Url.prototype.resolve = function(relative) {
            return this.resolveObject(urlParse(relative, false, true)).format();
        };

        function urlResolveObject(source, relative) {
            if (!source) return relative;
            return urlParse(source, false, true).resolveObject(relative);
        }

        Url.prototype.resolveObject = function(relative) {
            if (util.isString(relative)) {
                var rel = new Url();
                rel.parse(relative, false, true);
                relative = rel;
            }

            var result = new Url();
            var tkeys = Object.keys(this);
            for (var tk = 0; tk < tkeys.length; tk++) {
                var tkey = tkeys[tk];
                result[tkey] = this[tkey];
            }

            // hash is always overridden, no matter what.
            // even href="" will remove it.
            result.hash = relative.hash;

            // if the relative url is empty, then there's nothing left to do here.
            if (relative.href === '') {
                result.href = result.format();
                return result;
            }

            // hrefs like //foo/bar always cut to the protocol.
            if (relative.slashes && !relative.protocol) {
                // take everything except the protocol from relative
                var rkeys = Object.keys(relative);
                for (var rk = 0; rk < rkeys.length; rk++) {
                    var rkey = rkeys[rk];
                    if (rkey !== 'protocol')
                        result[rkey] = relative[rkey];
                }

                //urlParse appends trailing / to urls like http://www.example.com
                if (slashedProtocol[result.protocol] &&
                    result.hostname && !result.pathname) {
                    result.path = result.pathname = '/';
                }

                result.href = result.format();
                return result;
            }

            if (relative.protocol && relative.protocol !== result.protocol) {
                // if it's a known url protocol, then changing
                // the protocol does weird things
                // first, if it's not file:, then we MUST have a host,
                // and if there was a path
                // to begin with, then we MUST have a path.
                // if it is file:, then the host is dropped,
                // because that's known to be hostless.
                // anything else is assumed to be absolute.
                if (!slashedProtocol[relative.protocol]) {
                    var keys = Object.keys(relative);
                    for (var v = 0; v < keys.length; v++) {
                        var k = keys[v];
                        result[k] = relative[k];
                    }
                    result.href = result.format();
                    return result;
                }

                result.protocol = relative.protocol;
                if (!relative.host && !hostlessProtocol[relative.protocol]) {
                    var relPath = (relative.pathname || '').split('/');
                    while (relPath.length && !(relative.host = relPath.shift()));
                    if (!relative.host) relative.host = '';
                    if (!relative.hostname) relative.hostname = '';
                    if (relPath[0] !== '') relPath.unshift('');
                    if (relPath.length < 2) relPath.unshift('');
                    result.pathname = relPath.join('/');
                } else {
                    result.pathname = relative.pathname;
                }
                result.search = relative.search;
                result.query = relative.query;
                result.host = relative.host || '';
                result.auth = relative.auth;
                result.hostname = relative.hostname || relative.host;
                result.port = relative.port;
                // to support http.request
                if (result.pathname || result.search) {
                    var p = result.pathname || '';
                    var s = result.search || '';
                    result.path = p + s;
                }
                result.slashes = result.slashes || relative.slashes;
                result.href = result.format();
                return result;
            }

            var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
                isRelAbs = (
                    relative.host ||
                    relative.pathname && relative.pathname.charAt(0) === '/'
                ),
                mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
                removeAllDots = mustEndAbs,
                srcPath = result.pathname && result.pathname.split('/') || [],
                relPath = relative.pathname && relative.pathname.split('/') || [],
                psychotic = result.protocol && !slashedProtocol[result.protocol];

            // if the url is a non-slashed url, then relative
            // links like ../.. should be able
            // to crawl up to the hostname, as well.  This is strange.
            // result.protocol has already been set by now.
            // Later on, put the first path part into the host field.
            if (psychotic) {
                result.hostname = '';
                result.port = null;
                if (result.host) {
                    if (srcPath[0] === '') srcPath[0] = result.host;
                    else srcPath.unshift(result.host);
                }
                result.host = '';
                if (relative.protocol) {
                    relative.hostname = null;
                    relative.port = null;
                    if (relative.host) {
                        if (relPath[0] === '') relPath[0] = relative.host;
                        else relPath.unshift(relative.host);
                    }
                    relative.host = null;
                }
                mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
            }

            if (isRelAbs) {
                // it's absolute.
                result.host = (relative.host || relative.host === '') ?
                    relative.host : result.host;
                result.hostname = (relative.hostname || relative.hostname === '') ?
                    relative.hostname : result.hostname;
                result.search = relative.search;
                result.query = relative.query;
                srcPath = relPath;
                // fall through to the dot-handling below.
            } else if (relPath.length) {
                // it's relative
                // throw away the existing file, and take the new path instead.
                if (!srcPath) srcPath = [];
                srcPath.pop();
                srcPath = srcPath.concat(relPath);
                result.search = relative.search;
                result.query = relative.query;
            } else if (!util.isNullOrUndefined(relative.search)) {
                // just pull out the search.
                // like href='?foo'.
                // Put this after the other two cases because it simplifies the booleans
                if (psychotic) {
                    result.hostname = result.host = srcPath.shift();
                    //occationaly the auth can get stuck only in host
                    //this especially happens in cases like
                    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
                    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                        result.host.split('@') : false;
                    if (authInHost) {
                        result.auth = authInHost.shift();
                        result.host = result.hostname = authInHost.shift();
                    }
                }
                result.search = relative.search;
                result.query = relative.query;
                //to support http.request
                if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
                    result.path = (result.pathname ? result.pathname : '') +
                        (result.search ? result.search : '');
                }
                result.href = result.format();
                return result;
            }

            if (!srcPath.length) {
                // no path at all.  easy.
                // we've already handled the other stuff above.
                result.pathname = null;
                //to support http.request
                if (result.search) {
                    result.path = '/' + result.search;
                } else {
                    result.path = null;
                }
                result.href = result.format();
                return result;
            }

            // if a url ENDs in . or .., then it must get a trailing slash.
            // however, if it ends in anything else non-slashy,
            // then it must NOT get a trailing slash.
            var last = srcPath.slice(-1)[0];
            var hasTrailingSlash = (
                (result.host || relative.host || srcPath.length > 1) &&
                (last === '.' || last === '..') || last === '');

            // strip single dots, resolve double dots to parent dir
            // if the path tries to go above the root, `up` ends up > 0
            var up = 0;
            for (var i = srcPath.length; i >= 0; i--) {
                last = srcPath[i];
                if (last === '.') {
                    srcPath.splice(i, 1);
                } else if (last === '..') {
                    srcPath.splice(i, 1);
                    up++;
                } else if (up) {
                    srcPath.splice(i, 1);
                    up--;
                }
            }

            // if the path is allowed to go above the root, restore leading ..s
            if (!mustEndAbs && !removeAllDots) {
                for (; up--; up) {
                    srcPath.unshift('..');
                }
            }

            if (mustEndAbs && srcPath[0] !== '' &&
                (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
                srcPath.unshift('');
            }

            if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
                srcPath.push('');
            }

            var isAbsolute = srcPath[0] === '' ||
                (srcPath[0] && srcPath[0].charAt(0) === '/');

            // put the host back
            if (psychotic) {
                result.hostname = result.host = isAbsolute ? '' :
                    srcPath.length ? srcPath.shift() : '';
                //occationaly the auth can get stuck only in host
                //this especially happens in cases like
                //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
                var authInHost = result.host && result.host.indexOf('@') > 0 ?
                    result.host.split('@') : false;
                if (authInHost) {
                    result.auth = authInHost.shift();
                    result.host = result.hostname = authInHost.shift();
                }
            }

            mustEndAbs = mustEndAbs || (result.host && srcPath.length);

            if (mustEndAbs && !isAbsolute) {
                srcPath.unshift('');
            }

            if (!srcPath.length) {
                result.pathname = null;
                result.path = null;
            } else {
                result.pathname = srcPath.join('/');
            }

            //to support request.http
            if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
                result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
            }
            result.auth = relative.auth || result.auth;
            result.slashes = result.slashes || relative.slashes;
            result.href = result.format();
            return result;
        };

        Url.prototype.parseHost = function() {
            var host = this.host;
            var port = portPattern.exec(host);
            if (port) {
                port = port[0];
                if (port !== ':') {
                    this.port = port.substr(1);
                }
                host = host.substr(0, host.length - port.length);
            }
            if (host) this.hostname = host;
        };


        /***/ }),

    /***/ "./node_modules/url/util.js":
    /*!**********************************!*\
  !*** ./node_modules/url/util.js ***!
  \**********************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        module.exports = {
            isString: function(arg) {
                return typeof(arg) === 'string';
            },
            isObject: function(arg) {
                return typeof(arg) === 'object' && arg !== null;
            },
            isNull: function(arg) {
                return arg === null;
            },
            isNullOrUndefined: function(arg) {
                return arg == null;
            }
        };


        /***/ }),

    /***/ "./node_modules/vue-click-outside/index.js":
    /*!*************************************************!*\
  !*** ./node_modules/vue-click-outside/index.js ***!
  \*************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        function validate(binding) {
            if (typeof binding.value !== 'function') {
                console.warn('[Vue-click-outside:] provided expression', binding.expression, 'is not a function.')
                return false
            }

            return true
        }

        function isPopup(popupItem, elements) {
            if (!popupItem || !elements)
                return false

            for (var i = 0, len = elements.length; i < len; i++) {
                try {
                    if (popupItem.contains(elements[i])) {
                        return true
                    }
                    if (elements[i].contains(popupItem)) {
                        return false
                    }
                } catch(e) {
                    return false
                }
            }

            return false
        }

        function isServer(vNode) {
            return typeof vNode.componentInstance !== 'undefined' && vNode.componentInstance.$isServer
        }

        exports = module.exports = {
            bind: function (el, binding, vNode) {
                if (!validate(binding)) return

                // Define Handler and cache it on the element
                function handler(e) {
                    if (!vNode.context) return

                    // some components may have related popup item, on which we shall prevent the click outside event handler.
                    var elements = e.path || (e.composedPath && e.composedPath())
                    elements && elements.length > 0 && elements.unshift(e.target)

                    if (el.contains(e.target) || isPopup(vNode.context.popupItem, elements)) return

                    el.__vueClickOutside__.callback(e)
                }

                // add Event Listeners
                el.__vueClickOutside__ = {
                    handler: handler,
                    callback: binding.value
                }
                !isServer(vNode) && document.addEventListener('click', handler)
            },

            update: function (el, binding) {
                if (validate(binding)) el.__vueClickOutside__.callback = binding.value
            },

            unbind: function (el, binding, vNode) {
                // Remove Event Listeners
                !isServer(vNode) && document.removeEventListener('click', el.__vueClickOutside__.handler)
                delete el.__vueClickOutside__
            }
        }


        /***/ }),

    /***/ "./node_modules/vue-hot-reload-api/dist/index.js":
    /*!*******************************************************!*\
  !*** ./node_modules/vue-hot-reload-api/dist/index.js ***!
  \*******************************************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        var Vue // late bind
        var version
        var map = Object.create(null)
        if (typeof window !== 'undefined') {
            window.__VUE_HOT_MAP__ = map
        }
        var installed = false
        var isBrowserify = false
        var initHookName = 'beforeCreate'

        exports.install = function (vue, browserify) {
            if (installed) { return }
            installed = true

            Vue = vue.__esModule ? vue.default : vue
            version = Vue.version.split('.').map(Number)
            isBrowserify = browserify

            // compat with < 2.0.0-alpha.7
            if (Vue.config._lifecycleHooks.indexOf('init') > -1) {
                initHookName = 'init'
            }

            exports.compatible = version[0] >= 2
            if (!exports.compatible) {
                console.warn(
                    '[HMR] You are using a version of vue-hot-reload-api that is ' +
                    'only compatible with Vue.js core ^2.0.0.'
                )
                return
            }
        }

        /**
         * Create a record for a hot module, which keeps track of its constructor
         * and instances
         *
         * @param {String} id
         * @param {Object} options
         */

        exports.createRecord = function (id, options) {
            if(map[id]) { return }

            var Ctor = null
            if (typeof options === 'function') {
                Ctor = options
                options = Ctor.options
            }
            makeOptionsHot(id, options)
            map[id] = {
                Ctor: Ctor,
                options: options,
                instances: []
            }
        }

        /**
         * Check if module is recorded
         *
         * @param {String} id
         */

        exports.isRecorded = function (id) {
            return typeof map[id] !== 'undefined'
        }

        /**
         * Make a Component options object hot.
         *
         * @param {String} id
         * @param {Object} options
         */

        function makeOptionsHot(id, options) {
            if (options.functional) {
                var render = options.render
                options.render = function (h, ctx) {
                    var instances = map[id].instances
                    if (ctx && instances.indexOf(ctx.parent) < 0) {
                        instances.push(ctx.parent)
                    }
                    return render(h, ctx)
                }
            } else {
                injectHook(options, initHookName, function() {
                    var record = map[id]
                    if (!record.Ctor) {
                        record.Ctor = this.constructor
                    }
                    record.instances.push(this)
                })
                injectHook(options, 'beforeDestroy', function() {
                    var instances = map[id].instances
                    instances.splice(instances.indexOf(this), 1)
                })
            }
        }

        /**
         * Inject a hook to a hot reloadable component so that
         * we can keep track of it.
         *
         * @param {Object} options
         * @param {String} name
         * @param {Function} hook
         */

        function injectHook(options, name, hook) {
            var existing = options[name]
            options[name] = existing
                ? Array.isArray(existing) ? existing.concat(hook) : [existing, hook]
                : [hook]
        }

        function tryWrap(fn) {
            return function (id, arg) {
                try {
                    fn(id, arg)
                } catch (e) {
                    console.error(e)
                    console.warn(
                        'Something went wrong during Vue component hot-reload. Full reload required.'
                    )
                }
            }
        }

        function updateOptions (oldOptions, newOptions) {
            for (var key in oldOptions) {
                if (!(key in newOptions)) {
                    delete oldOptions[key]
                }
            }
            for (var key$1 in newOptions) {
                oldOptions[key$1] = newOptions[key$1]
            }
        }

        exports.rerender = tryWrap(function (id, options) {
            var record = map[id]
            if (!options) {
                record.instances.slice().forEach(function (instance) {
                    instance.$forceUpdate()
                })
                return
            }
            if (typeof options === 'function') {
                options = options.options
            }
            if (record.Ctor) {
                record.Ctor.options.render = options.render
                record.Ctor.options.staticRenderFns = options.staticRenderFns
                record.instances.slice().forEach(function (instance) {
                    instance.$options.render = options.render
                    instance.$options.staticRenderFns = options.staticRenderFns
                    // reset static trees
                    // pre 2.5, all static trees are cached together on the instance
                    if (instance._staticTrees) {
                        instance._staticTrees = []
                    }
                    // 2.5.0
                    if (Array.isArray(record.Ctor.options.cached)) {
                        record.Ctor.options.cached = []
                    }
                    // 2.5.3
                    if (Array.isArray(instance.$options.cached)) {
                        instance.$options.cached = []
                    }

                    // post 2.5.4: v-once trees are cached on instance._staticTrees.
                    // Pure static trees are cached on the staticRenderFns array
                    // (both already reset above)

                    // 2.6: temporarily mark rendered scoped slots as unstable so that
                    // child components can be forced to update
                    var restore = patchScopedSlots(instance)
                    instance.$forceUpdate()
                    instance.$nextTick(restore)
                })
            } else {
                // functional or no instance created yet
                record.options.render = options.render
                record.options.staticRenderFns = options.staticRenderFns

                // handle functional component re-render
                if (record.options.functional) {
                    // rerender with full options
                    if (Object.keys(options).length > 2) {
                        updateOptions(record.options, options)
                    } else {
                        // template-only rerender.
                        // need to inject the style injection code for CSS modules
                        // to work properly.
                        var injectStyles = record.options._injectStyles
                        if (injectStyles) {
                            var render = options.render
                            record.options.render = function (h, ctx) {
                                injectStyles.call(ctx)
                                return render(h, ctx)
                            }
                        }
                    }
                    record.options._Ctor = null
                    // 2.5.3
                    if (Array.isArray(record.options.cached)) {
                        record.options.cached = []
                    }
                    record.instances.slice().forEach(function (instance) {
                        instance.$forceUpdate()
                    })
                }
            }
        })

        exports.reload = tryWrap(function (id, options) {
            var record = map[id]
            if (options) {
                if (typeof options === 'function') {
                    options = options.options
                }
                makeOptionsHot(id, options)
                if (record.Ctor) {
                    if (version[1] < 2) {
                        // preserve pre 2.2 behavior for global mixin handling
                        record.Ctor.extendOptions = options
                    }
                    var newCtor = record.Ctor.super.extend(options)
                    record.Ctor.options = newCtor.options
                    record.Ctor.cid = newCtor.cid
                    record.Ctor.prototype = newCtor.prototype
                    if (newCtor.release) {
                        // temporary global mixin strategy used in < 2.0.0-alpha.6
                        newCtor.release()
                    }
                } else {
                    updateOptions(record.options, options)
                }
            }
            record.instances.slice().forEach(function (instance) {
                if (instance.$vnode && instance.$vnode.context) {
                    instance.$vnode.context.$forceUpdate()
                } else {
                    console.warn(
                        'Root or manually mounted instance modified. Full reload required.'
                    )
                }
            })
        })

// 2.6 optimizes template-compiled scoped slots and skips updates if child
// only uses scoped slots. We need to patch the scoped slots resolving helper
// to temporarily mark all scoped slots as unstable in order to force child
// updates.
        function patchScopedSlots (instance) {
            if (!instance._u) { return }
            // https://github.com/vuejs/vue/blob/dev/src/core/instance/render-helpers/resolve-scoped-slots.js
            var original = instance._u
            instance._u = function (slots) {
                try {
                    // 2.6.4 ~ 2.6.6
                    return original(slots, true)
                } catch (e) {
                    // 2.5 / >= 2.6.7
                    return original(slots, null, true)
                }
            }
            return function () {
                instance._u = original
            }
        }


        /***/ }),

    /***/ "./node_modules/vue-loader/lib/runtime/component-normalizer.js":
    /*!*********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/component-normalizer.js ***!
  \*********************************************************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
        /* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

        function normalizeComponent (
            scriptExports,
            render,
            staticRenderFns,
            functionalTemplate,
            injectStyles,
            scopeId,
            moduleIdentifier, /* server only */
            shadowMode /* vue-cli only */
        ) {
            scriptExports = scriptExports || {}

            // ES6 modules interop
            var type = typeof scriptExports.default
            if (type === 'object' || type === 'function') {
                scriptExports = scriptExports.default
            }

            // Vue.extend constructor export interop
            var options = typeof scriptExports === 'function'
                ? scriptExports.options
                : scriptExports

            // render functions
            if (render) {
                options.render = render
                options.staticRenderFns = staticRenderFns
                options._compiled = true
            }

            // functional template
            if (functionalTemplate) {
                options.functional = true
            }

            // scopedId
            if (scopeId) {
                options._scopeId = scopeId
            }

            var hook
            if (moduleIdentifier) { // server build
                hook = function (context) {
                    // 2.3 injection
                    context =
                        context || // cached call
                        (this.$vnode && this.$vnode.ssrContext) || // stateful
                        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
                    // 2.2 with runInNewContext: true
                    if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                        context = __VUE_SSR_CONTEXT__
                    }
                    // inject component styles
                    if (injectStyles) {
                        injectStyles.call(this, context)
                    }
                    // register component module identifier for async chunk inferrence
                    if (context && context._registeredComponents) {
                        context._registeredComponents.add(moduleIdentifier)
                    }
                }
                // used by ssr in case component is cached and beforeCreate
                // never gets called
                options._ssrRegister = hook
            } else if (injectStyles) {
                hook = shadowMode
                    ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
                    : injectStyles
            }

            if (hook) {
                if (options.functional) {
                    // for template-only hot-reload because in that case the render fn doesn't
                    // go through the normalizer
                    options._injectStyles = hook
                    // register for functioal component in vue file
                    var originalRender = options.render
                    options.render = function renderWithStyleInjection (h, context) {
                        hook.call(context)
                        return originalRender(h, context)
                    }
                } else {
                    // inject component registration as beforeCreate hook
                    var existing = options.beforeCreate
                    options.beforeCreate = existing
                        ? [].concat(existing, hook)
                        : [hook]
                }
            }

            return {
                exports: scriptExports,
                options: options
            }
        }


        /***/ }),

    /***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-3813a3ca\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/PestsCarousel.vue":
    /*!***********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-3813a3ca","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/PestsCarousel.vue ***!
  \***********************************************************************************************************************************************************************************************************************************************/
    /*! exports provided: render, staticRenderFns */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
        var render = function() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c(
                "div",
                { staticClass: "slider-carousel" },
                [
                    _c("a", {
                        staticClass: "slider-left",
                        attrs: { href: "javascript:" },
                        on: { click: _vm.slideLeft }
                    }),
                    _vm._v(" "),
                    _c("a", {
                        staticClass: "slider-right",
                        attrs: { href: "javascript:" },
                        on: { click: _vm.slideRight }
                    }),
                    _vm._v(" "),
                    _vm._l(_vm.slides, function(ul, ulK) {
                        return [
                            _c(
                                "ul",
                                { class: [ulK === _vm.active ? "active" : ""] },
                                _vm._l(ul, function(li, liK) {
                                    return _c("li", { staticClass: "slider-li" }, [
                                        _c("a", { attrs: { href: "javascript:" } }, [
                                            _c("img", {
                                                attrs: {
                                                    src: "../../img/pests-slider/" + li.img,
                                                    alt: "img"
                                                }
                                            })
                                        ]),
                                        _vm._v(" "),
                                        _c("a", { attrs: { href: "javascript:" } }, [
                                            _vm._v("\n\t\t\t\t\t" + _vm._s(li.name) + " "),
                                            _c("span", { domProps: { innerHTML: _vm._s(li.desc) } })
                                        ])
                                    ])
                                }),
                                0
                            )
                        ]
                    }),
                    _vm._v(" "),
                    _c("div", { staticClass: "slider-controls" }, [
                        _c(
                            "div",
                            { staticClass: "slider-dots" },
                            _vm._l(_vm.keys, function(a, aK) {
                                return _c("a", {
                                    class: a === _vm.active ? "active" : "",
                                    attrs: { href: "javascript:" },
                                    on: {
                                        click: function($event) {
                                            return _vm.setItem(a)
                                        }
                                    }
                                })
                            }),
                            0
                        ),
                        _vm._v(" "),
                        _vm._m(0)
                    ])
                ],
                2
            )
        }
        var staticRenderFns = [
            function() {
                var _vm = this
                var _h = _vm.$createElement
                var _c = _vm._self._c || _h
                return _c("div", { staticClass: "slider-all" }, [
                    _c("a", { attrs: { href: "javascript:" } }, [
                        _c("span", [_vm._v("Показать все")])
                    ])
                ])
            }
        ]
        render._withStripped = true

        if (true) {
            module.hot.accept()
            if (module.hot.data) {
                __webpack_require__(/*! vue-hot-reload-api */ "./node_modules/vue-hot-reload-api/dist/index.js")      .rerender("data-v-3813a3ca", { render: render, staticRenderFns: staticRenderFns })
            }
        }

        /***/ }),

    /***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-3d517bc2\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/Zip.vue":
    /*!*************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-3d517bc2","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/Zip.vue ***!
  \*************************************************************************************************************************************************************************************************************************************/
    /*! exports provided: render, staticRenderFns */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
        var render = function() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c("div", { staticClass: "region-select" }, [
                _c("label", [
                    _c("input", {
                        directives: [
                            {
                                name: "model",
                                rawName: "v-model",
                                value: _vm.region,
                                expression: "region"
                            }
                        ],
                        staticClass: "region-search",
                        attrs: { type: "text", placeholder: "Ваш регион..." },
                        domProps: { value: _vm.region },
                        on: {
                            input: function($event) {
                                if ($event.target.composing) {
                                    return
                                }
                                _vm.region = $event.target.value
                            }
                        }
                    }),
                    _vm._v(" "),
                    _vm.code
                        ? _c("button", { staticClass: "region-sbt" }, [_c("b", [_vm._v("Да")])])
                        : _vm._e()
                ]),
                _vm._v(" "),
                _vm.filteredList.length > 0
                    ? _c(
                    "ul",
                    { staticClass: "regions-list" },
                    _vm._l(_vm.filteredList, function(r) {
                        return _c("li", [
                            _c(
                                "a",
                                {
                                    attrs: { href: "javascript:" },
                                    on: {
                                        click: function($event) {
                                            return _vm.regionSbt(r)
                                        }
                                    }
                                },
                                [_vm._v(_vm._s(r.name))]
                            )
                        ])
                    }),
                    0
                    )
                    : _vm._e(),
                _vm._v(" "),
                _c("input", {
                    directives: [
                        {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.code,
                            expression: "code"
                        }
                    ],
                    attrs: { type: "hidden" },
                    domProps: { value: _vm.code },
                    on: {
                        input: function($event) {
                            if ($event.target.composing) {
                                return
                            }
                            _vm.code = $event.target.value
                        }
                    }
                })
            ])
        }
        var staticRenderFns = []
        render._withStripped = true

        if (true) {
            module.hot.accept()
            if (module.hot.data) {
                __webpack_require__(/*! vue-hot-reload-api */ "./node_modules/vue-hot-reload-api/dist/index.js")      .rerender("data-v-3d517bc2", { render: render, staticRenderFns: staticRenderFns })
            }
        }

        /***/ }),

    /***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-70b73224\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/Select.vue":
    /*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-70b73224","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/Select.vue ***!
  \****************************************************************************************************************************************************************************************************************************************/
    /*! exports provided: render, staticRenderFns */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
        var render = function() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c("div", { staticClass: "select-box" }, [
                _c("a", {
                    staticClass: "select-arrow",
                    attrs: { href: "javascript:;" },
                    on: {
                        click: function($event) {
                            return _vm.open()
                        }
                    }
                }),
                _vm._v(" "),
                _c(
                    "ul",
                    {
                        directives: [
                            {
                                name: "click-outside",
                                rawName: "v-click-outside",
                                value: _vm.hide,
                                expression: "hide"
                            }
                        ],
                        staticClass: "select-items",
                        class: [_vm.isActive ? "active" : ""]
                    },
                    _vm._l(_vm.items, function(i) {
                        return _c("li", [
                            _c("a", { attrs: { href: "javascript:" } }, [_vm._v(_vm._s(i.name))])
                        ])
                    }),
                    0
                )
            ])
        }
        var staticRenderFns = []
        render._withStripped = true

        if (true) {
            module.hot.accept()
            if (module.hot.data) {
                __webpack_require__(/*! vue-hot-reload-api */ "./node_modules/vue-hot-reload-api/dist/index.js")      .rerender("data-v-70b73224", { render: render, staticRenderFns: staticRenderFns })
            }
        }

        /***/ }),

    /***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-8981a1ca\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/SelectLinks.vue":
    /*!*********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-8981a1ca","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/SelectLinks.vue ***!
  \*********************************************************************************************************************************************************************************************************************************************/
    /*! exports provided: render, staticRenderFns */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
        var render = function() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c("div", { staticClass: "select-box" }, [
                _c("a", {
                    staticClass: "select-arrow",
                    class: [_vm.isActive ? "passive" : ""],
                    attrs: { href: "javascript:;" },
                    on: {
                        click: function($event) {
                            return _vm.open()
                        }
                    }
                }),
                _vm._v(" "),
                _c(
                    "ul",
                    {
                        directives: [
                            {
                                name: "click-outside",
                                rawName: "v-click-outside",
                                value: _vm.hide,
                                expression: "hide"
                            }
                        ],
                        staticClass: "select-items",
                        class: [_vm.isActive ? "active" : ""]
                    },
                    _vm._l(_vm.items, function(i) {
                        return _c("li", [
                            _c("a", { attrs: { href: "javascript:" } }, [_vm._v(_vm._s(i.name))])
                        ])
                    }),
                    0
                )
            ])
        }
        var staticRenderFns = []
        render._withStripped = true

        if (true) {
            module.hot.accept()
            if (module.hot.data) {
                __webpack_require__(/*! vue-hot-reload-api */ "./node_modules/vue-hot-reload-api/dist/index.js")      .rerender("data-v-8981a1ca", { render: render, staticRenderFns: staticRenderFns })
            }
        }

        /***/ }),

    /***/ "./node_modules/vue/dist/vue.runtime.esm.js":
    /*!**************************************************!*\
  !*** ./node_modules/vue/dist/vue.runtime.esm.js ***!
  \**************************************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!
 * Vue.js v2.6.9
 * (c) 2014-2019 Evan You
 * Released under the MIT License.
 */
            /*  */

            var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
            function isUndef (v) {
                return v === undefined || v === null
            }

            function isDef (v) {
                return v !== undefined && v !== null
            }

            function isTrue (v) {
                return v === true
            }

            function isFalse (v) {
                return v === false
            }

            /**
             * Check if value is primitive.
             */
            function isPrimitive (value) {
                return (
                    typeof value === 'string' ||
                    typeof value === 'number' ||
                    // $flow-disable-line
                    typeof value === 'symbol' ||
                    typeof value === 'boolean'
                )
            }

            /**
             * Quick object check - this is primarily used to tell
             * Objects from primitive values when we know the value
             * is a JSON-compliant type.
             */
            function isObject (obj) {
                return obj !== null && typeof obj === 'object'
            }

            /**
             * Get the raw type string of a value, e.g., [object Object].
             */
            var _toString = Object.prototype.toString;

            function toRawType (value) {
                return _toString.call(value).slice(8, -1)
            }

            /**
             * Strict object type check. Only returns true
             * for plain JavaScript objects.
             */
            function isPlainObject (obj) {
                return _toString.call(obj) === '[object Object]'
            }

            function isRegExp (v) {
                return _toString.call(v) === '[object RegExp]'
            }

            /**
             * Check if val is a valid array index.
             */
            function isValidArrayIndex (val) {
                var n = parseFloat(String(val));
                return n >= 0 && Math.floor(n) === n && isFinite(val)
            }

            function isPromise (val) {
                return (
                    isDef(val) &&
                    typeof val.then === 'function' &&
                    typeof val.catch === 'function'
                )
            }

            /**
             * Convert a value to a string that is actually rendered.
             */
            function toString (val) {
                return val == null
                    ? ''
                    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
                        ? JSON.stringify(val, null, 2)
                        : String(val)
            }

            /**
             * Convert an input value to a number for persistence.
             * If the conversion fails, return original string.
             */
            function toNumber (val) {
                var n = parseFloat(val);
                return isNaN(n) ? val : n
            }

            /**
             * Make a map and return a function for checking if a key
             * is in that map.
             */
            function makeMap (
                str,
                expectsLowerCase
            ) {
                var map = Object.create(null);
                var list = str.split(',');
                for (var i = 0; i < list.length; i++) {
                    map[list[i]] = true;
                }
                return expectsLowerCase
                    ? function (val) { return map[val.toLowerCase()]; }
                    : function (val) { return map[val]; }
            }

            /**
             * Check if a tag is a built-in tag.
             */
            var isBuiltInTag = makeMap('slot,component', true);

            /**
             * Check if an attribute is a reserved attribute.
             */
            var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

            /**
             * Remove an item from an array.
             */
            function remove (arr, item) {
                if (arr.length) {
                    var index = arr.indexOf(item);
                    if (index > -1) {
                        return arr.splice(index, 1)
                    }
                }
            }

            /**
             * Check whether an object has the property.
             */
            var hasOwnProperty = Object.prototype.hasOwnProperty;
            function hasOwn (obj, key) {
                return hasOwnProperty.call(obj, key)
            }

            /**
             * Create a cached version of a pure function.
             */
            function cached (fn) {
                var cache = Object.create(null);
                return (function cachedFn (str) {
                    var hit = cache[str];
                    return hit || (cache[str] = fn(str))
                })
            }

            /**
             * Camelize a hyphen-delimited string.
             */
            var camelizeRE = /-(\w)/g;
            var camelize = cached(function (str) {
                return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
            });

            /**
             * Capitalize a string.
             */
            var capitalize = cached(function (str) {
                return str.charAt(0).toUpperCase() + str.slice(1)
            });

            /**
             * Hyphenate a camelCase string.
             */
            var hyphenateRE = /\B([A-Z])/g;
            var hyphenate = cached(function (str) {
                return str.replace(hyphenateRE, '-$1').toLowerCase()
            });

            /**
             * Simple bind polyfill for environments that do not support it,
             * e.g., PhantomJS 1.x. Technically, we don't need this anymore
             * since native bind is now performant enough in most browsers.
             * But removing it would mean breaking code that was able to run in
             * PhantomJS 1.x, so this must be kept for backward compatibility.
             */

            /* istanbul ignore next */
            function polyfillBind (fn, ctx) {
                function boundFn (a) {
                    var l = arguments.length;
                    return l
                        ? l > 1
                            ? fn.apply(ctx, arguments)
                            : fn.call(ctx, a)
                        : fn.call(ctx)
                }

                boundFn._length = fn.length;
                return boundFn
            }

            function nativeBind (fn, ctx) {
                return fn.bind(ctx)
            }

            var bind = Function.prototype.bind
                ? nativeBind
                : polyfillBind;

            /**
             * Convert an Array-like object to a real Array.
             */
            function toArray (list, start) {
                start = start || 0;
                var i = list.length - start;
                var ret = new Array(i);
                while (i--) {
                    ret[i] = list[i + start];
                }
                return ret
            }

            /**
             * Mix properties into target object.
             */
            function extend (to, _from) {
                for (var key in _from) {
                    to[key] = _from[key];
                }
                return to
            }

            /**
             * Merge an Array of Objects into a single Object.
             */
            function toObject (arr) {
                var res = {};
                for (var i = 0; i < arr.length; i++) {
                    if (arr[i]) {
                        extend(res, arr[i]);
                    }
                }
                return res
            }

            /* eslint-disable no-unused-vars */

            /**
             * Perform no operation.
             * Stubbing args to make Flow happy without leaving useless transpiled code
             * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
             */
            function noop (a, b, c) {}

            /**
             * Always return false.
             */
            var no = function (a, b, c) { return false; };

            /* eslint-enable no-unused-vars */

            /**
             * Return the same value.
             */
            var identity = function (_) { return _; };

            /**
             * Check if two values are loosely equal - that is,
             * if they are plain objects, do they have the same shape?
             */
            function looseEqual (a, b) {
                if (a === b) { return true }
                var isObjectA = isObject(a);
                var isObjectB = isObject(b);
                if (isObjectA && isObjectB) {
                    try {
                        var isArrayA = Array.isArray(a);
                        var isArrayB = Array.isArray(b);
                        if (isArrayA && isArrayB) {
                            return a.length === b.length && a.every(function (e, i) {
                                return looseEqual(e, b[i])
                            })
                        } else if (a instanceof Date && b instanceof Date) {
                            return a.getTime() === b.getTime()
                        } else if (!isArrayA && !isArrayB) {
                            var keysA = Object.keys(a);
                            var keysB = Object.keys(b);
                            return keysA.length === keysB.length && keysA.every(function (key) {
                                return looseEqual(a[key], b[key])
                            })
                        } else {
                            /* istanbul ignore next */
                            return false
                        }
                    } catch (e) {
                        /* istanbul ignore next */
                        return false
                    }
                } else if (!isObjectA && !isObjectB) {
                    return String(a) === String(b)
                } else {
                    return false
                }
            }

            /**
             * Return the first index at which a loosely equal value can be
             * found in the array (if value is a plain object, the array must
             * contain an object of the same shape), or -1 if it is not present.
             */
            function looseIndexOf (arr, val) {
                for (var i = 0; i < arr.length; i++) {
                    if (looseEqual(arr[i], val)) { return i }
                }
                return -1
            }

            /**
             * Ensure a function is called only once.
             */
            function once (fn) {
                var called = false;
                return function () {
                    if (!called) {
                        called = true;
                        fn.apply(this, arguments);
                    }
                }
            }

            var SSR_ATTR = 'data-server-rendered';

            var ASSET_TYPES = [
                'component',
                'directive',
                'filter'
            ];

            var LIFECYCLE_HOOKS = [
                'beforeCreate',
                'created',
                'beforeMount',
                'mounted',
                'beforeUpdate',
                'updated',
                'beforeDestroy',
                'destroyed',
                'activated',
                'deactivated',
                'errorCaptured',
                'serverPrefetch'
            ];

            /*  */



            var config = ({
                /**
                 * Option merge strategies (used in core/util/options)
                 */
                // $flow-disable-line
                optionMergeStrategies: Object.create(null),

                /**
                 * Whether to suppress warnings.
                 */
                silent: false,

                /**
                 * Show production mode tip message on boot?
                 */
                productionTip: "development" !== 'production',

                /**
                 * Whether to enable devtools
                 */
                devtools: "development" !== 'production',

                /**
                 * Whether to record perf
                 */
                performance: false,

                /**
                 * Error handler for watcher errors
                 */
                errorHandler: null,

                /**
                 * Warn handler for watcher warns
                 */
                warnHandler: null,

                /**
                 * Ignore certain custom elements
                 */
                ignoredElements: [],

                /**
                 * Custom user key aliases for v-on
                 */
                // $flow-disable-line
                keyCodes: Object.create(null),

                /**
                 * Check if a tag is reserved so that it cannot be registered as a
                 * component. This is platform-dependent and may be overwritten.
                 */
                isReservedTag: no,

                /**
                 * Check if an attribute is reserved so that it cannot be used as a component
                 * prop. This is platform-dependent and may be overwritten.
                 */
                isReservedAttr: no,

                /**
                 * Check if a tag is an unknown element.
                 * Platform-dependent.
                 */
                isUnknownElement: no,

                /**
                 * Get the namespace of an element
                 */
                getTagNamespace: noop,

                /**
                 * Parse the real tag name for the specific platform.
                 */
                parsePlatformTagName: identity,

                /**
                 * Check if an attribute must be bound using property, e.g. value
                 * Platform-dependent.
                 */
                mustUseProp: no,

                /**
                 * Perform updates asynchronously. Intended to be used by Vue Test Utils
                 * This will significantly reduce performance if set to false.
                 */
                async: true,

                /**
                 * Exposed for legacy reasons
                 */
                _lifecycleHooks: LIFECYCLE_HOOKS
            });

            /*  */

            /**
             * unicode letters used for parsing html tags, component names and property paths.
             * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
             * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
             */
            var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

            /**
             * Check if a string starts with $ or _
             */
            function isReserved (str) {
                var c = (str + '').charCodeAt(0);
                return c === 0x24 || c === 0x5F
            }

            /**
             * Define a property.
             */
            function def (obj, key, val, enumerable) {
                Object.defineProperty(obj, key, {
                    value: val,
                    enumerable: !!enumerable,
                    writable: true,
                    configurable: true
                });
            }

            /**
             * Parse simple path.
             */
            var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
            function parsePath (path) {
                if (bailRE.test(path)) {
                    return
                }
                var segments = path.split('.');
                return function (obj) {
                    for (var i = 0; i < segments.length; i++) {
                        if (!obj) { return }
                        obj = obj[segments[i]];
                    }
                    return obj
                }
            }

            /*  */

// can we use __proto__?
            var hasProto = '__proto__' in {};

// Browser environment sniffing
            var inBrowser = typeof window !== 'undefined';
            var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
            var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
            var UA = inBrowser && window.navigator.userAgent.toLowerCase();
            var isIE = UA && /msie|trident/.test(UA);
            var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
            var isEdge = UA && UA.indexOf('edge/') > 0;
            var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
            var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
            var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
            var isPhantomJS = UA && /phantomjs/.test(UA);
            var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
            var nativeWatch = ({}).watch;

            var supportsPassive = false;
            if (inBrowser) {
                try {
                    var opts = {};
                    Object.defineProperty(opts, 'passive', ({
                        get: function get () {
                            /* istanbul ignore next */
                            supportsPassive = true;
                        }
                    })); // https://github.com/facebook/flow/issues/285
                    window.addEventListener('test-passive', null, opts);
                } catch (e) {}
            }

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
            var _isServer;
            var isServerRendering = function () {
                if (_isServer === undefined) {
                    /* istanbul ignore if */
                    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
                        // detect presence of vue-server-renderer and avoid
                        // Webpack shimming the process
                        _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
                    } else {
                        _isServer = false;
                    }
                }
                return _isServer
            };

// detect devtools
            var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

            /* istanbul ignore next */
            function isNative (Ctor) {
                return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
            }

            var hasSymbol =
                typeof Symbol !== 'undefined' && isNative(Symbol) &&
                typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

            var _Set;
            /* istanbul ignore if */ // $flow-disable-line
            if (typeof Set !== 'undefined' && isNative(Set)) {
                // use native Set when available.
                _Set = Set;
            } else {
                // a non-standard Set polyfill that only works with primitive keys.
                _Set = /*@__PURE__*/(function () {
                    function Set () {
                        this.set = Object.create(null);
                    }
                    Set.prototype.has = function has (key) {
                        return this.set[key] === true
                    };
                    Set.prototype.add = function add (key) {
                        this.set[key] = true;
                    };
                    Set.prototype.clear = function clear () {
                        this.set = Object.create(null);
                    };

                    return Set;
                }());
            }

            /*  */

            var warn = noop;
            var tip = noop;
            var generateComponentTrace = (noop); // work around flow check
            var formatComponentName = (noop);

            if (true) {
                var hasConsole = typeof console !== 'undefined';
                var classifyRE = /(?:^|[-_])(\w)/g;
                var classify = function (str) { return str
                    .replace(classifyRE, function (c) { return c.toUpperCase(); })
                    .replace(/[-_]/g, ''); };

                warn = function (msg, vm) {
                    var trace = vm ? generateComponentTrace(vm) : '';

                    if (config.warnHandler) {
                        config.warnHandler.call(null, msg, vm, trace);
                    } else if (hasConsole && (!config.silent)) {
                        console.error(("[Vue warn]: " + msg + trace));
                    }
                };

                tip = function (msg, vm) {
                    if (hasConsole && (!config.silent)) {
                        console.warn("[Vue tip]: " + msg + (
                            vm ? generateComponentTrace(vm) : ''
                        ));
                    }
                };

                formatComponentName = function (vm, includeFile) {
                    if (vm.$root === vm) {
                        return '<Root>'
                    }
                    var options = typeof vm === 'function' && vm.cid != null
                        ? vm.options
                        : vm._isVue
                            ? vm.$options || vm.constructor.options
                            : vm;
                    var name = options.name || options._componentTag;
                    var file = options.__file;
                    if (!name && file) {
                        var match = file.match(/([^/\\]+)\.vue$/);
                        name = match && match[1];
                    }

                    return (
                        (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
                        (file && includeFile !== false ? (" at " + file) : '')
                    )
                };

                var repeat = function (str, n) {
                    var res = '';
                    while (n) {
                        if (n % 2 === 1) { res += str; }
                        if (n > 1) { str += str; }
                        n >>= 1;
                    }
                    return res
                };

                generateComponentTrace = function (vm) {
                    if (vm._isVue && vm.$parent) {
                        var tree = [];
                        var currentRecursiveSequence = 0;
                        while (vm) {
                            if (tree.length > 0) {
                                var last = tree[tree.length - 1];
                                if (last.constructor === vm.constructor) {
                                    currentRecursiveSequence++;
                                    vm = vm.$parent;
                                    continue
                                } else if (currentRecursiveSequence > 0) {
                                    tree[tree.length - 1] = [last, currentRecursiveSequence];
                                    currentRecursiveSequence = 0;
                                }
                            }
                            tree.push(vm);
                            vm = vm.$parent;
                        }
                        return '\n\nfound in\n\n' + tree
                            .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
                                ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
                                : formatComponentName(vm))); })
                            .join('\n')
                    } else {
                        return ("\n\n(found in " + (formatComponentName(vm)) + ")")
                    }
                };
            }

            /*  */

            var uid = 0;

            /**
             * A dep is an observable that can have multiple
             * directives subscribing to it.
             */
            var Dep = function Dep () {
                this.id = uid++;
                this.subs = [];
            };

            Dep.prototype.addSub = function addSub (sub) {
                this.subs.push(sub);
            };

            Dep.prototype.removeSub = function removeSub (sub) {
                remove(this.subs, sub);
            };

            Dep.prototype.depend = function depend () {
                if (Dep.target) {
                    Dep.target.addDep(this);
                }
            };

            Dep.prototype.notify = function notify () {
                // stabilize the subscriber list first
                var subs = this.subs.slice();
                if ( true && !config.async) {
                    // subs aren't sorted in scheduler if not running async
                    // we need to sort them now to make sure they fire in correct
                    // order
                    subs.sort(function (a, b) { return a.id - b.id; });
                }
                for (var i = 0, l = subs.length; i < l; i++) {
                    subs[i].update();
                }
            };

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
            Dep.target = null;
            var targetStack = [];

            function pushTarget (target) {
                targetStack.push(target);
                Dep.target = target;
            }

            function popTarget () {
                targetStack.pop();
                Dep.target = targetStack[targetStack.length - 1];
            }

            /*  */

            var VNode = function VNode (
                tag,
                data,
                children,
                text,
                elm,
                context,
                componentOptions,
                asyncFactory
            ) {
                this.tag = tag;
                this.data = data;
                this.children = children;
                this.text = text;
                this.elm = elm;
                this.ns = undefined;
                this.context = context;
                this.fnContext = undefined;
                this.fnOptions = undefined;
                this.fnScopeId = undefined;
                this.key = data && data.key;
                this.componentOptions = componentOptions;
                this.componentInstance = undefined;
                this.parent = undefined;
                this.raw = false;
                this.isStatic = false;
                this.isRootInsert = true;
                this.isComment = false;
                this.isCloned = false;
                this.isOnce = false;
                this.asyncFactory = asyncFactory;
                this.asyncMeta = undefined;
                this.isAsyncPlaceholder = false;
            };

            var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
            /* istanbul ignore next */
            prototypeAccessors.child.get = function () {
                return this.componentInstance
            };

            Object.defineProperties( VNode.prototype, prototypeAccessors );

            var createEmptyVNode = function (text) {
                if ( text === void 0 ) text = '';

                var node = new VNode();
                node.text = text;
                node.isComment = true;
                return node
            };

            function createTextVNode (val) {
                return new VNode(undefined, undefined, undefined, String(val))
            }

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
            function cloneVNode (vnode) {
                var cloned = new VNode(
                    vnode.tag,
                    vnode.data,
                    // #7975
                    // clone children array to avoid mutating original in case of cloning
                    // a child.
                    vnode.children && vnode.children.slice(),
                    vnode.text,
                    vnode.elm,
                    vnode.context,
                    vnode.componentOptions,
                    vnode.asyncFactory
                );
                cloned.ns = vnode.ns;
                cloned.isStatic = vnode.isStatic;
                cloned.key = vnode.key;
                cloned.isComment = vnode.isComment;
                cloned.fnContext = vnode.fnContext;
                cloned.fnOptions = vnode.fnOptions;
                cloned.fnScopeId = vnode.fnScopeId;
                cloned.asyncMeta = vnode.asyncMeta;
                cloned.isCloned = true;
                return cloned
            }

            /*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

            var arrayProto = Array.prototype;
            var arrayMethods = Object.create(arrayProto);

            var methodsToPatch = [
                'push',
                'pop',
                'shift',
                'unshift',
                'splice',
                'sort',
                'reverse'
            ];

            /**
             * Intercept mutating methods and emit events
             */
            methodsToPatch.forEach(function (method) {
                // cache original method
                var original = arrayProto[method];
                def(arrayMethods, method, function mutator () {
                    var args = [], len = arguments.length;
                    while ( len-- ) args[ len ] = arguments[ len ];

                    var result = original.apply(this, args);
                    var ob = this.__ob__;
                    var inserted;
                    switch (method) {
                        case 'push':
                        case 'unshift':
                            inserted = args;
                            break
                        case 'splice':
                            inserted = args.slice(2);
                            break
                    }
                    if (inserted) { ob.observeArray(inserted); }
                    // notify change
                    ob.dep.notify();
                    return result
                });
            });

            /*  */

            var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

            /**
             * In some cases we may want to disable observation inside a component's
             * update computation.
             */
            var shouldObserve = true;

            function toggleObserving (value) {
                shouldObserve = value;
            }

            /**
             * Observer class that is attached to each observed
             * object. Once attached, the observer converts the target
             * object's property keys into getter/setters that
             * collect dependencies and dispatch updates.
             */
            var Observer = function Observer (value) {
                this.value = value;
                this.dep = new Dep();
                this.vmCount = 0;
                def(value, '__ob__', this);
                if (Array.isArray(value)) {
                    if (hasProto) {
                        protoAugment(value, arrayMethods);
                    } else {
                        copyAugment(value, arrayMethods, arrayKeys);
                    }
                    this.observeArray(value);
                } else {
                    this.walk(value);
                }
            };

            /**
             * Walk through all properties and convert them into
             * getter/setters. This method should only be called when
             * value type is Object.
             */
            Observer.prototype.walk = function walk (obj) {
                var keys = Object.keys(obj);
                for (var i = 0; i < keys.length; i++) {
                    defineReactive$$1(obj, keys[i]);
                }
            };

            /**
             * Observe a list of Array items.
             */
            Observer.prototype.observeArray = function observeArray (items) {
                for (var i = 0, l = items.length; i < l; i++) {
                    observe(items[i]);
                }
            };

// helpers

            /**
             * Augment a target Object or Array by intercepting
             * the prototype chain using __proto__
             */
            function protoAugment (target, src) {
                /* eslint-disable no-proto */
                target.__proto__ = src;
                /* eslint-enable no-proto */
            }

            /**
             * Augment a target Object or Array by defining
             * hidden properties.
             */
            /* istanbul ignore next */
            function copyAugment (target, src, keys) {
                for (var i = 0, l = keys.length; i < l; i++) {
                    var key = keys[i];
                    def(target, key, src[key]);
                }
            }

            /**
             * Attempt to create an observer instance for a value,
             * returns the new observer if successfully observed,
             * or the existing observer if the value already has one.
             */
            function observe (value, asRootData) {
                if (!isObject(value) || value instanceof VNode) {
                    return
                }
                var ob;
                if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
                    ob = value.__ob__;
                } else if (
                    shouldObserve &&
                    !isServerRendering() &&
                    (Array.isArray(value) || isPlainObject(value)) &&
                    Object.isExtensible(value) &&
                    !value._isVue
                ) {
                    ob = new Observer(value);
                }
                if (asRootData && ob) {
                    ob.vmCount++;
                }
                return ob
            }

            /**
             * Define a reactive property on an Object.
             */
            function defineReactive$$1 (
                obj,
                key,
                val,
                customSetter,
                shallow
            ) {
                var dep = new Dep();

                var property = Object.getOwnPropertyDescriptor(obj, key);
                if (property && property.configurable === false) {
                    return
                }

                // cater for pre-defined getter/setters
                var getter = property && property.get;
                var setter = property && property.set;
                if ((!getter || setter) && arguments.length === 2) {
                    val = obj[key];
                }

                var childOb = !shallow && observe(val);
                Object.defineProperty(obj, key, {
                    enumerable: true,
                    configurable: true,
                    get: function reactiveGetter () {
                        var value = getter ? getter.call(obj) : val;
                        if (Dep.target) {
                            dep.depend();
                            if (childOb) {
                                childOb.dep.depend();
                                if (Array.isArray(value)) {
                                    dependArray(value);
                                }
                            }
                        }
                        return value
                    },
                    set: function reactiveSetter (newVal) {
                        var value = getter ? getter.call(obj) : val;
                        /* eslint-disable no-self-compare */
                        if (newVal === value || (newVal !== newVal && value !== value)) {
                            return
                        }
                        /* eslint-enable no-self-compare */
                        if ( true && customSetter) {
                            customSetter();
                        }
                        // #7981: for accessor properties without setter
                        if (getter && !setter) { return }
                        if (setter) {
                            setter.call(obj, newVal);
                        } else {
                            val = newVal;
                        }
                        childOb = !shallow && observe(newVal);
                        dep.notify();
                    }
                });
            }

            /**
             * Set a property on an object. Adds the new property and
             * triggers change notification if the property doesn't
             * already exist.
             */
            function set (target, key, val) {
                if ( true &&
                    (isUndef(target) || isPrimitive(target))
                ) {
                    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
                }
                if (Array.isArray(target) && isValidArrayIndex(key)) {
                    target.length = Math.max(target.length, key);
                    target.splice(key, 1, val);
                    return val
                }
                if (key in target && !(key in Object.prototype)) {
                    target[key] = val;
                    return val
                }
                var ob = (target).__ob__;
                if (target._isVue || (ob && ob.vmCount)) {
                    true && warn(
                        'Avoid adding reactive properties to a Vue instance or its root $data ' +
                        'at runtime - declare it upfront in the data option.'
                    );
                    return val
                }
                if (!ob) {
                    target[key] = val;
                    return val
                }
                defineReactive$$1(ob.value, key, val);
                ob.dep.notify();
                return val
            }

            /**
             * Delete a property and trigger change if necessary.
             */
            function del (target, key) {
                if ( true &&
                    (isUndef(target) || isPrimitive(target))
                ) {
                    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
                }
                if (Array.isArray(target) && isValidArrayIndex(key)) {
                    target.splice(key, 1);
                    return
                }
                var ob = (target).__ob__;
                if (target._isVue || (ob && ob.vmCount)) {
                    true && warn(
                        'Avoid deleting properties on a Vue instance or its root $data ' +
                        '- just set it to null.'
                    );
                    return
                }
                if (!hasOwn(target, key)) {
                    return
                }
                delete target[key];
                if (!ob) {
                    return
                }
                ob.dep.notify();
            }

            /**
             * Collect dependencies on array elements when the array is touched, since
             * we cannot intercept array element access like property getters.
             */
            function dependArray (value) {
                for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
                    e = value[i];
                    e && e.__ob__ && e.__ob__.dep.depend();
                    if (Array.isArray(e)) {
                        dependArray(e);
                    }
                }
            }

            /*  */

            /**
             * Option overwriting strategies are functions that handle
             * how to merge a parent option value and a child option
             * value into the final value.
             */
            var strats = config.optionMergeStrategies;

            /**
             * Options with restrictions
             */
            if (true) {
                strats.el = strats.propsData = function (parent, child, vm, key) {
                    if (!vm) {
                        warn(
                            "option \"" + key + "\" can only be used during instance " +
                            'creation with the `new` keyword.'
                        );
                    }
                    return defaultStrat(parent, child)
                };
            }

            /**
             * Helper that recursively merges two data objects together.
             */
            function mergeData (to, from) {
                if (!from) { return to }
                var key, toVal, fromVal;

                var keys = hasSymbol
                    ? Reflect.ownKeys(from)
                    : Object.keys(from);

                for (var i = 0; i < keys.length; i++) {
                    key = keys[i];
                    // in case the object is already observed...
                    if (key === '__ob__') { continue }
                    toVal = to[key];
                    fromVal = from[key];
                    if (!hasOwn(to, key)) {
                        set(to, key, fromVal);
                    } else if (
                        toVal !== fromVal &&
                        isPlainObject(toVal) &&
                        isPlainObject(fromVal)
                    ) {
                        mergeData(toVal, fromVal);
                    }
                }
                return to
            }

            /**
             * Data
             */
            function mergeDataOrFn (
                parentVal,
                childVal,
                vm
            ) {
                if (!vm) {
                    // in a Vue.extend merge, both should be functions
                    if (!childVal) {
                        return parentVal
                    }
                    if (!parentVal) {
                        return childVal
                    }
                    // when parentVal & childVal are both present,
                    // we need to return a function that returns the
                    // merged result of both functions... no need to
                    // check if parentVal is a function here because
                    // it has to be a function to pass previous merges.
                    return function mergedDataFn () {
                        return mergeData(
                            typeof childVal === 'function' ? childVal.call(this, this) : childVal,
                            typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
                        )
                    }
                } else {
                    return function mergedInstanceDataFn () {
                        // instance merge
                        var instanceData = typeof childVal === 'function'
                            ? childVal.call(vm, vm)
                            : childVal;
                        var defaultData = typeof parentVal === 'function'
                            ? parentVal.call(vm, vm)
                            : parentVal;
                        if (instanceData) {
                            return mergeData(instanceData, defaultData)
                        } else {
                            return defaultData
                        }
                    }
                }
            }

            strats.data = function (
                parentVal,
                childVal,
                vm
            ) {
                if (!vm) {
                    if (childVal && typeof childVal !== 'function') {
                        true && warn(
                            'The "data" option should be a function ' +
                            'that returns a per-instance value in component ' +
                            'definitions.',
                            vm
                        );

                        return parentVal
                    }
                    return mergeDataOrFn(parentVal, childVal)
                }

                return mergeDataOrFn(parentVal, childVal, vm)
            };

            /**
             * Hooks and props are merged as arrays.
             */
            function mergeHook (
                parentVal,
                childVal
            ) {
                var res = childVal
                    ? parentVal
                        ? parentVal.concat(childVal)
                        : Array.isArray(childVal)
                            ? childVal
                            : [childVal]
                    : parentVal;
                return res
                    ? dedupeHooks(res)
                    : res
            }

            function dedupeHooks (hooks) {
                var res = [];
                for (var i = 0; i < hooks.length; i++) {
                    if (res.indexOf(hooks[i]) === -1) {
                        res.push(hooks[i]);
                    }
                }
                return res
            }

            LIFECYCLE_HOOKS.forEach(function (hook) {
                strats[hook] = mergeHook;
            });

            /**
             * Assets
             *
             * When a vm is present (instance creation), we need to do
             * a three-way merge between constructor options, instance
             * options and parent options.
             */
            function mergeAssets (
                parentVal,
                childVal,
                vm,
                key
            ) {
                var res = Object.create(parentVal || null);
                if (childVal) {
                    true && assertObjectType(key, childVal, vm);
                    return extend(res, childVal)
                } else {
                    return res
                }
            }

            ASSET_TYPES.forEach(function (type) {
                strats[type + 's'] = mergeAssets;
            });

            /**
             * Watchers.
             *
             * Watchers hashes should not overwrite one
             * another, so we merge them as arrays.
             */
            strats.watch = function (
                parentVal,
                childVal,
                vm,
                key
            ) {
                // work around Firefox's Object.prototype.watch...
                if (parentVal === nativeWatch) { parentVal = undefined; }
                if (childVal === nativeWatch) { childVal = undefined; }
                /* istanbul ignore if */
                if (!childVal) { return Object.create(parentVal || null) }
                if (true) {
                    assertObjectType(key, childVal, vm);
                }
                if (!parentVal) { return childVal }
                var ret = {};
                extend(ret, parentVal);
                for (var key$1 in childVal) {
                    var parent = ret[key$1];
                    var child = childVal[key$1];
                    if (parent && !Array.isArray(parent)) {
                        parent = [parent];
                    }
                    ret[key$1] = parent
                        ? parent.concat(child)
                        : Array.isArray(child) ? child : [child];
                }
                return ret
            };

            /**
             * Other object hashes.
             */
            strats.props =
                strats.methods =
                    strats.inject =
                        strats.computed = function (
                            parentVal,
                            childVal,
                            vm,
                            key
                        ) {
                            if (childVal && "development" !== 'production') {
                                assertObjectType(key, childVal, vm);
                            }
                            if (!parentVal) { return childVal }
                            var ret = Object.create(null);
                            extend(ret, parentVal);
                            if (childVal) { extend(ret, childVal); }
                            return ret
                        };
            strats.provide = mergeDataOrFn;

            /**
             * Default strategy.
             */
            var defaultStrat = function (parentVal, childVal) {
                return childVal === undefined
                    ? parentVal
                    : childVal
            };

            /**
             * Validate component names
             */
            function checkComponents (options) {
                for (var key in options.components) {
                    validateComponentName(key);
                }
            }

            function validateComponentName (name) {
                if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
                    warn(
                        'Invalid component name: "' + name + '". Component names ' +
                        'should conform to valid custom element name in html5 specification.'
                    );
                }
                if (isBuiltInTag(name) || config.isReservedTag(name)) {
                    warn(
                        'Do not use built-in or reserved HTML elements as component ' +
                        'id: ' + name
                    );
                }
            }

            /**
             * Ensure all props option syntax are normalized into the
             * Object-based format.
             */
            function normalizeProps (options, vm) {
                var props = options.props;
                if (!props) { return }
                var res = {};
                var i, val, name;
                if (Array.isArray(props)) {
                    i = props.length;
                    while (i--) {
                        val = props[i];
                        if (typeof val === 'string') {
                            name = camelize(val);
                            res[name] = { type: null };
                        } else if (true) {
                            warn('props must be strings when using array syntax.');
                        }
                    }
                } else if (isPlainObject(props)) {
                    for (var key in props) {
                        val = props[key];
                        name = camelize(key);
                        res[name] = isPlainObject(val)
                            ? val
                            : { type: val };
                    }
                } else if (true) {
                    warn(
                        "Invalid value for option \"props\": expected an Array or an Object, " +
                        "but got " + (toRawType(props)) + ".",
                        vm
                    );
                }
                options.props = res;
            }

            /**
             * Normalize all injections into Object-based format
             */
            function normalizeInject (options, vm) {
                var inject = options.inject;
                if (!inject) { return }
                var normalized = options.inject = {};
                if (Array.isArray(inject)) {
                    for (var i = 0; i < inject.length; i++) {
                        normalized[inject[i]] = { from: inject[i] };
                    }
                } else if (isPlainObject(inject)) {
                    for (var key in inject) {
                        var val = inject[key];
                        normalized[key] = isPlainObject(val)
                            ? extend({ from: key }, val)
                            : { from: val };
                    }
                } else if (true) {
                    warn(
                        "Invalid value for option \"inject\": expected an Array or an Object, " +
                        "but got " + (toRawType(inject)) + ".",
                        vm
                    );
                }
            }

            /**
             * Normalize raw function directives into object format.
             */
            function normalizeDirectives (options) {
                var dirs = options.directives;
                if (dirs) {
                    for (var key in dirs) {
                        var def$$1 = dirs[key];
                        if (typeof def$$1 === 'function') {
                            dirs[key] = { bind: def$$1, update: def$$1 };
                        }
                    }
                }
            }

            function assertObjectType (name, value, vm) {
                if (!isPlainObject(value)) {
                    warn(
                        "Invalid value for option \"" + name + "\": expected an Object, " +
                        "but got " + (toRawType(value)) + ".",
                        vm
                    );
                }
            }

            /**
             * Merge two option objects into a new one.
             * Core utility used in both instantiation and inheritance.
             */
            function mergeOptions (
                parent,
                child,
                vm
            ) {
                if (true) {
                    checkComponents(child);
                }

                if (typeof child === 'function') {
                    child = child.options;
                }

                normalizeProps(child, vm);
                normalizeInject(child, vm);
                normalizeDirectives(child);

                // Apply extends and mixins on the child options,
                // but only if it is a raw options object that isn't
                // the result of another mergeOptions call.
                // Only merged options has the _base property.
                if (!child._base) {
                    if (child.extends) {
                        parent = mergeOptions(parent, child.extends, vm);
                    }
                    if (child.mixins) {
                        for (var i = 0, l = child.mixins.length; i < l; i++) {
                            parent = mergeOptions(parent, child.mixins[i], vm);
                        }
                    }
                }

                var options = {};
                var key;
                for (key in parent) {
                    mergeField(key);
                }
                for (key in child) {
                    if (!hasOwn(parent, key)) {
                        mergeField(key);
                    }
                }
                function mergeField (key) {
                    var strat = strats[key] || defaultStrat;
                    options[key] = strat(parent[key], child[key], vm, key);
                }
                return options
            }

            /**
             * Resolve an asset.
             * This function is used because child instances need access
             * to assets defined in its ancestor chain.
             */
            function resolveAsset (
                options,
                type,
                id,
                warnMissing
            ) {
                /* istanbul ignore if */
                if (typeof id !== 'string') {
                    return
                }
                var assets = options[type];
                // check local registration variations first
                if (hasOwn(assets, id)) { return assets[id] }
                var camelizedId = camelize(id);
                if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
                var PascalCaseId = capitalize(camelizedId);
                if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
                // fallback to prototype chain
                var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
                if ( true && warnMissing && !res) {
                    warn(
                        'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
                        options
                    );
                }
                return res
            }

            /*  */



            function validateProp (
                key,
                propOptions,
                propsData,
                vm
            ) {
                var prop = propOptions[key];
                var absent = !hasOwn(propsData, key);
                var value = propsData[key];
                // boolean casting
                var booleanIndex = getTypeIndex(Boolean, prop.type);
                if (booleanIndex > -1) {
                    if (absent && !hasOwn(prop, 'default')) {
                        value = false;
                    } else if (value === '' || value === hyphenate(key)) {
                        // only cast empty string / same name to boolean if
                        // boolean has higher priority
                        var stringIndex = getTypeIndex(String, prop.type);
                        if (stringIndex < 0 || booleanIndex < stringIndex) {
                            value = true;
                        }
                    }
                }
                // check default value
                if (value === undefined) {
                    value = getPropDefaultValue(vm, prop, key);
                    // since the default value is a fresh copy,
                    // make sure to observe it.
                    var prevShouldObserve = shouldObserve;
                    toggleObserving(true);
                    observe(value);
                    toggleObserving(prevShouldObserve);
                }
                if (
                    true
                ) {
                    assertProp(prop, key, value, vm, absent);
                }
                return value
            }

            /**
             * Get the default value of a prop.
             */
            function getPropDefaultValue (vm, prop, key) {
                // no default, return undefined
                if (!hasOwn(prop, 'default')) {
                    return undefined
                }
                var def = prop.default;
                // warn against non-factory defaults for Object & Array
                if ( true && isObject(def)) {
                    warn(
                        'Invalid default value for prop "' + key + '": ' +
                        'Props with type Object/Array must use a factory function ' +
                        'to return the default value.',
                        vm
                    );
                }
                // the raw prop value was also undefined from previous render,
                // return previous default value to avoid unnecessary watcher trigger
                if (vm && vm.$options.propsData &&
                    vm.$options.propsData[key] === undefined &&
                    vm._props[key] !== undefined
                ) {
                    return vm._props[key]
                }
                // call factory function for non-Function types
                // a value is Function if its prototype is function even across different execution context
                return typeof def === 'function' && getType(prop.type) !== 'Function'
                    ? def.call(vm)
                    : def
            }

            /**
             * Assert whether a prop is valid.
             */
            function assertProp (
                prop,
                name,
                value,
                vm,
                absent
            ) {
                if (prop.required && absent) {
                    warn(
                        'Missing required prop: "' + name + '"',
                        vm
                    );
                    return
                }
                if (value == null && !prop.required) {
                    return
                }
                var type = prop.type;
                var valid = !type || type === true;
                var expectedTypes = [];
                if (type) {
                    if (!Array.isArray(type)) {
                        type = [type];
                    }
                    for (var i = 0; i < type.length && !valid; i++) {
                        var assertedType = assertType(value, type[i]);
                        expectedTypes.push(assertedType.expectedType || '');
                        valid = assertedType.valid;
                    }
                }

                if (!valid) {
                    warn(
                        getInvalidTypeMessage(name, value, expectedTypes),
                        vm
                    );
                    return
                }
                var validator = prop.validator;
                if (validator) {
                    if (!validator(value)) {
                        warn(
                            'Invalid prop: custom validator check failed for prop "' + name + '".',
                            vm
                        );
                    }
                }
            }

            var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

            function assertType (value, type) {
                var valid;
                var expectedType = getType(type);
                if (simpleCheckRE.test(expectedType)) {
                    var t = typeof value;
                    valid = t === expectedType.toLowerCase();
                    // for primitive wrapper objects
                    if (!valid && t === 'object') {
                        valid = value instanceof type;
                    }
                } else if (expectedType === 'Object') {
                    valid = isPlainObject(value);
                } else if (expectedType === 'Array') {
                    valid = Array.isArray(value);
                } else {
                    valid = value instanceof type;
                }
                return {
                    valid: valid,
                    expectedType: expectedType
                }
            }

            /**
             * Use function string name to check built-in types,
             * because a simple equality check will fail when running
             * across different vms / iframes.
             */
            function getType (fn) {
                var match = fn && fn.toString().match(/^\s*function (\w+)/);
                return match ? match[1] : ''
            }

            function isSameType (a, b) {
                return getType(a) === getType(b)
            }

            function getTypeIndex (type, expectedTypes) {
                if (!Array.isArray(expectedTypes)) {
                    return isSameType(expectedTypes, type) ? 0 : -1
                }
                for (var i = 0, len = expectedTypes.length; i < len; i++) {
                    if (isSameType(expectedTypes[i], type)) {
                        return i
                    }
                }
                return -1
            }

            function getInvalidTypeMessage (name, value, expectedTypes) {
                var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
                    " Expected " + (expectedTypes.map(capitalize).join(', '));
                var expectedType = expectedTypes[0];
                var receivedType = toRawType(value);
                var expectedValue = styleValue(value, expectedType);
                var receivedValue = styleValue(value, receivedType);
                // check if we need to specify expected value
                if (expectedTypes.length === 1 &&
                    isExplicable(expectedType) &&
                    !isBoolean(expectedType, receivedType)) {
                    message += " with value " + expectedValue;
                }
                message += ", got " + receivedType + " ";
                // check if we need to specify received value
                if (isExplicable(receivedType)) {
                    message += "with value " + receivedValue + ".";
                }
                return message
            }

            function styleValue (value, type) {
                if (type === 'String') {
                    return ("\"" + value + "\"")
                } else if (type === 'Number') {
                    return ("" + (Number(value)))
                } else {
                    return ("" + value)
                }
            }

            function isExplicable (value) {
                var explicitTypes = ['string', 'number', 'boolean'];
                return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
            }

            function isBoolean () {
                var args = [], len = arguments.length;
                while ( len-- ) args[ len ] = arguments[ len ];

                return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
            }

            /*  */

            function handleError (err, vm, info) {
                // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
                // See: https://github.com/vuejs/vuex/issues/1505
                pushTarget();
                try {
                    if (vm) {
                        var cur = vm;
                        while ((cur = cur.$parent)) {
                            var hooks = cur.$options.errorCaptured;
                            if (hooks) {
                                for (var i = 0; i < hooks.length; i++) {
                                    try {
                                        var capture = hooks[i].call(cur, err, vm, info) === false;
                                        if (capture) { return }
                                    } catch (e) {
                                        globalHandleError(e, cur, 'errorCaptured hook');
                                    }
                                }
                            }
                        }
                    }
                    globalHandleError(err, vm, info);
                } finally {
                    popTarget();
                }
            }

            function invokeWithErrorHandling (
                handler,
                context,
                args,
                vm,
                info
            ) {
                var res;
                try {
                    res = args ? handler.apply(context, args) : handler.call(context);
                    if (res && !res._isVue && isPromise(res) && !res._handled) {
                        res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
                        // issue #9511
                        // avoid catch triggering multiple times when nested calls
                        res._handled = true;
                    }
                } catch (e) {
                    handleError(e, vm, info);
                }
                return res
            }

            function globalHandleError (err, vm, info) {
                if (config.errorHandler) {
                    try {
                        return config.errorHandler.call(null, err, vm, info)
                    } catch (e) {
                        // if the user intentionally throws the original error in the handler,
                        // do not log it twice
                        if (e !== err) {
                            logError(e, null, 'config.errorHandler');
                        }
                    }
                }
                logError(err, vm, info);
            }

            function logError (err, vm, info) {
                if (true) {
                    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
                }
                /* istanbul ignore else */
                if ((inBrowser || inWeex) && typeof console !== 'undefined') {
                    console.error(err);
                } else {
                    throw err
                }
            }

            /*  */

            var isUsingMicroTask = false;

            var callbacks = [];
            var pending = false;

            function flushCallbacks () {
                pending = false;
                var copies = callbacks.slice(0);
                callbacks.length = 0;
                for (var i = 0; i < copies.length; i++) {
                    copies[i]();
                }
            }

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
            var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
            /* istanbul ignore next, $flow-disable-line */
            if (typeof Promise !== 'undefined' && isNative(Promise)) {
                var p = Promise.resolve();
                timerFunc = function () {
                    p.then(flushCallbacks);
                    // In problematic UIWebViews, Promise.then doesn't completely break, but
                    // it can get stuck in a weird state where callbacks are pushed into the
                    // microtask queue but the queue isn't being flushed, until the browser
                    // needs to do some other work, e.g. handle a timer. Therefore we can
                    // "force" the microtask queue to be flushed by adding an empty timer.
                    if (isIOS) { setTimeout(noop); }
                };
                isUsingMicroTask = true;
            } else if (!isIE && typeof MutationObserver !== 'undefined' && (
                isNative(MutationObserver) ||
                // PhantomJS and iOS 7.x
                MutationObserver.toString() === '[object MutationObserverConstructor]'
            )) {
                // Use MutationObserver where native Promise is not available,
                // e.g. PhantomJS, iOS7, Android 4.4
                // (#6466 MutationObserver is unreliable in IE11)
                var counter = 1;
                var observer = new MutationObserver(flushCallbacks);
                var textNode = document.createTextNode(String(counter));
                observer.observe(textNode, {
                    characterData: true
                });
                timerFunc = function () {
                    counter = (counter + 1) % 2;
                    textNode.data = String(counter);
                };
                isUsingMicroTask = true;
            } else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
                // Fallback to setImmediate.
                // Techinically it leverages the (macro) task queue,
                // but it is still a better choice than setTimeout.
                timerFunc = function () {
                    setImmediate(flushCallbacks);
                };
            } else {
                // Fallback to setTimeout.
                timerFunc = function () {
                    setTimeout(flushCallbacks, 0);
                };
            }

            function nextTick (cb, ctx) {
                var _resolve;
                callbacks.push(function () {
                    if (cb) {
                        try {
                            cb.call(ctx);
                        } catch (e) {
                            handleError(e, ctx, 'nextTick');
                        }
                    } else if (_resolve) {
                        _resolve(ctx);
                    }
                });
                if (!pending) {
                    pending = true;
                    timerFunc();
                }
                // $flow-disable-line
                if (!cb && typeof Promise !== 'undefined') {
                    return new Promise(function (resolve) {
                        _resolve = resolve;
                    })
                }
            }

            /*  */

            /* not type checking this file because flow doesn't play well with Proxy */

            var initProxy;

            if (true) {
                var allowedGlobals = makeMap(
                    'Infinity,undefined,NaN,isFinite,isNaN,' +
                    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
                    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
                    'require' // for Webpack/Browserify
                );

                var warnNonPresent = function (target, key) {
                    warn(
                        "Property or method \"" + key + "\" is not defined on the instance but " +
                        'referenced during render. Make sure that this property is reactive, ' +
                        'either in the data option, or for class-based components, by ' +
                        'initializing the property. ' +
                        'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
                        target
                    );
                };

                var warnReservedPrefix = function (target, key) {
                    warn(
                        "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
                        'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
                        'prevent conflicts with Vue internals' +
                        'See: https://vuejs.org/v2/api/#data',
                        target
                    );
                };

                var hasProxy =
                    typeof Proxy !== 'undefined' && isNative(Proxy);

                if (hasProxy) {
                    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
                    config.keyCodes = new Proxy(config.keyCodes, {
                        set: function set (target, key, value) {
                            if (isBuiltInModifier(key)) {
                                warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
                                return false
                            } else {
                                target[key] = value;
                                return true
                            }
                        }
                    });
                }

                var hasHandler = {
                    has: function has (target, key) {
                        var has = key in target;
                        var isAllowed = allowedGlobals(key) ||
                            (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
                        if (!has && !isAllowed) {
                            if (key in target.$data) { warnReservedPrefix(target, key); }
                            else { warnNonPresent(target, key); }
                        }
                        return has || !isAllowed
                    }
                };

                var getHandler = {
                    get: function get (target, key) {
                        if (typeof key === 'string' && !(key in target)) {
                            if (key in target.$data) { warnReservedPrefix(target, key); }
                            else { warnNonPresent(target, key); }
                        }
                        return target[key]
                    }
                };

                initProxy = function initProxy (vm) {
                    if (hasProxy) {
                        // determine which proxy handler to use
                        var options = vm.$options;
                        var handlers = options.render && options.render._withStripped
                            ? getHandler
                            : hasHandler;
                        vm._renderProxy = new Proxy(vm, handlers);
                    } else {
                        vm._renderProxy = vm;
                    }
                };
            }

            /*  */

            var seenObjects = new _Set();

            /**
             * Recursively traverse an object to evoke all converted
             * getters, so that every nested property inside the object
             * is collected as a "deep" dependency.
             */
            function traverse (val) {
                _traverse(val, seenObjects);
                seenObjects.clear();
            }

            function _traverse (val, seen) {
                var i, keys;
                var isA = Array.isArray(val);
                if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
                    return
                }
                if (val.__ob__) {
                    var depId = val.__ob__.dep.id;
                    if (seen.has(depId)) {
                        return
                    }
                    seen.add(depId);
                }
                if (isA) {
                    i = val.length;
                    while (i--) { _traverse(val[i], seen); }
                } else {
                    keys = Object.keys(val);
                    i = keys.length;
                    while (i--) { _traverse(val[keys[i]], seen); }
                }
            }

            var mark;
            var measure;

            if (true) {
                var perf = inBrowser && window.performance;
                /* istanbul ignore if */
                if (
                    perf &&
                    perf.mark &&
                    perf.measure &&
                    perf.clearMarks &&
                    perf.clearMeasures
                ) {
                    mark = function (tag) { return perf.mark(tag); };
                    measure = function (name, startTag, endTag) {
                        perf.measure(name, startTag, endTag);
                        perf.clearMarks(startTag);
                        perf.clearMarks(endTag);
                        // perf.clearMeasures(name)
                    };
                }
            }

            /*  */

            var normalizeEvent = cached(function (name) {
                var passive = name.charAt(0) === '&';
                name = passive ? name.slice(1) : name;
                var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
                name = once$$1 ? name.slice(1) : name;
                var capture = name.charAt(0) === '!';
                name = capture ? name.slice(1) : name;
                return {
                    name: name,
                    once: once$$1,
                    capture: capture,
                    passive: passive
                }
            });

            function createFnInvoker (fns, vm) {
                function invoker () {
                    var arguments$1 = arguments;

                    var fns = invoker.fns;
                    if (Array.isArray(fns)) {
                        var cloned = fns.slice();
                        for (var i = 0; i < cloned.length; i++) {
                            invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
                        }
                    } else {
                        // return handler return value for single handlers
                        return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
                    }
                }
                invoker.fns = fns;
                return invoker
            }

            function updateListeners (
                on,
                oldOn,
                add,
                remove$$1,
                createOnceHandler,
                vm
            ) {
                var name, def$$1, cur, old, event;
                for (name in on) {
                    def$$1 = cur = on[name];
                    old = oldOn[name];
                    event = normalizeEvent(name);
                    if (isUndef(cur)) {
                        true && warn(
                            "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
                            vm
                        );
                    } else if (isUndef(old)) {
                        if (isUndef(cur.fns)) {
                            cur = on[name] = createFnInvoker(cur, vm);
                        }
                        if (isTrue(event.once)) {
                            cur = on[name] = createOnceHandler(event.name, cur, event.capture);
                        }
                        add(event.name, cur, event.capture, event.passive, event.params);
                    } else if (cur !== old) {
                        old.fns = cur;
                        on[name] = old;
                    }
                }
                for (name in oldOn) {
                    if (isUndef(on[name])) {
                        event = normalizeEvent(name);
                        remove$$1(event.name, oldOn[name], event.capture);
                    }
                }
            }

            /*  */

            function mergeVNodeHook (def, hookKey, hook) {
                if (def instanceof VNode) {
                    def = def.data.hook || (def.data.hook = {});
                }
                var invoker;
                var oldHook = def[hookKey];

                function wrappedHook () {
                    hook.apply(this, arguments);
                    // important: remove merged hook to ensure it's called only once
                    // and prevent memory leak
                    remove(invoker.fns, wrappedHook);
                }

                if (isUndef(oldHook)) {
                    // no existing hook
                    invoker = createFnInvoker([wrappedHook]);
                } else {
                    /* istanbul ignore if */
                    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
                        // already a merged invoker
                        invoker = oldHook;
                        invoker.fns.push(wrappedHook);
                    } else {
                        // existing plain hook
                        invoker = createFnInvoker([oldHook, wrappedHook]);
                    }
                }

                invoker.merged = true;
                def[hookKey] = invoker;
            }

            /*  */

            function extractPropsFromVNodeData (
                data,
                Ctor,
                tag
            ) {
                // we are only extracting raw values here.
                // validation and default values are handled in the child
                // component itself.
                var propOptions = Ctor.options.props;
                if (isUndef(propOptions)) {
                    return
                }
                var res = {};
                var attrs = data.attrs;
                var props = data.props;
                if (isDef(attrs) || isDef(props)) {
                    for (var key in propOptions) {
                        var altKey = hyphenate(key);
                        if (true) {
                            var keyInLowerCase = key.toLowerCase();
                            if (
                                key !== keyInLowerCase &&
                                attrs && hasOwn(attrs, keyInLowerCase)
                            ) {
                                tip(
                                    "Prop \"" + keyInLowerCase + "\" is passed to component " +
                                    (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
                                    " \"" + key + "\". " +
                                    "Note that HTML attributes are case-insensitive and camelCased " +
                                    "props need to use their kebab-case equivalents when using in-DOM " +
                                    "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
                                );
                            }
                        }
                        checkProp(res, props, key, altKey, true) ||
                        checkProp(res, attrs, key, altKey, false);
                    }
                }
                return res
            }

            function checkProp (
                res,
                hash,
                key,
                altKey,
                preserve
            ) {
                if (isDef(hash)) {
                    if (hasOwn(hash, key)) {
                        res[key] = hash[key];
                        if (!preserve) {
                            delete hash[key];
                        }
                        return true
                    } else if (hasOwn(hash, altKey)) {
                        res[key] = hash[altKey];
                        if (!preserve) {
                            delete hash[altKey];
                        }
                        return true
                    }
                }
                return false
            }

            /*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
            function simpleNormalizeChildren (children) {
                for (var i = 0; i < children.length; i++) {
                    if (Array.isArray(children[i])) {
                        return Array.prototype.concat.apply([], children)
                    }
                }
                return children
            }

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
            function normalizeChildren (children) {
                return isPrimitive(children)
                    ? [createTextVNode(children)]
                    : Array.isArray(children)
                        ? normalizeArrayChildren(children)
                        : undefined
            }

            function isTextNode (node) {
                return isDef(node) && isDef(node.text) && isFalse(node.isComment)
            }

            function normalizeArrayChildren (children, nestedIndex) {
                var res = [];
                var i, c, lastIndex, last;
                for (i = 0; i < children.length; i++) {
                    c = children[i];
                    if (isUndef(c) || typeof c === 'boolean') { continue }
                    lastIndex = res.length - 1;
                    last = res[lastIndex];
                    //  nested
                    if (Array.isArray(c)) {
                        if (c.length > 0) {
                            c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
                            // merge adjacent text nodes
                            if (isTextNode(c[0]) && isTextNode(last)) {
                                res[lastIndex] = createTextVNode(last.text + (c[0]).text);
                                c.shift();
                            }
                            res.push.apply(res, c);
                        }
                    } else if (isPrimitive(c)) {
                        if (isTextNode(last)) {
                            // merge adjacent text nodes
                            // this is necessary for SSR hydration because text nodes are
                            // essentially merged when rendered to HTML strings
                            res[lastIndex] = createTextVNode(last.text + c);
                        } else if (c !== '') {
                            // convert primitive to vnode
                            res.push(createTextVNode(c));
                        }
                    } else {
                        if (isTextNode(c) && isTextNode(last)) {
                            // merge adjacent text nodes
                            res[lastIndex] = createTextVNode(last.text + c.text);
                        } else {
                            // default key for nested array children (likely generated by v-for)
                            if (isTrue(children._isVList) &&
                                isDef(c.tag) &&
                                isUndef(c.key) &&
                                isDef(nestedIndex)) {
                                c.key = "__vlist" + nestedIndex + "_" + i + "__";
                            }
                            res.push(c);
                        }
                    }
                }
                return res
            }

            /*  */

            function initProvide (vm) {
                var provide = vm.$options.provide;
                if (provide) {
                    vm._provided = typeof provide === 'function'
                        ? provide.call(vm)
                        : provide;
                }
            }

            function initInjections (vm) {
                var result = resolveInject(vm.$options.inject, vm);
                if (result) {
                    toggleObserving(false);
                    Object.keys(result).forEach(function (key) {
                        /* istanbul ignore else */
                        if (true) {
                            defineReactive$$1(vm, key, result[key], function () {
                                warn(
                                    "Avoid mutating an injected value directly since the changes will be " +
                                    "overwritten whenever the provided component re-renders. " +
                                    "injection being mutated: \"" + key + "\"",
                                    vm
                                );
                            });
                        } else {}
                    });
                    toggleObserving(true);
                }
            }

            function resolveInject (inject, vm) {
                if (inject) {
                    // inject is :any because flow is not smart enough to figure out cached
                    var result = Object.create(null);
                    var keys = hasSymbol
                        ? Reflect.ownKeys(inject)
                        : Object.keys(inject);

                    for (var i = 0; i < keys.length; i++) {
                        var key = keys[i];
                        // #6574 in case the inject object is observed...
                        if (key === '__ob__') { continue }
                        var provideKey = inject[key].from;
                        var source = vm;
                        while (source) {
                            if (source._provided && hasOwn(source._provided, provideKey)) {
                                result[key] = source._provided[provideKey];
                                break
                            }
                            source = source.$parent;
                        }
                        if (!source) {
                            if ('default' in inject[key]) {
                                var provideDefault = inject[key].default;
                                result[key] = typeof provideDefault === 'function'
                                    ? provideDefault.call(vm)
                                    : provideDefault;
                            } else if (true) {
                                warn(("Injection \"" + key + "\" not found"), vm);
                            }
                        }
                    }
                    return result
                }
            }

            /*  */



            /**
             * Runtime helper for resolving raw children VNodes into a slot object.
             */
            function resolveSlots (
                children,
                context
            ) {
                if (!children || !children.length) {
                    return {}
                }
                var slots = {};
                for (var i = 0, l = children.length; i < l; i++) {
                    var child = children[i];
                    var data = child.data;
                    // remove slot attribute if the node is resolved as a Vue slot node
                    if (data && data.attrs && data.attrs.slot) {
                        delete data.attrs.slot;
                    }
                    // named slots should only be respected if the vnode was rendered in the
                    // same context.
                    if ((child.context === context || child.fnContext === context) &&
                        data && data.slot != null
                    ) {
                        var name = data.slot;
                        var slot = (slots[name] || (slots[name] = []));
                        if (child.tag === 'template') {
                            slot.push.apply(slot, child.children || []);
                        } else {
                            slot.push(child);
                        }
                    } else {
                        (slots.default || (slots.default = [])).push(child);
                    }
                }
                // ignore slots that contains only whitespace
                for (var name$1 in slots) {
                    if (slots[name$1].every(isWhitespace)) {
                        delete slots[name$1];
                    }
                }
                return slots
            }

            function isWhitespace (node) {
                return (node.isComment && !node.asyncFactory) || node.text === ' '
            }

            /*  */

            function normalizeScopedSlots (
                slots,
                normalSlots,
                prevSlots
            ) {
                var res;
                var isStable = slots ? !!slots.$stable : true;
                var hasNormalSlots = Object.keys(normalSlots).length > 0;
                var key = slots && slots.$key;
                if (!slots) {
                    res = {};
                } else if (slots._normalized) {
                    // fast path 1: child component re-render only, parent did not change
                    return slots._normalized
                } else if (
                    isStable &&
                    prevSlots &&
                    prevSlots !== emptyObject &&
                    key === prevSlots.$key &&
                    !hasNormalSlots &&
                    !prevSlots.$hasNormal
                ) {
                    // fast path 2: stable scoped slots w/ no normal slots to proxy,
                    // only need to normalize once
                    return prevSlots
                } else {
                    res = {};
                    for (var key$1 in slots) {
                        if (slots[key$1] && key$1[0] !== '$') {
                            res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
                        }
                    }
                }
                // expose normal slots on scopedSlots
                for (var key$2 in normalSlots) {
                    if (!(key$2 in res)) {
                        res[key$2] = proxyNormalSlot(normalSlots, key$2);
                    }
                }
                // avoriaz seems to mock a non-extensible $scopedSlots object
                // and when that is passed down this would cause an error
                if (slots && Object.isExtensible(slots)) {
                    (slots)._normalized = res;
                }
                def(res, '$stable', isStable);
                def(res, '$key', key);
                def(res, '$hasNormal', hasNormalSlots);
                return res
            }

            function normalizeScopedSlot(normalSlots, key, fn) {
                var normalized = function () {
                    var res = arguments.length ? fn.apply(null, arguments) : fn({});
                    res = res && typeof res === 'object' && !Array.isArray(res)
                        ? [res] // single vnode
                        : normalizeChildren(res);
                    return res && (
                        res.length === 0 ||
                        (res.length === 1 && res[0].isComment) // #9658
                    ) ? undefined
                        : res
                };
                // this is a slot using the new v-slot syntax without scope. although it is
                // compiled as a scoped slot, render fn users would expect it to be present
                // on this.$slots because the usage is semantically a normal slot.
                if (fn.proxy) {
                    Object.defineProperty(normalSlots, key, {
                        get: normalized,
                        enumerable: true,
                        configurable: true
                    });
                }
                return normalized
            }

            function proxyNormalSlot(slots, key) {
                return function () { return slots[key]; }
            }

            /*  */

            /**
             * Runtime helper for rendering v-for lists.
             */
            function renderList (
                val,
                render
            ) {
                var ret, i, l, keys, key;
                if (Array.isArray(val) || typeof val === 'string') {
                    ret = new Array(val.length);
                    for (i = 0, l = val.length; i < l; i++) {
                        ret[i] = render(val[i], i);
                    }
                } else if (typeof val === 'number') {
                    ret = new Array(val);
                    for (i = 0; i < val; i++) {
                        ret[i] = render(i + 1, i);
                    }
                } else if (isObject(val)) {
                    if (hasSymbol && val[Symbol.iterator]) {
                        ret = [];
                        var iterator = val[Symbol.iterator]();
                        var result = iterator.next();
                        while (!result.done) {
                            ret.push(render(result.value, ret.length));
                            result = iterator.next();
                        }
                    } else {
                        keys = Object.keys(val);
                        ret = new Array(keys.length);
                        for (i = 0, l = keys.length; i < l; i++) {
                            key = keys[i];
                            ret[i] = render(val[key], key, i);
                        }
                    }
                }
                if (!isDef(ret)) {
                    ret = [];
                }
                (ret)._isVList = true;
                return ret
            }

            /*  */

            /**
             * Runtime helper for rendering <slot>
             */
            function renderSlot (
                name,
                fallback,
                props,
                bindObject
            ) {
                var scopedSlotFn = this.$scopedSlots[name];
                var nodes;
                if (scopedSlotFn) { // scoped slot
                    props = props || {};
                    if (bindObject) {
                        if ( true && !isObject(bindObject)) {
                            warn(
                                'slot v-bind without argument expects an Object',
                                this
                            );
                        }
                        props = extend(extend({}, bindObject), props);
                    }
                    nodes = scopedSlotFn(props) || fallback;
                } else {
                    nodes = this.$slots[name] || fallback;
                }

                var target = props && props.slot;
                if (target) {
                    return this.$createElement('template', { slot: target }, nodes)
                } else {
                    return nodes
                }
            }

            /*  */

            /**
             * Runtime helper for resolving filters
             */
            function resolveFilter (id) {
                return resolveAsset(this.$options, 'filters', id, true) || identity
            }

            /*  */

            function isKeyNotMatch (expect, actual) {
                if (Array.isArray(expect)) {
                    return expect.indexOf(actual) === -1
                } else {
                    return expect !== actual
                }
            }

            /**
             * Runtime helper for checking keyCodes from config.
             * exposed as Vue.prototype._k
             * passing in eventKeyName as last argument separately for backwards compat
             */
            function checkKeyCodes (
                eventKeyCode,
                key,
                builtInKeyCode,
                eventKeyName,
                builtInKeyName
            ) {
                var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
                if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
                    return isKeyNotMatch(builtInKeyName, eventKeyName)
                } else if (mappedKeyCode) {
                    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
                } else if (eventKeyName) {
                    return hyphenate(eventKeyName) !== key
                }
            }

            /*  */

            /**
             * Runtime helper for merging v-bind="object" into a VNode's data.
             */
            function bindObjectProps (
                data,
                tag,
                value,
                asProp,
                isSync
            ) {
                if (value) {
                    if (!isObject(value)) {
                        true && warn(
                            'v-bind without argument expects an Object or Array value',
                            this
                        );
                    } else {
                        if (Array.isArray(value)) {
                            value = toObject(value);
                        }
                        var hash;
                        var loop = function ( key ) {
                            if (
                                key === 'class' ||
                                key === 'style' ||
                                isReservedAttribute(key)
                            ) {
                                hash = data;
                            } else {
                                var type = data.attrs && data.attrs.type;
                                hash = asProp || config.mustUseProp(tag, type, key)
                                    ? data.domProps || (data.domProps = {})
                                    : data.attrs || (data.attrs = {});
                            }
                            var camelizedKey = camelize(key);
                            var hyphenatedKey = hyphenate(key);
                            if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
                                hash[key] = value[key];

                                if (isSync) {
                                    var on = data.on || (data.on = {});
                                    on[("update:" + key)] = function ($event) {
                                        value[key] = $event;
                                    };
                                }
                            }
                        };

                        for (var key in value) loop( key );
                    }
                }
                return data
            }

            /*  */

            /**
             * Runtime helper for rendering static trees.
             */
            function renderStatic (
                index,
                isInFor
            ) {
                var cached = this._staticTrees || (this._staticTrees = []);
                var tree = cached[index];
                // if has already-rendered static tree and not inside v-for,
                // we can reuse the same tree.
                if (tree && !isInFor) {
                    return tree
                }
                // otherwise, render a fresh tree.
                tree = cached[index] = this.$options.staticRenderFns[index].call(
                    this._renderProxy,
                    null,
                    this // for render fns generated for functional component templates
                );
                markStatic(tree, ("__static__" + index), false);
                return tree
            }

            /**
             * Runtime helper for v-once.
             * Effectively it means marking the node as static with a unique key.
             */
            function markOnce (
                tree,
                index,
                key
            ) {
                markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
                return tree
            }

            function markStatic (
                tree,
                key,
                isOnce
            ) {
                if (Array.isArray(tree)) {
                    for (var i = 0; i < tree.length; i++) {
                        if (tree[i] && typeof tree[i] !== 'string') {
                            markStaticNode(tree[i], (key + "_" + i), isOnce);
                        }
                    }
                } else {
                    markStaticNode(tree, key, isOnce);
                }
            }

            function markStaticNode (node, key, isOnce) {
                node.isStatic = true;
                node.key = key;
                node.isOnce = isOnce;
            }

            /*  */

            function bindObjectListeners (data, value) {
                if (value) {
                    if (!isPlainObject(value)) {
                        true && warn(
                            'v-on without argument expects an Object value',
                            this
                        );
                    } else {
                        var on = data.on = data.on ? extend({}, data.on) : {};
                        for (var key in value) {
                            var existing = on[key];
                            var ours = value[key];
                            on[key] = existing ? [].concat(existing, ours) : ours;
                        }
                    }
                }
                return data
            }

            /*  */

            function resolveScopedSlots (
                fns, // see flow/vnode
                res,
                // the following are added in 2.6
                hasDynamicKeys,
                contentHashKey
            ) {
                res = res || { $stable: !hasDynamicKeys };
                for (var i = 0; i < fns.length; i++) {
                    var slot = fns[i];
                    if (Array.isArray(slot)) {
                        resolveScopedSlots(slot, res, hasDynamicKeys);
                    } else if (slot) {
                        // marker for reverse proxying v-slot without scope on this.$slots
                        if (slot.proxy) {
                            slot.fn.proxy = true;
                        }
                        res[slot.key] = slot.fn;
                    }
                }
                if (contentHashKey) {
                    (res).$key = contentHashKey;
                }
                return res
            }

            /*  */

            function bindDynamicKeys (baseObj, values) {
                for (var i = 0; i < values.length; i += 2) {
                    var key = values[i];
                    if (typeof key === 'string' && key) {
                        baseObj[values[i]] = values[i + 1];
                    } else if ( true && key !== '' && key !== null) {
                        // null is a speical value for explicitly removing a binding
                        warn(
                            ("Invalid value for dynamic directive argument (expected string or null): " + key),
                            this
                        );
                    }
                }
                return baseObj
            }

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
            function prependModifier (value, symbol) {
                return typeof value === 'string' ? symbol + value : value
            }

            /*  */

            function installRenderHelpers (target) {
                target._o = markOnce;
                target._n = toNumber;
                target._s = toString;
                target._l = renderList;
                target._t = renderSlot;
                target._q = looseEqual;
                target._i = looseIndexOf;
                target._m = renderStatic;
                target._f = resolveFilter;
                target._k = checkKeyCodes;
                target._b = bindObjectProps;
                target._v = createTextVNode;
                target._e = createEmptyVNode;
                target._u = resolveScopedSlots;
                target._g = bindObjectListeners;
                target._d = bindDynamicKeys;
                target._p = prependModifier;
            }

            /*  */

            function FunctionalRenderContext (
                data,
                props,
                children,
                parent,
                Ctor
            ) {
                var this$1 = this;

                var options = Ctor.options;
                // ensure the createElement function in functional components
                // gets a unique context - this is necessary for correct named slot check
                var contextVm;
                if (hasOwn(parent, '_uid')) {
                    contextVm = Object.create(parent);
                    // $flow-disable-line
                    contextVm._original = parent;
                } else {
                    // the context vm passed in is a functional context as well.
                    // in this case we want to make sure we are able to get a hold to the
                    // real context instance.
                    contextVm = parent;
                    // $flow-disable-line
                    parent = parent._original;
                }
                var isCompiled = isTrue(options._compiled);
                var needNormalization = !isCompiled;

                this.data = data;
                this.props = props;
                this.children = children;
                this.parent = parent;
                this.listeners = data.on || emptyObject;
                this.injections = resolveInject(options.inject, parent);
                this.slots = function () {
                    if (!this$1.$slots) {
                        normalizeScopedSlots(
                            data.scopedSlots,
                            this$1.$slots = resolveSlots(children, parent)
                        );
                    }
                    return this$1.$slots
                };

                Object.defineProperty(this, 'scopedSlots', ({
                    enumerable: true,
                    get: function get () {
                        return normalizeScopedSlots(data.scopedSlots, this.slots())
                    }
                }));

                // support for compiled functional template
                if (isCompiled) {
                    // exposing $options for renderStatic()
                    this.$options = options;
                    // pre-resolve slots for renderSlot()
                    this.$slots = this.slots();
                    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
                }

                if (options._scopeId) {
                    this._c = function (a, b, c, d) {
                        var vnode = createElement(contextVm, a, b, c, d, needNormalization);
                        if (vnode && !Array.isArray(vnode)) {
                            vnode.fnScopeId = options._scopeId;
                            vnode.fnContext = parent;
                        }
                        return vnode
                    };
                } else {
                    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
                }
            }

            installRenderHelpers(FunctionalRenderContext.prototype);

            function createFunctionalComponent (
                Ctor,
                propsData,
                data,
                contextVm,
                children
            ) {
                var options = Ctor.options;
                var props = {};
                var propOptions = options.props;
                if (isDef(propOptions)) {
                    for (var key in propOptions) {
                        props[key] = validateProp(key, propOptions, propsData || emptyObject);
                    }
                } else {
                    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
                    if (isDef(data.props)) { mergeProps(props, data.props); }
                }

                var renderContext = new FunctionalRenderContext(
                    data,
                    props,
                    children,
                    contextVm,
                    Ctor
                );

                var vnode = options.render.call(null, renderContext._c, renderContext);

                if (vnode instanceof VNode) {
                    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
                } else if (Array.isArray(vnode)) {
                    var vnodes = normalizeChildren(vnode) || [];
                    var res = new Array(vnodes.length);
                    for (var i = 0; i < vnodes.length; i++) {
                        res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
                    }
                    return res
                }
            }

            function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
                // #7817 clone node before setting fnContext, otherwise if the node is reused
                // (e.g. it was from a cached normal slot) the fnContext causes named slots
                // that should not be matched to match.
                var clone = cloneVNode(vnode);
                clone.fnContext = contextVm;
                clone.fnOptions = options;
                if (true) {
                    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
                }
                if (data.slot) {
                    (clone.data || (clone.data = {})).slot = data.slot;
                }
                return clone
            }

            function mergeProps (to, from) {
                for (var key in from) {
                    to[camelize(key)] = from[key];
                }
            }

            /*  */

            /*  */

            /*  */

            /*  */

// inline hooks to be invoked on component VNodes during patch
            var componentVNodeHooks = {
                init: function init (vnode, hydrating) {
                    if (
                        vnode.componentInstance &&
                        !vnode.componentInstance._isDestroyed &&
                        vnode.data.keepAlive
                    ) {
                        // kept-alive components, treat as a patch
                        var mountedNode = vnode; // work around flow
                        componentVNodeHooks.prepatch(mountedNode, mountedNode);
                    } else {
                        var child = vnode.componentInstance = createComponentInstanceForVnode(
                            vnode,
                            activeInstance
                        );
                        child.$mount(hydrating ? vnode.elm : undefined, hydrating);
                    }
                },

                prepatch: function prepatch (oldVnode, vnode) {
                    var options = vnode.componentOptions;
                    var child = vnode.componentInstance = oldVnode.componentInstance;
                    updateChildComponent(
                        child,
                        options.propsData, // updated props
                        options.listeners, // updated listeners
                        vnode, // new parent vnode
                        options.children // new children
                    );
                },

                insert: function insert (vnode) {
                    var context = vnode.context;
                    var componentInstance = vnode.componentInstance;
                    if (!componentInstance._isMounted) {
                        componentInstance._isMounted = true;
                        callHook(componentInstance, 'mounted');
                    }
                    if (vnode.data.keepAlive) {
                        if (context._isMounted) {
                            // vue-router#1212
                            // During updates, a kept-alive component's child components may
                            // change, so directly walking the tree here may call activated hooks
                            // on incorrect children. Instead we push them into a queue which will
                            // be processed after the whole patch process ended.
                            queueActivatedComponent(componentInstance);
                        } else {
                            activateChildComponent(componentInstance, true /* direct */);
                        }
                    }
                },

                destroy: function destroy (vnode) {
                    var componentInstance = vnode.componentInstance;
                    if (!componentInstance._isDestroyed) {
                        if (!vnode.data.keepAlive) {
                            componentInstance.$destroy();
                        } else {
                            deactivateChildComponent(componentInstance, true /* direct */);
                        }
                    }
                }
            };

            var hooksToMerge = Object.keys(componentVNodeHooks);

            function createComponent (
                Ctor,
                data,
                context,
                children,
                tag
            ) {
                if (isUndef(Ctor)) {
                    return
                }

                var baseCtor = context.$options._base;

                // plain options object: turn it into a constructor
                if (isObject(Ctor)) {
                    Ctor = baseCtor.extend(Ctor);
                }

                // if at this stage it's not a constructor or an async component factory,
                // reject.
                if (typeof Ctor !== 'function') {
                    if (true) {
                        warn(("Invalid Component definition: " + (String(Ctor))), context);
                    }
                    return
                }

                // async component
                var asyncFactory;
                if (isUndef(Ctor.cid)) {
                    asyncFactory = Ctor;
                    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
                    if (Ctor === undefined) {
                        // return a placeholder node for async component, which is rendered
                        // as a comment node but preserves all the raw information for the node.
                        // the information will be used for async server-rendering and hydration.
                        return createAsyncPlaceholder(
                            asyncFactory,
                            data,
                            context,
                            children,
                            tag
                        )
                    }
                }

                data = data || {};

                // resolve constructor options in case global mixins are applied after
                // component constructor creation
                resolveConstructorOptions(Ctor);

                // transform component v-model data into props & events
                if (isDef(data.model)) {
                    transformModel(Ctor.options, data);
                }

                // extract props
                var propsData = extractPropsFromVNodeData(data, Ctor, tag);

                // functional component
                if (isTrue(Ctor.options.functional)) {
                    return createFunctionalComponent(Ctor, propsData, data, context, children)
                }

                // extract listeners, since these needs to be treated as
                // child component listeners instead of DOM listeners
                var listeners = data.on;
                // replace with listeners with .native modifier
                // so it gets processed during parent component patch.
                data.on = data.nativeOn;

                if (isTrue(Ctor.options.abstract)) {
                    // abstract components do not keep anything
                    // other than props & listeners & slot

                    // work around flow
                    var slot = data.slot;
                    data = {};
                    if (slot) {
                        data.slot = slot;
                    }
                }

                // install component management hooks onto the placeholder node
                installComponentHooks(data);

                // return a placeholder vnode
                var name = Ctor.options.name || tag;
                var vnode = new VNode(
                    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
                    data, undefined, undefined, undefined, context,
                    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
                    asyncFactory
                );

                return vnode
            }

            function createComponentInstanceForVnode (
                vnode, // we know it's MountedComponentVNode but flow doesn't
                parent // activeInstance in lifecycle state
            ) {
                var options = {
                    _isComponent: true,
                    _parentVnode: vnode,
                    parent: parent
                };
                // check inline-template render functions
                var inlineTemplate = vnode.data.inlineTemplate;
                if (isDef(inlineTemplate)) {
                    options.render = inlineTemplate.render;
                    options.staticRenderFns = inlineTemplate.staticRenderFns;
                }
                return new vnode.componentOptions.Ctor(options)
            }

            function installComponentHooks (data) {
                var hooks = data.hook || (data.hook = {});
                for (var i = 0; i < hooksToMerge.length; i++) {
                    var key = hooksToMerge[i];
                    var existing = hooks[key];
                    var toMerge = componentVNodeHooks[key];
                    if (existing !== toMerge && !(existing && existing._merged)) {
                        hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
                    }
                }
            }

            function mergeHook$1 (f1, f2) {
                var merged = function (a, b) {
                    // flow complains about extra args which is why we use any
                    f1(a, b);
                    f2(a, b);
                };
                merged._merged = true;
                return merged
            }

// transform component v-model info (value and callback) into
// prop and event handler respectively.
            function transformModel (options, data) {
                var prop = (options.model && options.model.prop) || 'value';
                var event = (options.model && options.model.event) || 'input'
                ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
                var on = data.on || (data.on = {});
                var existing = on[event];
                var callback = data.model.callback;
                if (isDef(existing)) {
                    if (
                        Array.isArray(existing)
                            ? existing.indexOf(callback) === -1
                            : existing !== callback
                    ) {
                        on[event] = [callback].concat(existing);
                    }
                } else {
                    on[event] = callback;
                }
            }

            /*  */

            var SIMPLE_NORMALIZE = 1;
            var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
            function createElement (
                context,
                tag,
                data,
                children,
                normalizationType,
                alwaysNormalize
            ) {
                if (Array.isArray(data) || isPrimitive(data)) {
                    normalizationType = children;
                    children = data;
                    data = undefined;
                }
                if (isTrue(alwaysNormalize)) {
                    normalizationType = ALWAYS_NORMALIZE;
                }
                return _createElement(context, tag, data, children, normalizationType)
            }

            function _createElement (
                context,
                tag,
                data,
                children,
                normalizationType
            ) {
                if (isDef(data) && isDef((data).__ob__)) {
                    true && warn(
                        "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
                        'Always create fresh vnode data objects in each render!',
                        context
                    );
                    return createEmptyVNode()
                }
                // object syntax in v-bind
                if (isDef(data) && isDef(data.is)) {
                    tag = data.is;
                }
                if (!tag) {
                    // in case of component :is set to falsy value
                    return createEmptyVNode()
                }
                // warn against non-primitive key
                if ( true &&
                    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
                ) {
                    {
                        warn(
                            'Avoid using non-primitive value as key, ' +
                            'use string/number value instead.',
                            context
                        );
                    }
                }
                // support single function children as default scoped slot
                if (Array.isArray(children) &&
                    typeof children[0] === 'function'
                ) {
                    data = data || {};
                    data.scopedSlots = { default: children[0] };
                    children.length = 0;
                }
                if (normalizationType === ALWAYS_NORMALIZE) {
                    children = normalizeChildren(children);
                } else if (normalizationType === SIMPLE_NORMALIZE) {
                    children = simpleNormalizeChildren(children);
                }
                var vnode, ns;
                if (typeof tag === 'string') {
                    var Ctor;
                    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
                    if (config.isReservedTag(tag)) {
                        // platform built-in elements
                        vnode = new VNode(
                            config.parsePlatformTagName(tag), data, children,
                            undefined, undefined, context
                        );
                    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
                        // component
                        vnode = createComponent(Ctor, data, context, children, tag);
                    } else {
                        // unknown or unlisted namespaced elements
                        // check at runtime because it may get assigned a namespace when its
                        // parent normalizes children
                        vnode = new VNode(
                            tag, data, children,
                            undefined, undefined, context
                        );
                    }
                } else {
                    // direct component options / constructor
                    vnode = createComponent(tag, data, context, children);
                }
                if (Array.isArray(vnode)) {
                    return vnode
                } else if (isDef(vnode)) {
                    if (isDef(ns)) { applyNS(vnode, ns); }
                    if (isDef(data)) { registerDeepBindings(data); }
                    return vnode
                } else {
                    return createEmptyVNode()
                }
            }

            function applyNS (vnode, ns, force) {
                vnode.ns = ns;
                if (vnode.tag === 'foreignObject') {
                    // use default namespace inside foreignObject
                    ns = undefined;
                    force = true;
                }
                if (isDef(vnode.children)) {
                    for (var i = 0, l = vnode.children.length; i < l; i++) {
                        var child = vnode.children[i];
                        if (isDef(child.tag) && (
                            isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
                            applyNS(child, ns, force);
                        }
                    }
                }
            }

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
            function registerDeepBindings (data) {
                if (isObject(data.style)) {
                    traverse(data.style);
                }
                if (isObject(data.class)) {
                    traverse(data.class);
                }
            }

            /*  */

            function initRender (vm) {
                vm._vnode = null; // the root of the child tree
                vm._staticTrees = null; // v-once cached trees
                var options = vm.$options;
                var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
                var renderContext = parentVnode && parentVnode.context;
                vm.$slots = resolveSlots(options._renderChildren, renderContext);
                vm.$scopedSlots = emptyObject;
                // bind the createElement fn to this instance
                // so that we get proper render context inside it.
                // args order: tag, data, children, normalizationType, alwaysNormalize
                // internal version is used by render functions compiled from templates
                vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
                // normalization is always applied for the public version, used in
                // user-written render functions.
                vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

                // $attrs & $listeners are exposed for easier HOC creation.
                // they need to be reactive so that HOCs using them are always updated
                var parentData = parentVnode && parentVnode.data;

                /* istanbul ignore else */
                if (true) {
                    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
                        !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
                    }, true);
                    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
                        !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
                    }, true);
                } else {}
            }

            var currentRenderingInstance = null;

            function renderMixin (Vue) {
                // install runtime convenience helpers
                installRenderHelpers(Vue.prototype);

                Vue.prototype.$nextTick = function (fn) {
                    return nextTick(fn, this)
                };

                Vue.prototype._render = function () {
                    var vm = this;
                    var ref = vm.$options;
                    var render = ref.render;
                    var _parentVnode = ref._parentVnode;

                    if (_parentVnode) {
                        vm.$scopedSlots = normalizeScopedSlots(
                            _parentVnode.data.scopedSlots,
                            vm.$slots,
                            vm.$scopedSlots
                        );
                    }

                    // set parent vnode. this allows render functions to have access
                    // to the data on the placeholder node.
                    vm.$vnode = _parentVnode;
                    // render self
                    var vnode;
                    try {
                        // There's no need to maintain a stack becaues all render fns are called
                        // separately from one another. Nested component's render fns are called
                        // when parent component is patched.
                        currentRenderingInstance = vm;
                        vnode = render.call(vm._renderProxy, vm.$createElement);
                    } catch (e) {
                        handleError(e, vm, "render");
                        // return error render result,
                        // or previous vnode to prevent render error causing blank component
                        /* istanbul ignore else */
                        if ( true && vm.$options.renderError) {
                            try {
                                vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
                            } catch (e) {
                                handleError(e, vm, "renderError");
                                vnode = vm._vnode;
                            }
                        } else {
                            vnode = vm._vnode;
                        }
                    } finally {
                        currentRenderingInstance = null;
                    }
                    // if the returned array contains only a single node, allow it
                    if (Array.isArray(vnode) && vnode.length === 1) {
                        vnode = vnode[0];
                    }
                    // return empty vnode in case the render function errored out
                    if (!(vnode instanceof VNode)) {
                        if ( true && Array.isArray(vnode)) {
                            warn(
                                'Multiple root nodes returned from render function. Render function ' +
                                'should return a single root node.',
                                vm
                            );
                        }
                        vnode = createEmptyVNode();
                    }
                    // set parent
                    vnode.parent = _parentVnode;
                    return vnode
                };
            }

            /*  */

            function ensureCtor (comp, base) {
                if (
                    comp.__esModule ||
                    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
                ) {
                    comp = comp.default;
                }
                return isObject(comp)
                    ? base.extend(comp)
                    : comp
            }

            function createAsyncPlaceholder (
                factory,
                data,
                context,
                children,
                tag
            ) {
                var node = createEmptyVNode();
                node.asyncFactory = factory;
                node.asyncMeta = { data: data, context: context, children: children, tag: tag };
                return node
            }

            function resolveAsyncComponent (
                factory,
                baseCtor
            ) {
                if (isTrue(factory.error) && isDef(factory.errorComp)) {
                    return factory.errorComp
                }

                if (isDef(factory.resolved)) {
                    return factory.resolved
                }

                var owner = currentRenderingInstance;
                if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
                    // already pending
                    factory.owners.push(owner);
                }

                if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
                    return factory.loadingComp
                }

                if (owner && !isDef(factory.owners)) {
                    var owners = factory.owners = [owner];
                    var sync = true

                    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

                    var forceRender = function (renderCompleted) {
                        for (var i = 0, l = owners.length; i < l; i++) {
                            (owners[i]).$forceUpdate();
                        }

                        if (renderCompleted) {
                            owners.length = 0;
                        }
                    };

                    var resolve = once(function (res) {
                        // cache resolved
                        factory.resolved = ensureCtor(res, baseCtor);
                        // invoke callbacks only if this is not a synchronous resolve
                        // (async resolves are shimmed as synchronous during SSR)
                        if (!sync) {
                            forceRender(true);
                        } else {
                            owners.length = 0;
                        }
                    });

                    var reject = once(function (reason) {
                        true && warn(
                            "Failed to resolve async component: " + (String(factory)) +
                            (reason ? ("\nReason: " + reason) : '')
                        );
                        if (isDef(factory.errorComp)) {
                            factory.error = true;
                            forceRender(true);
                        }
                    });

                    var res = factory(resolve, reject);

                    if (isObject(res)) {
                        if (isPromise(res)) {
                            // () => Promise
                            if (isUndef(factory.resolved)) {
                                res.then(resolve, reject);
                            }
                        } else if (isPromise(res.component)) {
                            res.component.then(resolve, reject);

                            if (isDef(res.error)) {
                                factory.errorComp = ensureCtor(res.error, baseCtor);
                            }

                            if (isDef(res.loading)) {
                                factory.loadingComp = ensureCtor(res.loading, baseCtor);
                                if (res.delay === 0) {
                                    factory.loading = true;
                                } else {
                                    setTimeout(function () {
                                        if (isUndef(factory.resolved) && isUndef(factory.error)) {
                                            factory.loading = true;
                                            forceRender(false);
                                        }
                                    }, res.delay || 200);
                                }
                            }

                            if (isDef(res.timeout)) {
                                setTimeout(function () {
                                    if (isUndef(factory.resolved)) {
                                        reject(
                                            true
                                                ? ("timeout (" + (res.timeout) + "ms)")
                                                : undefined
                                        );
                                    }
                                }, res.timeout);
                            }
                        }
                    }

                    sync = false;
                    // return in case resolved synchronously
                    return factory.loading
                        ? factory.loadingComp
                        : factory.resolved
                }
            }

            /*  */

            function isAsyncPlaceholder (node) {
                return node.isComment && node.asyncFactory
            }

            /*  */

            function getFirstComponentChild (children) {
                if (Array.isArray(children)) {
                    for (var i = 0; i < children.length; i++) {
                        var c = children[i];
                        if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
                            return c
                        }
                    }
                }
            }

            /*  */

            /*  */

            function initEvents (vm) {
                vm._events = Object.create(null);
                vm._hasHookEvent = false;
                // init parent attached events
                var listeners = vm.$options._parentListeners;
                if (listeners) {
                    updateComponentListeners(vm, listeners);
                }
            }

            var target;

            function add (event, fn) {
                target.$on(event, fn);
            }

            function remove$1 (event, fn) {
                target.$off(event, fn);
            }

            function createOnceHandler (event, fn) {
                var _target = target;
                return function onceHandler () {
                    var res = fn.apply(null, arguments);
                    if (res !== null) {
                        _target.$off(event, onceHandler);
                    }
                }
            }

            function updateComponentListeners (
                vm,
                listeners,
                oldListeners
            ) {
                target = vm;
                updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
                target = undefined;
            }

            function eventsMixin (Vue) {
                var hookRE = /^hook:/;
                Vue.prototype.$on = function (event, fn) {
                    var vm = this;
                    if (Array.isArray(event)) {
                        for (var i = 0, l = event.length; i < l; i++) {
                            vm.$on(event[i], fn);
                        }
                    } else {
                        (vm._events[event] || (vm._events[event] = [])).push(fn);
                        // optimize hook:event cost by using a boolean flag marked at registration
                        // instead of a hash lookup
                        if (hookRE.test(event)) {
                            vm._hasHookEvent = true;
                        }
                    }
                    return vm
                };

                Vue.prototype.$once = function (event, fn) {
                    var vm = this;
                    function on () {
                        vm.$off(event, on);
                        fn.apply(vm, arguments);
                    }
                    on.fn = fn;
                    vm.$on(event, on);
                    return vm
                };

                Vue.prototype.$off = function (event, fn) {
                    var vm = this;
                    // all
                    if (!arguments.length) {
                        vm._events = Object.create(null);
                        return vm
                    }
                    // array of events
                    if (Array.isArray(event)) {
                        for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
                            vm.$off(event[i$1], fn);
                        }
                        return vm
                    }
                    // specific event
                    var cbs = vm._events[event];
                    if (!cbs) {
                        return vm
                    }
                    if (!fn) {
                        vm._events[event] = null;
                        return vm
                    }
                    // specific handler
                    var cb;
                    var i = cbs.length;
                    while (i--) {
                        cb = cbs[i];
                        if (cb === fn || cb.fn === fn) {
                            cbs.splice(i, 1);
                            break
                        }
                    }
                    return vm
                };

                Vue.prototype.$emit = function (event) {
                    var vm = this;
                    if (true) {
                        var lowerCaseEvent = event.toLowerCase();
                        if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
                            tip(
                                "Event \"" + lowerCaseEvent + "\" is emitted in component " +
                                (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
                                "Note that HTML attributes are case-insensitive and you cannot use " +
                                "v-on to listen to camelCase events when using in-DOM templates. " +
                                "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
                            );
                        }
                    }
                    var cbs = vm._events[event];
                    if (cbs) {
                        cbs = cbs.length > 1 ? toArray(cbs) : cbs;
                        var args = toArray(arguments, 1);
                        var info = "event handler for \"" + event + "\"";
                        for (var i = 0, l = cbs.length; i < l; i++) {
                            invokeWithErrorHandling(cbs[i], vm, args, vm, info);
                        }
                    }
                    return vm
                };
            }

            /*  */

            var activeInstance = null;
            var isUpdatingChildComponent = false;

            function setActiveInstance(vm) {
                var prevActiveInstance = activeInstance;
                activeInstance = vm;
                return function () {
                    activeInstance = prevActiveInstance;
                }
            }

            function initLifecycle (vm) {
                var options = vm.$options;

                // locate first non-abstract parent
                var parent = options.parent;
                if (parent && !options.abstract) {
                    while (parent.$options.abstract && parent.$parent) {
                        parent = parent.$parent;
                    }
                    parent.$children.push(vm);
                }

                vm.$parent = parent;
                vm.$root = parent ? parent.$root : vm;

                vm.$children = [];
                vm.$refs = {};

                vm._watcher = null;
                vm._inactive = null;
                vm._directInactive = false;
                vm._isMounted = false;
                vm._isDestroyed = false;
                vm._isBeingDestroyed = false;
            }

            function lifecycleMixin (Vue) {
                Vue.prototype._update = function (vnode, hydrating) {
                    var vm = this;
                    var prevEl = vm.$el;
                    var prevVnode = vm._vnode;
                    var restoreActiveInstance = setActiveInstance(vm);
                    vm._vnode = vnode;
                    // Vue.prototype.__patch__ is injected in entry points
                    // based on the rendering backend used.
                    if (!prevVnode) {
                        // initial render
                        vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
                    } else {
                        // updates
                        vm.$el = vm.__patch__(prevVnode, vnode);
                    }
                    restoreActiveInstance();
                    // update __vue__ reference
                    if (prevEl) {
                        prevEl.__vue__ = null;
                    }
                    if (vm.$el) {
                        vm.$el.__vue__ = vm;
                    }
                    // if parent is an HOC, update its $el as well
                    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
                        vm.$parent.$el = vm.$el;
                    }
                    // updated hook is called by the scheduler to ensure that children are
                    // updated in a parent's updated hook.
                };

                Vue.prototype.$forceUpdate = function () {
                    var vm = this;
                    if (vm._watcher) {
                        vm._watcher.update();
                    }
                };

                Vue.prototype.$destroy = function () {
                    var vm = this;
                    if (vm._isBeingDestroyed) {
                        return
                    }
                    callHook(vm, 'beforeDestroy');
                    vm._isBeingDestroyed = true;
                    // remove self from parent
                    var parent = vm.$parent;
                    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
                        remove(parent.$children, vm);
                    }
                    // teardown watchers
                    if (vm._watcher) {
                        vm._watcher.teardown();
                    }
                    var i = vm._watchers.length;
                    while (i--) {
                        vm._watchers[i].teardown();
                    }
                    // remove reference from data ob
                    // frozen object may not have observer.
                    if (vm._data.__ob__) {
                        vm._data.__ob__.vmCount--;
                    }
                    // call the last hook...
                    vm._isDestroyed = true;
                    // invoke destroy hooks on current rendered tree
                    vm.__patch__(vm._vnode, null);
                    // fire destroyed hook
                    callHook(vm, 'destroyed');
                    // turn off all instance listeners.
                    vm.$off();
                    // remove __vue__ reference
                    if (vm.$el) {
                        vm.$el.__vue__ = null;
                    }
                    // release circular reference (#6759)
                    if (vm.$vnode) {
                        vm.$vnode.parent = null;
                    }
                };
            }

            function mountComponent (
                vm,
                el,
                hydrating
            ) {
                vm.$el = el;
                if (!vm.$options.render) {
                    vm.$options.render = createEmptyVNode;
                    if (true) {
                        /* istanbul ignore if */
                        if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
                            vm.$options.el || el) {
                            warn(
                                'You are using the runtime-only build of Vue where the template ' +
                                'compiler is not available. Either pre-compile the templates into ' +
                                'render functions, or use the compiler-included build.',
                                vm
                            );
                        } else {
                            warn(
                                'Failed to mount component: template or render function not defined.',
                                vm
                            );
                        }
                    }
                }
                callHook(vm, 'beforeMount');

                var updateComponent;
                /* istanbul ignore if */
                if ( true && config.performance && mark) {
                    updateComponent = function () {
                        var name = vm._name;
                        var id = vm._uid;
                        var startTag = "vue-perf-start:" + id;
                        var endTag = "vue-perf-end:" + id;

                        mark(startTag);
                        var vnode = vm._render();
                        mark(endTag);
                        measure(("vue " + name + " render"), startTag, endTag);

                        mark(startTag);
                        vm._update(vnode, hydrating);
                        mark(endTag);
                        measure(("vue " + name + " patch"), startTag, endTag);
                    };
                } else {
                    updateComponent = function () {
                        vm._update(vm._render(), hydrating);
                    };
                }

                // we set this to vm._watcher inside the watcher's constructor
                // since the watcher's initial patch may call $forceUpdate (e.g. inside child
                // component's mounted hook), which relies on vm._watcher being already defined
                new Watcher(vm, updateComponent, noop, {
                    before: function before () {
                        if (vm._isMounted && !vm._isDestroyed) {
                            callHook(vm, 'beforeUpdate');
                        }
                    }
                }, true /* isRenderWatcher */);
                hydrating = false;

                // manually mounted instance, call mounted on self
                // mounted is called for render-created child components in its inserted hook
                if (vm.$vnode == null) {
                    vm._isMounted = true;
                    callHook(vm, 'mounted');
                }
                return vm
            }

            function updateChildComponent (
                vm,
                propsData,
                listeners,
                parentVnode,
                renderChildren
            ) {
                if (true) {
                    isUpdatingChildComponent = true;
                }

                // determine whether component has slot children
                // we need to do this before overwriting $options._renderChildren.

                // check if there are dynamic scopedSlots (hand-written or compiled but with
                // dynamic slot names). Static scoped slots compiled from template has the
                // "$stable" marker.
                var newScopedSlots = parentVnode.data.scopedSlots;
                var oldScopedSlots = vm.$scopedSlots;
                var hasDynamicScopedSlot = !!(
                    (newScopedSlots && !newScopedSlots.$stable) ||
                    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
                    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
                );

                // Any static slot children from the parent may have changed during parent's
                // update. Dynamic scoped slots may also have changed. In such cases, a forced
                // update is necessary to ensure correctness.
                var needsForceUpdate = !!(
                    renderChildren ||               // has new static slots
                    vm.$options._renderChildren ||  // has old static slots
                    hasDynamicScopedSlot
                );

                vm.$options._parentVnode = parentVnode;
                vm.$vnode = parentVnode; // update vm's placeholder node without re-render

                if (vm._vnode) { // update child tree's parent
                    vm._vnode.parent = parentVnode;
                }
                vm.$options._renderChildren = renderChildren;

                // update $attrs and $listeners hash
                // these are also reactive so they may trigger child update if the child
                // used them during render
                vm.$attrs = parentVnode.data.attrs || emptyObject;
                vm.$listeners = listeners || emptyObject;

                // update props
                if (propsData && vm.$options.props) {
                    toggleObserving(false);
                    var props = vm._props;
                    var propKeys = vm.$options._propKeys || [];
                    for (var i = 0; i < propKeys.length; i++) {
                        var key = propKeys[i];
                        var propOptions = vm.$options.props; // wtf flow?
                        props[key] = validateProp(key, propOptions, propsData, vm);
                    }
                    toggleObserving(true);
                    // keep a copy of raw propsData
                    vm.$options.propsData = propsData;
                }

                // update listeners
                listeners = listeners || emptyObject;
                var oldListeners = vm.$options._parentListeners;
                vm.$options._parentListeners = listeners;
                updateComponentListeners(vm, listeners, oldListeners);

                // resolve slots + force update if has children
                if (needsForceUpdate) {
                    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
                    vm.$forceUpdate();
                }

                if (true) {
                    isUpdatingChildComponent = false;
                }
            }

            function isInInactiveTree (vm) {
                while (vm && (vm = vm.$parent)) {
                    if (vm._inactive) { return true }
                }
                return false
            }

            function activateChildComponent (vm, direct) {
                if (direct) {
                    vm._directInactive = false;
                    if (isInInactiveTree(vm)) {
                        return
                    }
                } else if (vm._directInactive) {
                    return
                }
                if (vm._inactive || vm._inactive === null) {
                    vm._inactive = false;
                    for (var i = 0; i < vm.$children.length; i++) {
                        activateChildComponent(vm.$children[i]);
                    }
                    callHook(vm, 'activated');
                }
            }

            function deactivateChildComponent (vm, direct) {
                if (direct) {
                    vm._directInactive = true;
                    if (isInInactiveTree(vm)) {
                        return
                    }
                }
                if (!vm._inactive) {
                    vm._inactive = true;
                    for (var i = 0; i < vm.$children.length; i++) {
                        deactivateChildComponent(vm.$children[i]);
                    }
                    callHook(vm, 'deactivated');
                }
            }

            function callHook (vm, hook) {
                // #7573 disable dep collection when invoking lifecycle hooks
                pushTarget();
                var handlers = vm.$options[hook];
                var info = hook + " hook";
                if (handlers) {
                    for (var i = 0, j = handlers.length; i < j; i++) {
                        invokeWithErrorHandling(handlers[i], vm, null, vm, info);
                    }
                }
                if (vm._hasHookEvent) {
                    vm.$emit('hook:' + hook);
                }
                popTarget();
            }

            /*  */

            var MAX_UPDATE_COUNT = 100;

            var queue = [];
            var activatedChildren = [];
            var has = {};
            var circular = {};
            var waiting = false;
            var flushing = false;
            var index = 0;

            /**
             * Reset the scheduler's state.
             */
            function resetSchedulerState () {
                index = queue.length = activatedChildren.length = 0;
                has = {};
                if (true) {
                    circular = {};
                }
                waiting = flushing = false;
            }

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
            var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
            var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
            if (
                inBrowser &&
                window.performance &&
                typeof performance.now === 'function' &&
                document.createEvent('Event').timeStamp <= performance.now()
            ) {
                // if the event timestamp is bigger than the hi-res timestamp
                // (which is evaluated AFTER) it means the event is using a lo-res timestamp,
                // and we need to use the lo-res version for event listeners as well.
                getNow = function () { return performance.now(); };
            }

            /**
             * Flush both queues and run the watchers.
             */
            function flushSchedulerQueue () {
                currentFlushTimestamp = getNow();
                flushing = true;
                var watcher, id;

                // Sort queue before flush.
                // This ensures that:
                // 1. Components are updated from parent to child. (because parent is always
                //    created before the child)
                // 2. A component's user watchers are run before its render watcher (because
                //    user watchers are created before the render watcher)
                // 3. If a component is destroyed during a parent component's watcher run,
                //    its watchers can be skipped.
                queue.sort(function (a, b) { return a.id - b.id; });

                // do not cache length because more watchers might be pushed
                // as we run existing watchers
                for (index = 0; index < queue.length; index++) {
                    watcher = queue[index];
                    if (watcher.before) {
                        watcher.before();
                    }
                    id = watcher.id;
                    has[id] = null;
                    watcher.run();
                    // in dev build, check and stop circular updates.
                    if ( true && has[id] != null) {
                        circular[id] = (circular[id] || 0) + 1;
                        if (circular[id] > MAX_UPDATE_COUNT) {
                            warn(
                                'You may have an infinite update loop ' + (
                                    watcher.user
                                        ? ("in watcher with expression \"" + (watcher.expression) + "\"")
                                        : "in a component render function."
                                ),
                                watcher.vm
                            );
                            break
                        }
                    }
                }

                // keep copies of post queues before resetting state
                var activatedQueue = activatedChildren.slice();
                var updatedQueue = queue.slice();

                resetSchedulerState();

                // call component updated and activated hooks
                callActivatedHooks(activatedQueue);
                callUpdatedHooks(updatedQueue);

                // devtool hook
                /* istanbul ignore if */
                if (devtools && config.devtools) {
                    devtools.emit('flush');
                }
            }

            function callUpdatedHooks (queue) {
                var i = queue.length;
                while (i--) {
                    var watcher = queue[i];
                    var vm = watcher.vm;
                    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
                        callHook(vm, 'updated');
                    }
                }
            }

            /**
             * Queue a kept-alive component that was activated during patch.
             * The queue will be processed after the entire tree has been patched.
             */
            function queueActivatedComponent (vm) {
                // setting _inactive to false here so that a render function can
                // rely on checking whether it's in an inactive tree (e.g. router-view)
                vm._inactive = false;
                activatedChildren.push(vm);
            }

            function callActivatedHooks (queue) {
                for (var i = 0; i < queue.length; i++) {
                    queue[i]._inactive = true;
                    activateChildComponent(queue[i], true /* true */);
                }
            }

            /**
             * Push a watcher into the watcher queue.
             * Jobs with duplicate IDs will be skipped unless it's
             * pushed when the queue is being flushed.
             */
            function queueWatcher (watcher) {
                var id = watcher.id;
                if (has[id] == null) {
                    has[id] = true;
                    if (!flushing) {
                        queue.push(watcher);
                    } else {
                        // if already flushing, splice the watcher based on its id
                        // if already past its id, it will be run next immediately.
                        var i = queue.length - 1;
                        while (i > index && queue[i].id > watcher.id) {
                            i--;
                        }
                        queue.splice(i + 1, 0, watcher);
                    }
                    // queue the flush
                    if (!waiting) {
                        waiting = true;

                        if ( true && !config.async) {
                            flushSchedulerQueue();
                            return
                        }
                        nextTick(flushSchedulerQueue);
                    }
                }
            }

            /*  */



            var uid$2 = 0;

            /**
             * A watcher parses an expression, collects dependencies,
             * and fires callback when the expression value changes.
             * This is used for both the $watch() api and directives.
             */
            var Watcher = function Watcher (
                vm,
                expOrFn,
                cb,
                options,
                isRenderWatcher
            ) {
                this.vm = vm;
                if (isRenderWatcher) {
                    vm._watcher = this;
                }
                vm._watchers.push(this);
                // options
                if (options) {
                    this.deep = !!options.deep;
                    this.user = !!options.user;
                    this.lazy = !!options.lazy;
                    this.sync = !!options.sync;
                    this.before = options.before;
                } else {
                    this.deep = this.user = this.lazy = this.sync = false;
                }
                this.cb = cb;
                this.id = ++uid$2; // uid for batching
                this.active = true;
                this.dirty = this.lazy; // for lazy watchers
                this.deps = [];
                this.newDeps = [];
                this.depIds = new _Set();
                this.newDepIds = new _Set();
                this.expression =  true
                    ? expOrFn.toString()
                    : undefined;
                // parse expression for getter
                if (typeof expOrFn === 'function') {
                    this.getter = expOrFn;
                } else {
                    this.getter = parsePath(expOrFn);
                    if (!this.getter) {
                        this.getter = noop;
                        true && warn(
                            "Failed watching path: \"" + expOrFn + "\" " +
                            'Watcher only accepts simple dot-delimited paths. ' +
                            'For full control, use a function instead.',
                            vm
                        );
                    }
                }
                this.value = this.lazy
                    ? undefined
                    : this.get();
            };

            /**
             * Evaluate the getter, and re-collect dependencies.
             */
            Watcher.prototype.get = function get () {
                pushTarget(this);
                var value;
                var vm = this.vm;
                try {
                    value = this.getter.call(vm, vm);
                } catch (e) {
                    if (this.user) {
                        handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
                    } else {
                        throw e
                    }
                } finally {
                    // "touch" every property so they are all tracked as
                    // dependencies for deep watching
                    if (this.deep) {
                        traverse(value);
                    }
                    popTarget();
                    this.cleanupDeps();
                }
                return value
            };

            /**
             * Add a dependency to this directive.
             */
            Watcher.prototype.addDep = function addDep (dep) {
                var id = dep.id;
                if (!this.newDepIds.has(id)) {
                    this.newDepIds.add(id);
                    this.newDeps.push(dep);
                    if (!this.depIds.has(id)) {
                        dep.addSub(this);
                    }
                }
            };

            /**
             * Clean up for dependency collection.
             */
            Watcher.prototype.cleanupDeps = function cleanupDeps () {
                var i = this.deps.length;
                while (i--) {
                    var dep = this.deps[i];
                    if (!this.newDepIds.has(dep.id)) {
                        dep.removeSub(this);
                    }
                }
                var tmp = this.depIds;
                this.depIds = this.newDepIds;
                this.newDepIds = tmp;
                this.newDepIds.clear();
                tmp = this.deps;
                this.deps = this.newDeps;
                this.newDeps = tmp;
                this.newDeps.length = 0;
            };

            /**
             * Subscriber interface.
             * Will be called when a dependency changes.
             */
            Watcher.prototype.update = function update () {
                /* istanbul ignore else */
                if (this.lazy) {
                    this.dirty = true;
                } else if (this.sync) {
                    this.run();
                } else {
                    queueWatcher(this);
                }
            };

            /**
             * Scheduler job interface.
             * Will be called by the scheduler.
             */
            Watcher.prototype.run = function run () {
                if (this.active) {
                    var value = this.get();
                    if (
                        value !== this.value ||
                        // Deep watchers and watchers on Object/Arrays should fire even
                        // when the value is the same, because the value may
                        // have mutated.
                        isObject(value) ||
                        this.deep
                    ) {
                        // set new value
                        var oldValue = this.value;
                        this.value = value;
                        if (this.user) {
                            try {
                                this.cb.call(this.vm, value, oldValue);
                            } catch (e) {
                                handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
                            }
                        } else {
                            this.cb.call(this.vm, value, oldValue);
                        }
                    }
                }
            };

            /**
             * Evaluate the value of the watcher.
             * This only gets called for lazy watchers.
             */
            Watcher.prototype.evaluate = function evaluate () {
                this.value = this.get();
                this.dirty = false;
            };

            /**
             * Depend on all deps collected by this watcher.
             */
            Watcher.prototype.depend = function depend () {
                var i = this.deps.length;
                while (i--) {
                    this.deps[i].depend();
                }
            };

            /**
             * Remove self from all dependencies' subscriber list.
             */
            Watcher.prototype.teardown = function teardown () {
                if (this.active) {
                    // remove self from vm's watcher list
                    // this is a somewhat expensive operation so we skip it
                    // if the vm is being destroyed.
                    if (!this.vm._isBeingDestroyed) {
                        remove(this.vm._watchers, this);
                    }
                    var i = this.deps.length;
                    while (i--) {
                        this.deps[i].removeSub(this);
                    }
                    this.active = false;
                }
            };

            /*  */

            var sharedPropertyDefinition = {
                enumerable: true,
                configurable: true,
                get: noop,
                set: noop
            };

            function proxy (target, sourceKey, key) {
                sharedPropertyDefinition.get = function proxyGetter () {
                    return this[sourceKey][key]
                };
                sharedPropertyDefinition.set = function proxySetter (val) {
                    this[sourceKey][key] = val;
                };
                Object.defineProperty(target, key, sharedPropertyDefinition);
            }

            function initState (vm) {
                vm._watchers = [];
                var opts = vm.$options;
                if (opts.props) { initProps(vm, opts.props); }
                if (opts.methods) { initMethods(vm, opts.methods); }
                if (opts.data) {
                    initData(vm);
                } else {
                    observe(vm._data = {}, true /* asRootData */);
                }
                if (opts.computed) { initComputed(vm, opts.computed); }
                if (opts.watch && opts.watch !== nativeWatch) {
                    initWatch(vm, opts.watch);
                }
            }

            function initProps (vm, propsOptions) {
                var propsData = vm.$options.propsData || {};
                var props = vm._props = {};
                // cache prop keys so that future props updates can iterate using Array
                // instead of dynamic object key enumeration.
                var keys = vm.$options._propKeys = [];
                var isRoot = !vm.$parent;
                // root instance props should be converted
                if (!isRoot) {
                    toggleObserving(false);
                }
                var loop = function ( key ) {
                    keys.push(key);
                    var value = validateProp(key, propsOptions, propsData, vm);
                    /* istanbul ignore else */
                    if (true) {
                        var hyphenatedKey = hyphenate(key);
                        if (isReservedAttribute(hyphenatedKey) ||
                            config.isReservedAttr(hyphenatedKey)) {
                            warn(
                                ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
                                vm
                            );
                        }
                        defineReactive$$1(props, key, value, function () {
                            if (!isRoot && !isUpdatingChildComponent) {
                                warn(
                                    "Avoid mutating a prop directly since the value will be " +
                                    "overwritten whenever the parent component re-renders. " +
                                    "Instead, use a data or computed property based on the prop's " +
                                    "value. Prop being mutated: \"" + key + "\"",
                                    vm
                                );
                            }
                        });
                    } else {}
                    // static props are already proxied on the component's prototype
                    // during Vue.extend(). We only need to proxy props defined at
                    // instantiation here.
                    if (!(key in vm)) {
                        proxy(vm, "_props", key);
                    }
                };

                for (var key in propsOptions) loop( key );
                toggleObserving(true);
            }

            function initData (vm) {
                var data = vm.$options.data;
                data = vm._data = typeof data === 'function'
                    ? getData(data, vm)
                    : data || {};
                if (!isPlainObject(data)) {
                    data = {};
                    true && warn(
                        'data functions should return an object:\n' +
                        'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
                        vm
                    );
                }
                // proxy data on instance
                var keys = Object.keys(data);
                var props = vm.$options.props;
                var methods = vm.$options.methods;
                var i = keys.length;
                while (i--) {
                    var key = keys[i];
                    if (true) {
                        if (methods && hasOwn(methods, key)) {
                            warn(
                                ("Method \"" + key + "\" has already been defined as a data property."),
                                vm
                            );
                        }
                    }
                    if (props && hasOwn(props, key)) {
                        true && warn(
                            "The data property \"" + key + "\" is already declared as a prop. " +
                            "Use prop default value instead.",
                            vm
                        );
                    } else if (!isReserved(key)) {
                        proxy(vm, "_data", key);
                    }
                }
                // observe data
                observe(data, true /* asRootData */);
            }

            function getData (data, vm) {
                // #7573 disable dep collection when invoking data getters
                pushTarget();
                try {
                    return data.call(vm, vm)
                } catch (e) {
                    handleError(e, vm, "data()");
                    return {}
                } finally {
                    popTarget();
                }
            }

            var computedWatcherOptions = { lazy: true };

            function initComputed (vm, computed) {
                // $flow-disable-line
                var watchers = vm._computedWatchers = Object.create(null);
                // computed properties are just getters during SSR
                var isSSR = isServerRendering();

                for (var key in computed) {
                    var userDef = computed[key];
                    var getter = typeof userDef === 'function' ? userDef : userDef.get;
                    if ( true && getter == null) {
                        warn(
                            ("Getter is missing for computed property \"" + key + "\"."),
                            vm
                        );
                    }

                    if (!isSSR) {
                        // create internal watcher for the computed property.
                        watchers[key] = new Watcher(
                            vm,
                            getter || noop,
                            noop,
                            computedWatcherOptions
                        );
                    }

                    // component-defined computed properties are already defined on the
                    // component prototype. We only need to define computed properties defined
                    // at instantiation here.
                    if (!(key in vm)) {
                        defineComputed(vm, key, userDef);
                    } else if (true) {
                        if (key in vm.$data) {
                            warn(("The computed property \"" + key + "\" is already defined in data."), vm);
                        } else if (vm.$options.props && key in vm.$options.props) {
                            warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
                        }
                    }
                }
            }

            function defineComputed (
                target,
                key,
                userDef
            ) {
                var shouldCache = !isServerRendering();
                if (typeof userDef === 'function') {
                    sharedPropertyDefinition.get = shouldCache
                        ? createComputedGetter(key)
                        : createGetterInvoker(userDef);
                    sharedPropertyDefinition.set = noop;
                } else {
                    sharedPropertyDefinition.get = userDef.get
                        ? shouldCache && userDef.cache !== false
                            ? createComputedGetter(key)
                            : createGetterInvoker(userDef.get)
                        : noop;
                    sharedPropertyDefinition.set = userDef.set || noop;
                }
                if ( true &&
                    sharedPropertyDefinition.set === noop) {
                    sharedPropertyDefinition.set = function () {
                        warn(
                            ("Computed property \"" + key + "\" was assigned to but it has no setter."),
                            this
                        );
                    };
                }
                Object.defineProperty(target, key, sharedPropertyDefinition);
            }

            function createComputedGetter (key) {
                return function computedGetter () {
                    var watcher = this._computedWatchers && this._computedWatchers[key];
                    if (watcher) {
                        if (watcher.dirty) {
                            watcher.evaluate();
                        }
                        if (Dep.target) {
                            watcher.depend();
                        }
                        return watcher.value
                    }
                }
            }

            function createGetterInvoker(fn) {
                return function computedGetter () {
                    return fn.call(this, this)
                }
            }

            function initMethods (vm, methods) {
                var props = vm.$options.props;
                for (var key in methods) {
                    if (true) {
                        if (typeof methods[key] !== 'function') {
                            warn(
                                "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
                                "Did you reference the function correctly?",
                                vm
                            );
                        }
                        if (props && hasOwn(props, key)) {
                            warn(
                                ("Method \"" + key + "\" has already been defined as a prop."),
                                vm
                            );
                        }
                        if ((key in vm) && isReserved(key)) {
                            warn(
                                "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
                                "Avoid defining component methods that start with _ or $."
                            );
                        }
                    }
                    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
                }
            }

            function initWatch (vm, watch) {
                for (var key in watch) {
                    var handler = watch[key];
                    if (Array.isArray(handler)) {
                        for (var i = 0; i < handler.length; i++) {
                            createWatcher(vm, key, handler[i]);
                        }
                    } else {
                        createWatcher(vm, key, handler);
                    }
                }
            }

            function createWatcher (
                vm,
                expOrFn,
                handler,
                options
            ) {
                if (isPlainObject(handler)) {
                    options = handler;
                    handler = handler.handler;
                }
                if (typeof handler === 'string') {
                    handler = vm[handler];
                }
                return vm.$watch(expOrFn, handler, options)
            }

            function stateMixin (Vue) {
                // flow somehow has problems with directly declared definition object
                // when using Object.defineProperty, so we have to procedurally build up
                // the object here.
                var dataDef = {};
                dataDef.get = function () { return this._data };
                var propsDef = {};
                propsDef.get = function () { return this._props };
                if (true) {
                    dataDef.set = function () {
                        warn(
                            'Avoid replacing instance root $data. ' +
                            'Use nested data properties instead.',
                            this
                        );
                    };
                    propsDef.set = function () {
                        warn("$props is readonly.", this);
                    };
                }
                Object.defineProperty(Vue.prototype, '$data', dataDef);
                Object.defineProperty(Vue.prototype, '$props', propsDef);

                Vue.prototype.$set = set;
                Vue.prototype.$delete = del;

                Vue.prototype.$watch = function (
                    expOrFn,
                    cb,
                    options
                ) {
                    var vm = this;
                    if (isPlainObject(cb)) {
                        return createWatcher(vm, expOrFn, cb, options)
                    }
                    options = options || {};
                    options.user = true;
                    var watcher = new Watcher(vm, expOrFn, cb, options);
                    if (options.immediate) {
                        try {
                            cb.call(vm, watcher.value);
                        } catch (error) {
                            handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
                        }
                    }
                    return function unwatchFn () {
                        watcher.teardown();
                    }
                };
            }

            /*  */

            var uid$3 = 0;

            function initMixin (Vue) {
                Vue.prototype._init = function (options) {
                    var vm = this;
                    // a uid
                    vm._uid = uid$3++;

                    var startTag, endTag;
                    /* istanbul ignore if */
                    if ( true && config.performance && mark) {
                        startTag = "vue-perf-start:" + (vm._uid);
                        endTag = "vue-perf-end:" + (vm._uid);
                        mark(startTag);
                    }

                    // a flag to avoid this being observed
                    vm._isVue = true;
                    // merge options
                    if (options && options._isComponent) {
                        // optimize internal component instantiation
                        // since dynamic options merging is pretty slow, and none of the
                        // internal component options needs special treatment.
                        initInternalComponent(vm, options);
                    } else {
                        vm.$options = mergeOptions(
                            resolveConstructorOptions(vm.constructor),
                            options || {},
                            vm
                        );
                    }
                    /* istanbul ignore else */
                    if (true) {
                        initProxy(vm);
                    } else {}
                    // expose real self
                    vm._self = vm;
                    initLifecycle(vm);
                    initEvents(vm);
                    initRender(vm);
                    callHook(vm, 'beforeCreate');
                    initInjections(vm); // resolve injections before data/props
                    initState(vm);
                    initProvide(vm); // resolve provide after data/props
                    callHook(vm, 'created');

                    /* istanbul ignore if */
                    if ( true && config.performance && mark) {
                        vm._name = formatComponentName(vm, false);
                        mark(endTag);
                        measure(("vue " + (vm._name) + " init"), startTag, endTag);
                    }

                    if (vm.$options.el) {
                        vm.$mount(vm.$options.el);
                    }
                };
            }

            function initInternalComponent (vm, options) {
                var opts = vm.$options = Object.create(vm.constructor.options);
                // doing this because it's faster than dynamic enumeration.
                var parentVnode = options._parentVnode;
                opts.parent = options.parent;
                opts._parentVnode = parentVnode;

                var vnodeComponentOptions = parentVnode.componentOptions;
                opts.propsData = vnodeComponentOptions.propsData;
                opts._parentListeners = vnodeComponentOptions.listeners;
                opts._renderChildren = vnodeComponentOptions.children;
                opts._componentTag = vnodeComponentOptions.tag;

                if (options.render) {
                    opts.render = options.render;
                    opts.staticRenderFns = options.staticRenderFns;
                }
            }

            function resolveConstructorOptions (Ctor) {
                var options = Ctor.options;
                if (Ctor.super) {
                    var superOptions = resolveConstructorOptions(Ctor.super);
                    var cachedSuperOptions = Ctor.superOptions;
                    if (superOptions !== cachedSuperOptions) {
                        // super option changed,
                        // need to resolve new options.
                        Ctor.superOptions = superOptions;
                        // check if there are any late-modified/attached options (#4976)
                        var modifiedOptions = resolveModifiedOptions(Ctor);
                        // update base extend options
                        if (modifiedOptions) {
                            extend(Ctor.extendOptions, modifiedOptions);
                        }
                        options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
                        if (options.name) {
                            options.components[options.name] = Ctor;
                        }
                    }
                }
                return options
            }

            function resolveModifiedOptions (Ctor) {
                var modified;
                var latest = Ctor.options;
                var sealed = Ctor.sealedOptions;
                for (var key in latest) {
                    if (latest[key] !== sealed[key]) {
                        if (!modified) { modified = {}; }
                        modified[key] = latest[key];
                    }
                }
                return modified
            }

            function Vue (options) {
                if ( true &&
                    !(this instanceof Vue)
                ) {
                    warn('Vue is a constructor and should be called with the `new` keyword');
                }
                this._init(options);
            }

            initMixin(Vue);
            stateMixin(Vue);
            eventsMixin(Vue);
            lifecycleMixin(Vue);
            renderMixin(Vue);

            /*  */

            function initUse (Vue) {
                Vue.use = function (plugin) {
                    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
                    if (installedPlugins.indexOf(plugin) > -1) {
                        return this
                    }

                    // additional parameters
                    var args = toArray(arguments, 1);
                    args.unshift(this);
                    if (typeof plugin.install === 'function') {
                        plugin.install.apply(plugin, args);
                    } else if (typeof plugin === 'function') {
                        plugin.apply(null, args);
                    }
                    installedPlugins.push(plugin);
                    return this
                };
            }

            /*  */

            function initMixin$1 (Vue) {
                Vue.mixin = function (mixin) {
                    this.options = mergeOptions(this.options, mixin);
                    return this
                };
            }

            /*  */

            function initExtend (Vue) {
                /**
                 * Each instance constructor, including Vue, has a unique
                 * cid. This enables us to create wrapped "child
                 * constructors" for prototypal inheritance and cache them.
                 */
                Vue.cid = 0;
                var cid = 1;

                /**
                 * Class inheritance
                 */
                Vue.extend = function (extendOptions) {
                    extendOptions = extendOptions || {};
                    var Super = this;
                    var SuperId = Super.cid;
                    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
                    if (cachedCtors[SuperId]) {
                        return cachedCtors[SuperId]
                    }

                    var name = extendOptions.name || Super.options.name;
                    if ( true && name) {
                        validateComponentName(name);
                    }

                    var Sub = function VueComponent (options) {
                        this._init(options);
                    };
                    Sub.prototype = Object.create(Super.prototype);
                    Sub.prototype.constructor = Sub;
                    Sub.cid = cid++;
                    Sub.options = mergeOptions(
                        Super.options,
                        extendOptions
                    );
                    Sub['super'] = Super;

                    // For props and computed properties, we define the proxy getters on
                    // the Vue instances at extension time, on the extended prototype. This
                    // avoids Object.defineProperty calls for each instance created.
                    if (Sub.options.props) {
                        initProps$1(Sub);
                    }
                    if (Sub.options.computed) {
                        initComputed$1(Sub);
                    }

                    // allow further extension/mixin/plugin usage
                    Sub.extend = Super.extend;
                    Sub.mixin = Super.mixin;
                    Sub.use = Super.use;

                    // create asset registers, so extended classes
                    // can have their private assets too.
                    ASSET_TYPES.forEach(function (type) {
                        Sub[type] = Super[type];
                    });
                    // enable recursive self-lookup
                    if (name) {
                        Sub.options.components[name] = Sub;
                    }

                    // keep a reference to the super options at extension time.
                    // later at instantiation we can check if Super's options have
                    // been updated.
                    Sub.superOptions = Super.options;
                    Sub.extendOptions = extendOptions;
                    Sub.sealedOptions = extend({}, Sub.options);

                    // cache constructor
                    cachedCtors[SuperId] = Sub;
                    return Sub
                };
            }

            function initProps$1 (Comp) {
                var props = Comp.options.props;
                for (var key in props) {
                    proxy(Comp.prototype, "_props", key);
                }
            }

            function initComputed$1 (Comp) {
                var computed = Comp.options.computed;
                for (var key in computed) {
                    defineComputed(Comp.prototype, key, computed[key]);
                }
            }

            /*  */

            function initAssetRegisters (Vue) {
                /**
                 * Create asset registration methods.
                 */
                ASSET_TYPES.forEach(function (type) {
                    Vue[type] = function (
                        id,
                        definition
                    ) {
                        if (!definition) {
                            return this.options[type + 's'][id]
                        } else {
                            /* istanbul ignore if */
                            if ( true && type === 'component') {
                                validateComponentName(id);
                            }
                            if (type === 'component' && isPlainObject(definition)) {
                                definition.name = definition.name || id;
                                definition = this.options._base.extend(definition);
                            }
                            if (type === 'directive' && typeof definition === 'function') {
                                definition = { bind: definition, update: definition };
                            }
                            this.options[type + 's'][id] = definition;
                            return definition
                        }
                    };
                });
            }

            /*  */



            function getComponentName (opts) {
                return opts && (opts.Ctor.options.name || opts.tag)
            }

            function matches (pattern, name) {
                if (Array.isArray(pattern)) {
                    return pattern.indexOf(name) > -1
                } else if (typeof pattern === 'string') {
                    return pattern.split(',').indexOf(name) > -1
                } else if (isRegExp(pattern)) {
                    return pattern.test(name)
                }
                /* istanbul ignore next */
                return false
            }

            function pruneCache (keepAliveInstance, filter) {
                var cache = keepAliveInstance.cache;
                var keys = keepAliveInstance.keys;
                var _vnode = keepAliveInstance._vnode;
                for (var key in cache) {
                    var cachedNode = cache[key];
                    if (cachedNode) {
                        var name = getComponentName(cachedNode.componentOptions);
                        if (name && !filter(name)) {
                            pruneCacheEntry(cache, key, keys, _vnode);
                        }
                    }
                }
            }

            function pruneCacheEntry (
                cache,
                key,
                keys,
                current
            ) {
                var cached$$1 = cache[key];
                if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
                    cached$$1.componentInstance.$destroy();
                }
                cache[key] = null;
                remove(keys, key);
            }

            var patternTypes = [String, RegExp, Array];

            var KeepAlive = {
                name: 'keep-alive',
                abstract: true,

                props: {
                    include: patternTypes,
                    exclude: patternTypes,
                    max: [String, Number]
                },

                created: function created () {
                    this.cache = Object.create(null);
                    this.keys = [];
                },

                destroyed: function destroyed () {
                    for (var key in this.cache) {
                        pruneCacheEntry(this.cache, key, this.keys);
                    }
                },

                mounted: function mounted () {
                    var this$1 = this;

                    this.$watch('include', function (val) {
                        pruneCache(this$1, function (name) { return matches(val, name); });
                    });
                    this.$watch('exclude', function (val) {
                        pruneCache(this$1, function (name) { return !matches(val, name); });
                    });
                },

                render: function render () {
                    var slot = this.$slots.default;
                    var vnode = getFirstComponentChild(slot);
                    var componentOptions = vnode && vnode.componentOptions;
                    if (componentOptions) {
                        // check pattern
                        var name = getComponentName(componentOptions);
                        var ref = this;
                        var include = ref.include;
                        var exclude = ref.exclude;
                        if (
                            // not included
                            (include && (!name || !matches(include, name))) ||
                            // excluded
                            (exclude && name && matches(exclude, name))
                        ) {
                            return vnode
                        }

                        var ref$1 = this;
                        var cache = ref$1.cache;
                        var keys = ref$1.keys;
                        var key = vnode.key == null
                            // same constructor may get registered as different local components
                            // so cid alone is not enough (#3269)
                            ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
                            : vnode.key;
                        if (cache[key]) {
                            vnode.componentInstance = cache[key].componentInstance;
                            // make current key freshest
                            remove(keys, key);
                            keys.push(key);
                        } else {
                            cache[key] = vnode;
                            keys.push(key);
                            // prune oldest entry
                            if (this.max && keys.length > parseInt(this.max)) {
                                pruneCacheEntry(cache, keys[0], keys, this._vnode);
                            }
                        }

                        vnode.data.keepAlive = true;
                    }
                    return vnode || (slot && slot[0])
                }
            };

            var builtInComponents = {
                KeepAlive: KeepAlive
            };

            /*  */

            function initGlobalAPI (Vue) {
                // config
                var configDef = {};
                configDef.get = function () { return config; };
                if (true) {
                    configDef.set = function () {
                        warn(
                            'Do not replace the Vue.config object, set individual fields instead.'
                        );
                    };
                }
                Object.defineProperty(Vue, 'config', configDef);

                // exposed util methods.
                // NOTE: these are not considered part of the public API - avoid relying on
                // them unless you are aware of the risk.
                Vue.util = {
                    warn: warn,
                    extend: extend,
                    mergeOptions: mergeOptions,
                    defineReactive: defineReactive$$1
                };

                Vue.set = set;
                Vue.delete = del;
                Vue.nextTick = nextTick;

                // 2.6 explicit observable API
                Vue.observable = function (obj) {
                    observe(obj);
                    return obj
                };

                Vue.options = Object.create(null);
                ASSET_TYPES.forEach(function (type) {
                    Vue.options[type + 's'] = Object.create(null);
                });

                // this is used to identify the "base" constructor to extend all plain-object
                // components with in Weex's multi-instance scenarios.
                Vue.options._base = Vue;

                extend(Vue.options.components, builtInComponents);

                initUse(Vue);
                initMixin$1(Vue);
                initExtend(Vue);
                initAssetRegisters(Vue);
            }

            initGlobalAPI(Vue);

            Object.defineProperty(Vue.prototype, '$isServer', {
                get: isServerRendering
            });

            Object.defineProperty(Vue.prototype, '$ssrContext', {
                get: function get () {
                    /* istanbul ignore next */
                    return this.$vnode && this.$vnode.ssrContext
                }
            });

// expose FunctionalRenderContext for ssr runtime helper installation
            Object.defineProperty(Vue, 'FunctionalRenderContext', {
                value: FunctionalRenderContext
            });

            Vue.version = '2.6.9';

            /*  */

// these are reserved for web because they are directly compiled away
// during template compilation
            var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
            var acceptValue = makeMap('input,textarea,option,select,progress');
            var mustUseProp = function (tag, type, attr) {
                return (
                    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
                    (attr === 'selected' && tag === 'option') ||
                    (attr === 'checked' && tag === 'input') ||
                    (attr === 'muted' && tag === 'video')
                )
            };

            var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

            var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');

            var convertEnumeratedValue = function (key, value) {
                return isFalsyAttrValue(value) || value === 'false'
                    ? 'false'
                    // allow arbitrary string value for contenteditable
                    : key === 'contenteditable' && isValidContentEditableValue(value)
                        ? value
                        : 'true'
            };

            var isBooleanAttr = makeMap(
                'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
                'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
                'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
                'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
                'required,reversed,scoped,seamless,selected,sortable,translate,' +
                'truespeed,typemustmatch,visible'
            );

            var xlinkNS = 'http://www.w3.org/1999/xlink';

            var isXlink = function (name) {
                return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
            };

            var getXlinkProp = function (name) {
                return isXlink(name) ? name.slice(6, name.length) : ''
            };

            var isFalsyAttrValue = function (val) {
                return val == null || val === false
            };

            /*  */

            function genClassForVnode (vnode) {
                var data = vnode.data;
                var parentNode = vnode;
                var childNode = vnode;
                while (isDef(childNode.componentInstance)) {
                    childNode = childNode.componentInstance._vnode;
                    if (childNode && childNode.data) {
                        data = mergeClassData(childNode.data, data);
                    }
                }
                while (isDef(parentNode = parentNode.parent)) {
                    if (parentNode && parentNode.data) {
                        data = mergeClassData(data, parentNode.data);
                    }
                }
                return renderClass(data.staticClass, data.class)
            }

            function mergeClassData (child, parent) {
                return {
                    staticClass: concat(child.staticClass, parent.staticClass),
                    class: isDef(child.class)
                        ? [child.class, parent.class]
                        : parent.class
                }
            }

            function renderClass (
                staticClass,
                dynamicClass
            ) {
                if (isDef(staticClass) || isDef(dynamicClass)) {
                    return concat(staticClass, stringifyClass(dynamicClass))
                }
                /* istanbul ignore next */
                return ''
            }

            function concat (a, b) {
                return a ? b ? (a + ' ' + b) : a : (b || '')
            }

            function stringifyClass (value) {
                if (Array.isArray(value)) {
                    return stringifyArray(value)
                }
                if (isObject(value)) {
                    return stringifyObject(value)
                }
                if (typeof value === 'string') {
                    return value
                }
                /* istanbul ignore next */
                return ''
            }

            function stringifyArray (value) {
                var res = '';
                var stringified;
                for (var i = 0, l = value.length; i < l; i++) {
                    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
                        if (res) { res += ' '; }
                        res += stringified;
                    }
                }
                return res
            }

            function stringifyObject (value) {
                var res = '';
                for (var key in value) {
                    if (value[key]) {
                        if (res) { res += ' '; }
                        res += key;
                    }
                }
                return res
            }

            /*  */

            var namespaceMap = {
                svg: 'http://www.w3.org/2000/svg',
                math: 'http://www.w3.org/1998/Math/MathML'
            };

            var isHTMLTag = makeMap(
                'html,body,base,head,link,meta,style,title,' +
                'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
                'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
                'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
                's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
                'embed,object,param,source,canvas,script,noscript,del,ins,' +
                'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
                'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
                'output,progress,select,textarea,' +
                'details,dialog,menu,menuitem,summary,' +
                'content,element,shadow,template,blockquote,iframe,tfoot'
            );

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
            var isSVG = makeMap(
                'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
                'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
                'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
                true
            );

            var isReservedTag = function (tag) {
                return isHTMLTag(tag) || isSVG(tag)
            };

            function getTagNamespace (tag) {
                if (isSVG(tag)) {
                    return 'svg'
                }
                // basic support for MathML
                // note it doesn't support other MathML elements being component roots
                if (tag === 'math') {
                    return 'math'
                }
            }

            var unknownElementCache = Object.create(null);
            function isUnknownElement (tag) {
                /* istanbul ignore if */
                if (!inBrowser) {
                    return true
                }
                if (isReservedTag(tag)) {
                    return false
                }
                tag = tag.toLowerCase();
                /* istanbul ignore if */
                if (unknownElementCache[tag] != null) {
                    return unknownElementCache[tag]
                }
                var el = document.createElement(tag);
                if (tag.indexOf('-') > -1) {
                    // http://stackoverflow.com/a/28210364/1070244
                    return (unknownElementCache[tag] = (
                        el.constructor === window.HTMLUnknownElement ||
                        el.constructor === window.HTMLElement
                    ))
                } else {
                    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
                }
            }

            var isTextInputType = makeMap('text,number,password,search,email,tel,url');

            /*  */

            /**
             * Query an element selector if it's not an element already.
             */
            function query (el) {
                if (typeof el === 'string') {
                    var selected = document.querySelector(el);
                    if (!selected) {
                        true && warn(
                            'Cannot find element: ' + el
                        );
                        return document.createElement('div')
                    }
                    return selected
                } else {
                    return el
                }
            }

            /*  */

            function createElement$1 (tagName, vnode) {
                var elm = document.createElement(tagName);
                if (tagName !== 'select') {
                    return elm
                }
                // false or null will remove the attribute but undefined will not
                if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
                    elm.setAttribute('multiple', 'multiple');
                }
                return elm
            }

            function createElementNS (namespace, tagName) {
                return document.createElementNS(namespaceMap[namespace], tagName)
            }

            function createTextNode (text) {
                return document.createTextNode(text)
            }

            function createComment (text) {
                return document.createComment(text)
            }

            function insertBefore (parentNode, newNode, referenceNode) {
                parentNode.insertBefore(newNode, referenceNode);
            }

            function removeChild (node, child) {
                node.removeChild(child);
            }

            function appendChild (node, child) {
                node.appendChild(child);
            }

            function parentNode (node) {
                return node.parentNode
            }

            function nextSibling (node) {
                return node.nextSibling
            }

            function tagName (node) {
                return node.tagName
            }

            function setTextContent (node, text) {
                node.textContent = text;
            }

            function setStyleScope (node, scopeId) {
                node.setAttribute(scopeId, '');
            }

            var nodeOps = /*#__PURE__*/Object.freeze({
                createElement: createElement$1,
                createElementNS: createElementNS,
                createTextNode: createTextNode,
                createComment: createComment,
                insertBefore: insertBefore,
                removeChild: removeChild,
                appendChild: appendChild,
                parentNode: parentNode,
                nextSibling: nextSibling,
                tagName: tagName,
                setTextContent: setTextContent,
                setStyleScope: setStyleScope
            });

            /*  */

            var ref = {
                create: function create (_, vnode) {
                    registerRef(vnode);
                },
                update: function update (oldVnode, vnode) {
                    if (oldVnode.data.ref !== vnode.data.ref) {
                        registerRef(oldVnode, true);
                        registerRef(vnode);
                    }
                },
                destroy: function destroy (vnode) {
                    registerRef(vnode, true);
                }
            };

            function registerRef (vnode, isRemoval) {
                var key = vnode.data.ref;
                if (!isDef(key)) { return }

                var vm = vnode.context;
                var ref = vnode.componentInstance || vnode.elm;
                var refs = vm.$refs;
                if (isRemoval) {
                    if (Array.isArray(refs[key])) {
                        remove(refs[key], ref);
                    } else if (refs[key] === ref) {
                        refs[key] = undefined;
                    }
                } else {
                    if (vnode.data.refInFor) {
                        if (!Array.isArray(refs[key])) {
                            refs[key] = [ref];
                        } else if (refs[key].indexOf(ref) < 0) {
                            // $flow-disable-line
                            refs[key].push(ref);
                        }
                    } else {
                        refs[key] = ref;
                    }
                }
            }

            /**
             * Virtual DOM patching algorithm based on Snabbdom by
             * Simon Friis Vindum (@paldepind)
             * Licensed under the MIT License
             * https://github.com/paldepind/snabbdom/blob/master/LICENSE
             *
             * modified by Evan You (@yyx990803)
             *
             * Not type-checking this because this file is perf-critical and the cost
             * of making flow understand it is not worth it.
             */

            var emptyNode = new VNode('', {}, []);

            var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

            function sameVnode (a, b) {
                return (
                    a.key === b.key && (
                        (
                            a.tag === b.tag &&
                            a.isComment === b.isComment &&
                            isDef(a.data) === isDef(b.data) &&
                            sameInputType(a, b)
                        ) || (
                            isTrue(a.isAsyncPlaceholder) &&
                            a.asyncFactory === b.asyncFactory &&
                            isUndef(b.asyncFactory.error)
                        )
                    )
                )
            }

            function sameInputType (a, b) {
                if (a.tag !== 'input') { return true }
                var i;
                var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
                var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
                return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
            }

            function createKeyToOldIdx (children, beginIdx, endIdx) {
                var i, key;
                var map = {};
                for (i = beginIdx; i <= endIdx; ++i) {
                    key = children[i].key;
                    if (isDef(key)) { map[key] = i; }
                }
                return map
            }

            function createPatchFunction (backend) {
                var i, j;
                var cbs = {};

                var modules = backend.modules;
                var nodeOps = backend.nodeOps;

                for (i = 0; i < hooks.length; ++i) {
                    cbs[hooks[i]] = [];
                    for (j = 0; j < modules.length; ++j) {
                        if (isDef(modules[j][hooks[i]])) {
                            cbs[hooks[i]].push(modules[j][hooks[i]]);
                        }
                    }
                }

                function emptyNodeAt (elm) {
                    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
                }

                function createRmCb (childElm, listeners) {
                    function remove$$1 () {
                        if (--remove$$1.listeners === 0) {
                            removeNode(childElm);
                        }
                    }
                    remove$$1.listeners = listeners;
                    return remove$$1
                }

                function removeNode (el) {
                    var parent = nodeOps.parentNode(el);
                    // element may have already been removed due to v-html / v-text
                    if (isDef(parent)) {
                        nodeOps.removeChild(parent, el);
                    }
                }

                function isUnknownElement$$1 (vnode, inVPre) {
                    return (
                        !inVPre &&
                        !vnode.ns &&
                        !(
                            config.ignoredElements.length &&
                            config.ignoredElements.some(function (ignore) {
                                return isRegExp(ignore)
                                    ? ignore.test(vnode.tag)
                                    : ignore === vnode.tag
                            })
                        ) &&
                        config.isUnknownElement(vnode.tag)
                    )
                }

                var creatingElmInVPre = 0;

                function createElm (
                    vnode,
                    insertedVnodeQueue,
                    parentElm,
                    refElm,
                    nested,
                    ownerArray,
                    index
                ) {
                    if (isDef(vnode.elm) && isDef(ownerArray)) {
                        // This vnode was used in a previous render!
                        // now it's used as a new node, overwriting its elm would cause
                        // potential patch errors down the road when it's used as an insertion
                        // reference node. Instead, we clone the node on-demand before creating
                        // associated DOM element for it.
                        vnode = ownerArray[index] = cloneVNode(vnode);
                    }

                    vnode.isRootInsert = !nested; // for transition enter check
                    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
                        return
                    }

                    var data = vnode.data;
                    var children = vnode.children;
                    var tag = vnode.tag;
                    if (isDef(tag)) {
                        if (true) {
                            if (data && data.pre) {
                                creatingElmInVPre++;
                            }
                            if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
                                warn(
                                    'Unknown custom element: <' + tag + '> - did you ' +
                                    'register the component correctly? For recursive components, ' +
                                    'make sure to provide the "name" option.',
                                    vnode.context
                                );
                            }
                        }

                        vnode.elm = vnode.ns
                            ? nodeOps.createElementNS(vnode.ns, tag)
                            : nodeOps.createElement(tag, vnode);
                        setScope(vnode);

                        /* istanbul ignore if */
                        {
                            createChildren(vnode, children, insertedVnodeQueue);
                            if (isDef(data)) {
                                invokeCreateHooks(vnode, insertedVnodeQueue);
                            }
                            insert(parentElm, vnode.elm, refElm);
                        }

                        if ( true && data && data.pre) {
                            creatingElmInVPre--;
                        }
                    } else if (isTrue(vnode.isComment)) {
                        vnode.elm = nodeOps.createComment(vnode.text);
                        insert(parentElm, vnode.elm, refElm);
                    } else {
                        vnode.elm = nodeOps.createTextNode(vnode.text);
                        insert(parentElm, vnode.elm, refElm);
                    }
                }

                function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
                    var i = vnode.data;
                    if (isDef(i)) {
                        var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
                        if (isDef(i = i.hook) && isDef(i = i.init)) {
                            i(vnode, false /* hydrating */);
                        }
                        // after calling the init hook, if the vnode is a child component
                        // it should've created a child instance and mounted it. the child
                        // component also has set the placeholder vnode's elm.
                        // in that case we can just return the element and be done.
                        if (isDef(vnode.componentInstance)) {
                            initComponent(vnode, insertedVnodeQueue);
                            insert(parentElm, vnode.elm, refElm);
                            if (isTrue(isReactivated)) {
                                reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
                            }
                            return true
                        }
                    }
                }

                function initComponent (vnode, insertedVnodeQueue) {
                    if (isDef(vnode.data.pendingInsert)) {
                        insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
                        vnode.data.pendingInsert = null;
                    }
                    vnode.elm = vnode.componentInstance.$el;
                    if (isPatchable(vnode)) {
                        invokeCreateHooks(vnode, insertedVnodeQueue);
                        setScope(vnode);
                    } else {
                        // empty component root.
                        // skip all element-related modules except for ref (#3455)
                        registerRef(vnode);
                        // make sure to invoke the insert hook
                        insertedVnodeQueue.push(vnode);
                    }
                }

                function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
                    var i;
                    // hack for #4339: a reactivated component with inner transition
                    // does not trigger because the inner node's created hooks are not called
                    // again. It's not ideal to involve module-specific logic in here but
                    // there doesn't seem to be a better way to do it.
                    var innerNode = vnode;
                    while (innerNode.componentInstance) {
                        innerNode = innerNode.componentInstance._vnode;
                        if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
                            for (i = 0; i < cbs.activate.length; ++i) {
                                cbs.activate[i](emptyNode, innerNode);
                            }
                            insertedVnodeQueue.push(innerNode);
                            break
                        }
                    }
                    // unlike a newly created component,
                    // a reactivated keep-alive component doesn't insert itself
                    insert(parentElm, vnode.elm, refElm);
                }

                function insert (parent, elm, ref$$1) {
                    if (isDef(parent)) {
                        if (isDef(ref$$1)) {
                            if (nodeOps.parentNode(ref$$1) === parent) {
                                nodeOps.insertBefore(parent, elm, ref$$1);
                            }
                        } else {
                            nodeOps.appendChild(parent, elm);
                        }
                    }
                }

                function createChildren (vnode, children, insertedVnodeQueue) {
                    if (Array.isArray(children)) {
                        if (true) {
                            checkDuplicateKeys(children);
                        }
                        for (var i = 0; i < children.length; ++i) {
                            createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
                        }
                    } else if (isPrimitive(vnode.text)) {
                        nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
                    }
                }

                function isPatchable (vnode) {
                    while (vnode.componentInstance) {
                        vnode = vnode.componentInstance._vnode;
                    }
                    return isDef(vnode.tag)
                }

                function invokeCreateHooks (vnode, insertedVnodeQueue) {
                    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                        cbs.create[i$1](emptyNode, vnode);
                    }
                    i = vnode.data.hook; // Reuse variable
                    if (isDef(i)) {
                        if (isDef(i.create)) { i.create(emptyNode, vnode); }
                        if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
                    }
                }

                // set scope id attribute for scoped CSS.
                // this is implemented as a special case to avoid the overhead
                // of going through the normal attribute patching process.
                function setScope (vnode) {
                    var i;
                    if (isDef(i = vnode.fnScopeId)) {
                        nodeOps.setStyleScope(vnode.elm, i);
                    } else {
                        var ancestor = vnode;
                        while (ancestor) {
                            if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
                                nodeOps.setStyleScope(vnode.elm, i);
                            }
                            ancestor = ancestor.parent;
                        }
                    }
                    // for slot content they should also get the scopeId from the host instance.
                    if (isDef(i = activeInstance) &&
                        i !== vnode.context &&
                        i !== vnode.fnContext &&
                        isDef(i = i.$options._scopeId)
                    ) {
                        nodeOps.setStyleScope(vnode.elm, i);
                    }
                }

                function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
                    for (; startIdx <= endIdx; ++startIdx) {
                        createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
                    }
                }

                function invokeDestroyHook (vnode) {
                    var i, j;
                    var data = vnode.data;
                    if (isDef(data)) {
                        if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
                        for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
                    }
                    if (isDef(i = vnode.children)) {
                        for (j = 0; j < vnode.children.length; ++j) {
                            invokeDestroyHook(vnode.children[j]);
                        }
                    }
                }

                function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
                    for (; startIdx <= endIdx; ++startIdx) {
                        var ch = vnodes[startIdx];
                        if (isDef(ch)) {
                            if (isDef(ch.tag)) {
                                removeAndInvokeRemoveHook(ch);
                                invokeDestroyHook(ch);
                            } else { // Text node
                                removeNode(ch.elm);
                            }
                        }
                    }
                }

                function removeAndInvokeRemoveHook (vnode, rm) {
                    if (isDef(rm) || isDef(vnode.data)) {
                        var i;
                        var listeners = cbs.remove.length + 1;
                        if (isDef(rm)) {
                            // we have a recursively passed down rm callback
                            // increase the listeners count
                            rm.listeners += listeners;
                        } else {
                            // directly removing
                            rm = createRmCb(vnode.elm, listeners);
                        }
                        // recursively invoke hooks on child component root node
                        if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
                            removeAndInvokeRemoveHook(i, rm);
                        }
                        for (i = 0; i < cbs.remove.length; ++i) {
                            cbs.remove[i](vnode, rm);
                        }
                        if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
                            i(vnode, rm);
                        } else {
                            rm();
                        }
                    } else {
                        removeNode(vnode.elm);
                    }
                }

                function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
                    var oldStartIdx = 0;
                    var newStartIdx = 0;
                    var oldEndIdx = oldCh.length - 1;
                    var oldStartVnode = oldCh[0];
                    var oldEndVnode = oldCh[oldEndIdx];
                    var newEndIdx = newCh.length - 1;
                    var newStartVnode = newCh[0];
                    var newEndVnode = newCh[newEndIdx];
                    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

                    // removeOnly is a special flag used only by <transition-group>
                    // to ensure removed elements stay in correct relative positions
                    // during leaving transitions
                    var canMove = !removeOnly;

                    if (true) {
                        checkDuplicateKeys(newCh);
                    }

                    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
                        if (isUndef(oldStartVnode)) {
                            oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
                        } else if (isUndef(oldEndVnode)) {
                            oldEndVnode = oldCh[--oldEndIdx];
                        } else if (sameVnode(oldStartVnode, newStartVnode)) {
                            patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
                            oldStartVnode = oldCh[++oldStartIdx];
                            newStartVnode = newCh[++newStartIdx];
                        } else if (sameVnode(oldEndVnode, newEndVnode)) {
                            patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
                            oldEndVnode = oldCh[--oldEndIdx];
                            newEndVnode = newCh[--newEndIdx];
                        } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
                            patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
                            canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
                            oldStartVnode = oldCh[++oldStartIdx];
                            newEndVnode = newCh[--newEndIdx];
                        } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
                            patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
                            canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
                            oldEndVnode = oldCh[--oldEndIdx];
                            newStartVnode = newCh[++newStartIdx];
                        } else {
                            if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
                            idxInOld = isDef(newStartVnode.key)
                                ? oldKeyToIdx[newStartVnode.key]
                                : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
                            if (isUndef(idxInOld)) { // New element
                                createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
                            } else {
                                vnodeToMove = oldCh[idxInOld];
                                if (sameVnode(vnodeToMove, newStartVnode)) {
                                    patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
                                    oldCh[idxInOld] = undefined;
                                    canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
                                } else {
                                    // same key but different element. treat as new element
                                    createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
                                }
                            }
                            newStartVnode = newCh[++newStartIdx];
                        }
                    }
                    if (oldStartIdx > oldEndIdx) {
                        refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
                        addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
                    } else if (newStartIdx > newEndIdx) {
                        removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
                    }
                }

                function checkDuplicateKeys (children) {
                    var seenKeys = {};
                    for (var i = 0; i < children.length; i++) {
                        var vnode = children[i];
                        var key = vnode.key;
                        if (isDef(key)) {
                            if (seenKeys[key]) {
                                warn(
                                    ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
                                    vnode.context
                                );
                            } else {
                                seenKeys[key] = true;
                            }
                        }
                    }
                }

                function findIdxInOld (node, oldCh, start, end) {
                    for (var i = start; i < end; i++) {
                        var c = oldCh[i];
                        if (isDef(c) && sameVnode(node, c)) { return i }
                    }
                }

                function patchVnode (
                    oldVnode,
                    vnode,
                    insertedVnodeQueue,
                    ownerArray,
                    index,
                    removeOnly
                ) {
                    if (oldVnode === vnode) {
                        return
                    }

                    if (isDef(vnode.elm) && isDef(ownerArray)) {
                        // clone reused vnode
                        vnode = ownerArray[index] = cloneVNode(vnode);
                    }

                    var elm = vnode.elm = oldVnode.elm;

                    if (isTrue(oldVnode.isAsyncPlaceholder)) {
                        if (isDef(vnode.asyncFactory.resolved)) {
                            hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
                        } else {
                            vnode.isAsyncPlaceholder = true;
                        }
                        return
                    }

                    // reuse element for static trees.
                    // note we only do this if the vnode is cloned -
                    // if the new node is not cloned it means the render functions have been
                    // reset by the hot-reload-api and we need to do a proper re-render.
                    if (isTrue(vnode.isStatic) &&
                        isTrue(oldVnode.isStatic) &&
                        vnode.key === oldVnode.key &&
                        (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
                    ) {
                        vnode.componentInstance = oldVnode.componentInstance;
                        return
                    }

                    var i;
                    var data = vnode.data;
                    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
                        i(oldVnode, vnode);
                    }

                    var oldCh = oldVnode.children;
                    var ch = vnode.children;
                    if (isDef(data) && isPatchable(vnode)) {
                        for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
                        if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
                    }
                    if (isUndef(vnode.text)) {
                        if (isDef(oldCh) && isDef(ch)) {
                            if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
                        } else if (isDef(ch)) {
                            if (true) {
                                checkDuplicateKeys(ch);
                            }
                            if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
                            addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
                        } else if (isDef(oldCh)) {
                            removeVnodes(elm, oldCh, 0, oldCh.length - 1);
                        } else if (isDef(oldVnode.text)) {
                            nodeOps.setTextContent(elm, '');
                        }
                    } else if (oldVnode.text !== vnode.text) {
                        nodeOps.setTextContent(elm, vnode.text);
                    }
                    if (isDef(data)) {
                        if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
                    }
                }

                function invokeInsertHook (vnode, queue, initial) {
                    // delay insert hooks for component root nodes, invoke them after the
                    // element is really inserted
                    if (isTrue(initial) && isDef(vnode.parent)) {
                        vnode.parent.data.pendingInsert = queue;
                    } else {
                        for (var i = 0; i < queue.length; ++i) {
                            queue[i].data.hook.insert(queue[i]);
                        }
                    }
                }

                var hydrationBailed = false;
                // list of modules that can skip create hook during hydration because they
                // are already rendered on the client or has no need for initialization
                // Note: style is excluded because it relies on initial clone for future
                // deep updates (#7063).
                var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

                // Note: this is a browser-only function so we can assume elms are DOM nodes.
                function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
                    var i;
                    var tag = vnode.tag;
                    var data = vnode.data;
                    var children = vnode.children;
                    inVPre = inVPre || (data && data.pre);
                    vnode.elm = elm;

                    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
                        vnode.isAsyncPlaceholder = true;
                        return true
                    }
                    // assert node match
                    if (true) {
                        if (!assertNodeMatch(elm, vnode, inVPre)) {
                            return false
                        }
                    }
                    if (isDef(data)) {
                        if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
                        if (isDef(i = vnode.componentInstance)) {
                            // child component. it should have hydrated its own tree.
                            initComponent(vnode, insertedVnodeQueue);
                            return true
                        }
                    }
                    if (isDef(tag)) {
                        if (isDef(children)) {
                            // empty element, allow client to pick up and populate children
                            if (!elm.hasChildNodes()) {
                                createChildren(vnode, children, insertedVnodeQueue);
                            } else {
                                // v-html and domProps: innerHTML
                                if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
                                    if (i !== elm.innerHTML) {
                                        /* istanbul ignore if */
                                        if ( true &&
                                            typeof console !== 'undefined' &&
                                            !hydrationBailed
                                        ) {
                                            hydrationBailed = true;
                                            console.warn('Parent: ', elm);
                                            console.warn('server innerHTML: ', i);
                                            console.warn('client innerHTML: ', elm.innerHTML);
                                        }
                                        return false
                                    }
                                } else {
                                    // iterate and compare children lists
                                    var childrenMatch = true;
                                    var childNode = elm.firstChild;
                                    for (var i$1 = 0; i$1 < children.length; i$1++) {
                                        if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                                            childrenMatch = false;
                                            break
                                        }
                                        childNode = childNode.nextSibling;
                                    }
                                    // if childNode is not null, it means the actual childNodes list is
                                    // longer than the virtual children list.
                                    if (!childrenMatch || childNode) {
                                        /* istanbul ignore if */
                                        if ( true &&
                                            typeof console !== 'undefined' &&
                                            !hydrationBailed
                                        ) {
                                            hydrationBailed = true;
                                            console.warn('Parent: ', elm);
                                            console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
                                        }
                                        return false
                                    }
                                }
                            }
                        }
                        if (isDef(data)) {
                            var fullInvoke = false;
                            for (var key in data) {
                                if (!isRenderedModule(key)) {
                                    fullInvoke = true;
                                    invokeCreateHooks(vnode, insertedVnodeQueue);
                                    break
                                }
                            }
                            if (!fullInvoke && data['class']) {
                                // ensure collecting deps for deep class bindings for future updates
                                traverse(data['class']);
                            }
                        }
                    } else if (elm.data !== vnode.text) {
                        elm.data = vnode.text;
                    }
                    return true
                }

                function assertNodeMatch (node, vnode, inVPre) {
                    if (isDef(vnode.tag)) {
                        return vnode.tag.indexOf('vue-component') === 0 || (
                            !isUnknownElement$$1(vnode, inVPre) &&
                            vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
                        )
                    } else {
                        return node.nodeType === (vnode.isComment ? 8 : 3)
                    }
                }

                return function patch (oldVnode, vnode, hydrating, removeOnly) {
                    if (isUndef(vnode)) {
                        if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
                        return
                    }

                    var isInitialPatch = false;
                    var insertedVnodeQueue = [];

                    if (isUndef(oldVnode)) {
                        // empty mount (likely as component), create new root element
                        isInitialPatch = true;
                        createElm(vnode, insertedVnodeQueue);
                    } else {
                        var isRealElement = isDef(oldVnode.nodeType);
                        if (!isRealElement && sameVnode(oldVnode, vnode)) {
                            // patch existing root node
                            patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);
                        } else {
                            if (isRealElement) {
                                // mounting to a real element
                                // check if this is server-rendered content and if we can perform
                                // a successful hydration.
                                if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
                                    oldVnode.removeAttribute(SSR_ATTR);
                                    hydrating = true;
                                }
                                if (isTrue(hydrating)) {
                                    if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
                                        invokeInsertHook(vnode, insertedVnodeQueue, true);
                                        return oldVnode
                                    } else if (true) {
                                        warn(
                                            'The client-side rendered virtual DOM tree is not matching ' +
                                            'server-rendered content. This is likely caused by incorrect ' +
                                            'HTML markup, for example nesting block-level elements inside ' +
                                            '<p>, or missing <tbody>. Bailing hydration and performing ' +
                                            'full client-side render.'
                                        );
                                    }
                                }
                                // either not server-rendered, or hydration failed.
                                // create an empty node and replace it
                                oldVnode = emptyNodeAt(oldVnode);
                            }

                            // replacing existing element
                            var oldElm = oldVnode.elm;
                            var parentElm = nodeOps.parentNode(oldElm);

                            // create new node
                            createElm(
                                vnode,
                                insertedVnodeQueue,
                                // extremely rare edge case: do not insert if old element is in a
                                // leaving transition. Only happens when combining transition +
                                // keep-alive + HOCs. (#4590)
                                oldElm._leaveCb ? null : parentElm,
                                nodeOps.nextSibling(oldElm)
                            );

                            // update parent placeholder node element, recursively
                            if (isDef(vnode.parent)) {
                                var ancestor = vnode.parent;
                                var patchable = isPatchable(vnode);
                                while (ancestor) {
                                    for (var i = 0; i < cbs.destroy.length; ++i) {
                                        cbs.destroy[i](ancestor);
                                    }
                                    ancestor.elm = vnode.elm;
                                    if (patchable) {
                                        for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                                            cbs.create[i$1](emptyNode, ancestor);
                                        }
                                        // #6513
                                        // invoke insert hooks that may have been merged by create hooks.
                                        // e.g. for directives that uses the "inserted" hook.
                                        var insert = ancestor.data.hook.insert;
                                        if (insert.merged) {
                                            // start at index 1 to avoid re-invoking component mounted hook
                                            for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                                                insert.fns[i$2]();
                                            }
                                        }
                                    } else {
                                        registerRef(ancestor);
                                    }
                                    ancestor = ancestor.parent;
                                }
                            }

                            // destroy old node
                            if (isDef(parentElm)) {
                                removeVnodes(parentElm, [oldVnode], 0, 0);
                            } else if (isDef(oldVnode.tag)) {
                                invokeDestroyHook(oldVnode);
                            }
                        }
                    }

                    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
                    return vnode.elm
                }
            }

            /*  */

            var directives = {
                create: updateDirectives,
                update: updateDirectives,
                destroy: function unbindDirectives (vnode) {
                    updateDirectives(vnode, emptyNode);
                }
            };

            function updateDirectives (oldVnode, vnode) {
                if (oldVnode.data.directives || vnode.data.directives) {
                    _update(oldVnode, vnode);
                }
            }

            function _update (oldVnode, vnode) {
                var isCreate = oldVnode === emptyNode;
                var isDestroy = vnode === emptyNode;
                var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
                var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

                var dirsWithInsert = [];
                var dirsWithPostpatch = [];

                var key, oldDir, dir;
                for (key in newDirs) {
                    oldDir = oldDirs[key];
                    dir = newDirs[key];
                    if (!oldDir) {
                        // new directive, bind
                        callHook$1(dir, 'bind', vnode, oldVnode);
                        if (dir.def && dir.def.inserted) {
                            dirsWithInsert.push(dir);
                        }
                    } else {
                        // existing directive, update
                        dir.oldValue = oldDir.value;
                        dir.oldArg = oldDir.arg;
                        callHook$1(dir, 'update', vnode, oldVnode);
                        if (dir.def && dir.def.componentUpdated) {
                            dirsWithPostpatch.push(dir);
                        }
                    }
                }

                if (dirsWithInsert.length) {
                    var callInsert = function () {
                        for (var i = 0; i < dirsWithInsert.length; i++) {
                            callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
                        }
                    };
                    if (isCreate) {
                        mergeVNodeHook(vnode, 'insert', callInsert);
                    } else {
                        callInsert();
                    }
                }

                if (dirsWithPostpatch.length) {
                    mergeVNodeHook(vnode, 'postpatch', function () {
                        for (var i = 0; i < dirsWithPostpatch.length; i++) {
                            callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
                        }
                    });
                }

                if (!isCreate) {
                    for (key in oldDirs) {
                        if (!newDirs[key]) {
                            // no longer present, unbind
                            callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
                        }
                    }
                }
            }

            var emptyModifiers = Object.create(null);

            function normalizeDirectives$1 (
                dirs,
                vm
            ) {
                var res = Object.create(null);
                if (!dirs) {
                    // $flow-disable-line
                    return res
                }
                var i, dir;
                for (i = 0; i < dirs.length; i++) {
                    dir = dirs[i];
                    if (!dir.modifiers) {
                        // $flow-disable-line
                        dir.modifiers = emptyModifiers;
                    }
                    res[getRawDirName(dir)] = dir;
                    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
                }
                // $flow-disable-line
                return res
            }

            function getRawDirName (dir) {
                return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
            }

            function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
                var fn = dir.def && dir.def[hook];
                if (fn) {
                    try {
                        fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
                    } catch (e) {
                        handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
                    }
                }
            }

            var baseModules = [
                ref,
                directives
            ];

            /*  */

            function updateAttrs (oldVnode, vnode) {
                var opts = vnode.componentOptions;
                if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
                    return
                }
                if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
                    return
                }
                var key, cur, old;
                var elm = vnode.elm;
                var oldAttrs = oldVnode.data.attrs || {};
                var attrs = vnode.data.attrs || {};
                // clone observed objects, as the user probably wants to mutate it
                if (isDef(attrs.__ob__)) {
                    attrs = vnode.data.attrs = extend({}, attrs);
                }

                for (key in attrs) {
                    cur = attrs[key];
                    old = oldAttrs[key];
                    if (old !== cur) {
                        setAttr(elm, key, cur);
                    }
                }
                // #4391: in IE9, setting type can reset value for input[type=radio]
                // #6666: IE/Edge forces progress value down to 1 before setting a max
                /* istanbul ignore if */
                if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
                    setAttr(elm, 'value', attrs.value);
                }
                for (key in oldAttrs) {
                    if (isUndef(attrs[key])) {
                        if (isXlink(key)) {
                            elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
                        } else if (!isEnumeratedAttr(key)) {
                            elm.removeAttribute(key);
                        }
                    }
                }
            }

            function setAttr (el, key, value) {
                if (el.tagName.indexOf('-') > -1) {
                    baseSetAttr(el, key, value);
                } else if (isBooleanAttr(key)) {
                    // set attribute for blank value
                    // e.g. <option disabled>Select one</option>
                    if (isFalsyAttrValue(value)) {
                        el.removeAttribute(key);
                    } else {
                        // technically allowfullscreen is a boolean attribute for <iframe>,
                        // but Flash expects a value of "true" when used on <embed> tag
                        value = key === 'allowfullscreen' && el.tagName === 'EMBED'
                            ? 'true'
                            : key;
                        el.setAttribute(key, value);
                    }
                } else if (isEnumeratedAttr(key)) {
                    el.setAttribute(key, convertEnumeratedValue(key, value));
                } else if (isXlink(key)) {
                    if (isFalsyAttrValue(value)) {
                        el.removeAttributeNS(xlinkNS, getXlinkProp(key));
                    } else {
                        el.setAttributeNS(xlinkNS, key, value);
                    }
                } else {
                    baseSetAttr(el, key, value);
                }
            }

            function baseSetAttr (el, key, value) {
                if (isFalsyAttrValue(value)) {
                    el.removeAttribute(key);
                } else {
                    // #7138: IE10 & 11 fires input event when setting placeholder on
                    // <textarea>... block the first input event and remove the blocker
                    // immediately.
                    /* istanbul ignore if */
                    if (
                        isIE && !isIE9 &&
                        el.tagName === 'TEXTAREA' &&
                        key === 'placeholder' && value !== '' && !el.__ieph
                    ) {
                        var blocker = function (e) {
                            e.stopImmediatePropagation();
                            el.removeEventListener('input', blocker);
                        };
                        el.addEventListener('input', blocker);
                        // $flow-disable-line
                        el.__ieph = true; /* IE placeholder patched */
                    }
                    el.setAttribute(key, value);
                }
            }

            var attrs = {
                create: updateAttrs,
                update: updateAttrs
            };

            /*  */

            function updateClass (oldVnode, vnode) {
                var el = vnode.elm;
                var data = vnode.data;
                var oldData = oldVnode.data;
                if (
                    isUndef(data.staticClass) &&
                    isUndef(data.class) && (
                        isUndef(oldData) || (
                            isUndef(oldData.staticClass) &&
                            isUndef(oldData.class)
                        )
                    )
                ) {
                    return
                }

                var cls = genClassForVnode(vnode);

                // handle transition classes
                var transitionClass = el._transitionClasses;
                if (isDef(transitionClass)) {
                    cls = concat(cls, stringifyClass(transitionClass));
                }

                // set the class
                if (cls !== el._prevClass) {
                    el.setAttribute('class', cls);
                    el._prevClass = cls;
                }
            }

            var klass = {
                create: updateClass,
                update: updateClass
            };

            /*  */

            /*  */

            /*  */

            /*  */

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
            var RANGE_TOKEN = '__r';
            var CHECKBOX_RADIO_TOKEN = '__c';

            /*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
            function normalizeEvents (on) {
                /* istanbul ignore if */
                if (isDef(on[RANGE_TOKEN])) {
                    // IE input[type=range] only supports `change` event
                    var event = isIE ? 'change' : 'input';
                    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
                    delete on[RANGE_TOKEN];
                }
                // This was originally intended to fix #4521 but no longer necessary
                // after 2.5. Keeping it for backwards compat with generated code from < 2.4
                /* istanbul ignore if */
                if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
                    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
                    delete on[CHECKBOX_RADIO_TOKEN];
                }
            }

            var target$1;

            function createOnceHandler$1 (event, handler, capture) {
                var _target = target$1; // save current target element in closure
                return function onceHandler () {
                    var res = handler.apply(null, arguments);
                    if (res !== null) {
                        remove$2(event, onceHandler, capture, _target);
                    }
                }
            }

// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
// implementation and does not fire microtasks in between event propagation, so
// safe to exclude.
            var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);

            function add$1 (
                name,
                handler,
                capture,
                passive
            ) {
                // async edge case #6566: inner click event triggers patch, event handler
                // attached to outer element during patch, and triggered again. This
                // happens because browsers fire microtask ticks between event propagation.
                // the solution is simple: we save the timestamp when a handler is attached,
                // and the handler would only fire if the event passed to it was fired
                // AFTER it was attached.
                if (useMicrotaskFix) {
                    var attachedTimestamp = currentFlushTimestamp;
                    var original = handler;
                    handler = original._wrapper = function (e) {
                        if (
                            // no bubbling, should always fire.
                        // this is just a safety net in case event.timeStamp is unreliable in
                        // certain weird environments...
                            e.target === e.currentTarget ||
                            // event is fired after handler attachment
                            e.timeStamp >= attachedTimestamp ||
                            // bail for environments that have buggy event.timeStamp implementations
                            // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
                            // #9681 QtWebEngine event.timeStamp is negative value
                            e.timeStamp <= 0 ||
                            // #9448 bail if event is fired in another document in a multi-page
                            // electron/nw.js app, since event.timeStamp will be using a different
                            // starting reference
                            e.target.ownerDocument !== document
                        ) {
                            return original.apply(this, arguments)
                        }
                    };
                }
                target$1.addEventListener(
                    name,
                    handler,
                    supportsPassive
                        ? { capture: capture, passive: passive }
                        : capture
                );
            }

            function remove$2 (
                name,
                handler,
                capture,
                _target
            ) {
                (_target || target$1).removeEventListener(
                    name,
                    handler._wrapper || handler,
                    capture
                );
            }

            function updateDOMListeners (oldVnode, vnode) {
                if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
                    return
                }
                var on = vnode.data.on || {};
                var oldOn = oldVnode.data.on || {};
                target$1 = vnode.elm;
                normalizeEvents(on);
                updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);
                target$1 = undefined;
            }

            var events = {
                create: updateDOMListeners,
                update: updateDOMListeners
            };

            /*  */

            var svgContainer;

            function updateDOMProps (oldVnode, vnode) {
                if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
                    return
                }
                var key, cur;
                var elm = vnode.elm;
                var oldProps = oldVnode.data.domProps || {};
                var props = vnode.data.domProps || {};
                // clone observed objects, as the user probably wants to mutate it
                if (isDef(props.__ob__)) {
                    props = vnode.data.domProps = extend({}, props);
                }

                for (key in oldProps) {
                    if (isUndef(props[key])) {
                        elm[key] = '';
                    }
                }
                for (key in props) {
                    cur = props[key];
                    // ignore children if the node has textContent or innerHTML,
                    // as these will throw away existing DOM nodes and cause removal errors
                    // on subsequent patches (#3360)
                    if (key === 'textContent' || key === 'innerHTML') {
                        if (vnode.children) { vnode.children.length = 0; }
                        if (cur === oldProps[key]) { continue }
                        // #6601 work around Chrome version <= 55 bug where single textNode
                        // replaced by innerHTML/textContent retains its parentNode property
                        if (elm.childNodes.length === 1) {
                            elm.removeChild(elm.childNodes[0]);
                        }
                    }

                    if (key === 'value' && elm.tagName !== 'PROGRESS') {
                        // store value as _value as well since
                        // non-string values will be stringified
                        elm._value = cur;
                        // avoid resetting cursor position when value is the same
                        var strCur = isUndef(cur) ? '' : String(cur);
                        if (shouldUpdateValue(elm, strCur)) {
                            elm.value = strCur;
                        }
                    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {
                        // IE doesn't support innerHTML for SVG elements
                        svgContainer = svgContainer || document.createElement('div');
                        svgContainer.innerHTML = "<svg>" + cur + "</svg>";
                        var svg = svgContainer.firstChild;
                        while (elm.firstChild) {
                            elm.removeChild(elm.firstChild);
                        }
                        while (svg.firstChild) {
                            elm.appendChild(svg.firstChild);
                        }
                    } else if (
                        // skip the update if old and new VDOM state is the same.
                    // `value` is handled separately because the DOM value may be temporarily
                    // out of sync with VDOM state due to focus, composition and modifiers.
                    // This  #4521 by skipping the unnecesarry `checked` update.
                        cur !== oldProps[key]
                    ) {
                        // some property updates can throw
                        // e.g. `value` on <progress> w/ non-finite value
                        try {
                            elm[key] = cur;
                        } catch (e) {}
                    }
                }
            }

// check platforms/web/util/attrs.js acceptValue


            function shouldUpdateValue (elm, checkVal) {
                return (!elm.composing && (
                    elm.tagName === 'OPTION' ||
                    isNotInFocusAndDirty(elm, checkVal) ||
                    isDirtyWithModifiers(elm, checkVal)
                ))
            }

            function isNotInFocusAndDirty (elm, checkVal) {
                // return true when textbox (.number and .trim) loses focus and its value is
                // not equal to the updated value
                var notInFocus = true;
                // #6157
                // work around IE bug when accessing document.activeElement in an iframe
                try { notInFocus = document.activeElement !== elm; } catch (e) {}
                return notInFocus && elm.value !== checkVal
            }

            function isDirtyWithModifiers (elm, newVal) {
                var value = elm.value;
                var modifiers = elm._vModifiers; // injected by v-model runtime
                if (isDef(modifiers)) {
                    if (modifiers.number) {
                        return toNumber(value) !== toNumber(newVal)
                    }
                    if (modifiers.trim) {
                        return value.trim() !== newVal.trim()
                    }
                }
                return value !== newVal
            }

            var domProps = {
                create: updateDOMProps,
                update: updateDOMProps
            };

            /*  */

            var parseStyleText = cached(function (cssText) {
                var res = {};
                var listDelimiter = /;(?![^(]*\))/g;
                var propertyDelimiter = /:(.+)/;
                cssText.split(listDelimiter).forEach(function (item) {
                    if (item) {
                        var tmp = item.split(propertyDelimiter);
                        tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
                    }
                });
                return res
            });

// merge static and dynamic style data on the same vnode
            function normalizeStyleData (data) {
                var style = normalizeStyleBinding(data.style);
                // static style is pre-processed into an object during compilation
                // and is always a fresh object, so it's safe to merge into it
                return data.staticStyle
                    ? extend(data.staticStyle, style)
                    : style
            }

// normalize possible array / string values into Object
            function normalizeStyleBinding (bindingStyle) {
                if (Array.isArray(bindingStyle)) {
                    return toObject(bindingStyle)
                }
                if (typeof bindingStyle === 'string') {
                    return parseStyleText(bindingStyle)
                }
                return bindingStyle
            }

            /**
             * parent component style should be after child's
             * so that parent component's style could override it
             */
            function getStyle (vnode, checkChild) {
                var res = {};
                var styleData;

                if (checkChild) {
                    var childNode = vnode;
                    while (childNode.componentInstance) {
                        childNode = childNode.componentInstance._vnode;
                        if (
                            childNode && childNode.data &&
                            (styleData = normalizeStyleData(childNode.data))
                        ) {
                            extend(res, styleData);
                        }
                    }
                }

                if ((styleData = normalizeStyleData(vnode.data))) {
                    extend(res, styleData);
                }

                var parentNode = vnode;
                while ((parentNode = parentNode.parent)) {
                    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
                        extend(res, styleData);
                    }
                }
                return res
            }

            /*  */

            var cssVarRE = /^--/;
            var importantRE = /\s*!important$/;
            var setProp = function (el, name, val) {
                /* istanbul ignore if */
                if (cssVarRE.test(name)) {
                    el.style.setProperty(name, val);
                } else if (importantRE.test(val)) {
                    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');
                } else {
                    var normalizedName = normalize(name);
                    if (Array.isArray(val)) {
                        // Support values array created by autoprefixer, e.g.
                        // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
                        // Set them one by one, and the browser will only set those it can recognize
                        for (var i = 0, len = val.length; i < len; i++) {
                            el.style[normalizedName] = val[i];
                        }
                    } else {
                        el.style[normalizedName] = val;
                    }
                }
            };

            var vendorNames = ['Webkit', 'Moz', 'ms'];

            var emptyStyle;
            var normalize = cached(function (prop) {
                emptyStyle = emptyStyle || document.createElement('div').style;
                prop = camelize(prop);
                if (prop !== 'filter' && (prop in emptyStyle)) {
                    return prop
                }
                var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
                for (var i = 0; i < vendorNames.length; i++) {
                    var name = vendorNames[i] + capName;
                    if (name in emptyStyle) {
                        return name
                    }
                }
            });

            function updateStyle (oldVnode, vnode) {
                var data = vnode.data;
                var oldData = oldVnode.data;

                if (isUndef(data.staticStyle) && isUndef(data.style) &&
                    isUndef(oldData.staticStyle) && isUndef(oldData.style)
                ) {
                    return
                }

                var cur, name;
                var el = vnode.elm;
                var oldStaticStyle = oldData.staticStyle;
                var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

                // if static style exists, stylebinding already merged into it when doing normalizeStyleData
                var oldStyle = oldStaticStyle || oldStyleBinding;

                var style = normalizeStyleBinding(vnode.data.style) || {};

                // store normalized style under a different key for next diff
                // make sure to clone it if it's reactive, since the user likely wants
                // to mutate it.
                vnode.data.normalizedStyle = isDef(style.__ob__)
                    ? extend({}, style)
                    : style;

                var newStyle = getStyle(vnode, true);

                for (name in oldStyle) {
                    if (isUndef(newStyle[name])) {
                        setProp(el, name, '');
                    }
                }
                for (name in newStyle) {
                    cur = newStyle[name];
                    if (cur !== oldStyle[name]) {
                        // ie9 setting to null has no effect, must use empty string
                        setProp(el, name, cur == null ? '' : cur);
                    }
                }
            }

            var style = {
                create: updateStyle,
                update: updateStyle
            };

            /*  */

            var whitespaceRE = /\s+/;

            /**
             * Add class with compatibility for SVG since classList is not supported on
             * SVG elements in IE
             */
            function addClass (el, cls) {
                /* istanbul ignore if */
                if (!cls || !(cls = cls.trim())) {
                    return
                }

                /* istanbul ignore else */
                if (el.classList) {
                    if (cls.indexOf(' ') > -1) {
                        cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });
                    } else {
                        el.classList.add(cls);
                    }
                } else {
                    var cur = " " + (el.getAttribute('class') || '') + " ";
                    if (cur.indexOf(' ' + cls + ' ') < 0) {
                        el.setAttribute('class', (cur + cls).trim());
                    }
                }
            }

            /**
             * Remove class with compatibility for SVG since classList is not supported on
             * SVG elements in IE
             */
            function removeClass (el, cls) {
                /* istanbul ignore if */
                if (!cls || !(cls = cls.trim())) {
                    return
                }

                /* istanbul ignore else */
                if (el.classList) {
                    if (cls.indexOf(' ') > -1) {
                        cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });
                    } else {
                        el.classList.remove(cls);
                    }
                    if (!el.classList.length) {
                        el.removeAttribute('class');
                    }
                } else {
                    var cur = " " + (el.getAttribute('class') || '') + " ";
                    var tar = ' ' + cls + ' ';
                    while (cur.indexOf(tar) >= 0) {
                        cur = cur.replace(tar, ' ');
                    }
                    cur = cur.trim();
                    if (cur) {
                        el.setAttribute('class', cur);
                    } else {
                        el.removeAttribute('class');
                    }
                }
            }

            /*  */

            function resolveTransition (def$$1) {
                if (!def$$1) {
                    return
                }
                /* istanbul ignore else */
                if (typeof def$$1 === 'object') {
                    var res = {};
                    if (def$$1.css !== false) {
                        extend(res, autoCssTransition(def$$1.name || 'v'));
                    }
                    extend(res, def$$1);
                    return res
                } else if (typeof def$$1 === 'string') {
                    return autoCssTransition(def$$1)
                }
            }

            var autoCssTransition = cached(function (name) {
                return {
                    enterClass: (name + "-enter"),
                    enterToClass: (name + "-enter-to"),
                    enterActiveClass: (name + "-enter-active"),
                    leaveClass: (name + "-leave"),
                    leaveToClass: (name + "-leave-to"),
                    leaveActiveClass: (name + "-leave-active")
                }
            });

            var hasTransition = inBrowser && !isIE9;
            var TRANSITION = 'transition';
            var ANIMATION = 'animation';

// Transition property/event sniffing
            var transitionProp = 'transition';
            var transitionEndEvent = 'transitionend';
            var animationProp = 'animation';
            var animationEndEvent = 'animationend';
            if (hasTransition) {
                /* istanbul ignore if */
                if (window.ontransitionend === undefined &&
                    window.onwebkittransitionend !== undefined
                ) {
                    transitionProp = 'WebkitTransition';
                    transitionEndEvent = 'webkitTransitionEnd';
                }
                if (window.onanimationend === undefined &&
                    window.onwebkitanimationend !== undefined
                ) {
                    animationProp = 'WebkitAnimation';
                    animationEndEvent = 'webkitAnimationEnd';
                }
            }

// binding to window is necessary to make hot reload work in IE in strict mode
            var raf = inBrowser
                ? window.requestAnimationFrame
                    ? window.requestAnimationFrame.bind(window)
                    : setTimeout
                : /* istanbul ignore next */ function (fn) { return fn(); };

            function nextFrame (fn) {
                raf(function () {
                    raf(fn);
                });
            }

            function addTransitionClass (el, cls) {
                var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
                if (transitionClasses.indexOf(cls) < 0) {
                    transitionClasses.push(cls);
                    addClass(el, cls);
                }
            }

            function removeTransitionClass (el, cls) {
                if (el._transitionClasses) {
                    remove(el._transitionClasses, cls);
                }
                removeClass(el, cls);
            }

            function whenTransitionEnds (
                el,
                expectedType,
                cb
            ) {
                var ref = getTransitionInfo(el, expectedType);
                var type = ref.type;
                var timeout = ref.timeout;
                var propCount = ref.propCount;
                if (!type) { return cb() }
                var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
                var ended = 0;
                var end = function () {
                    el.removeEventListener(event, onEnd);
                    cb();
                };
                var onEnd = function (e) {
                    if (e.target === el) {
                        if (++ended >= propCount) {
                            end();
                        }
                    }
                };
                setTimeout(function () {
                    if (ended < propCount) {
                        end();
                    }
                }, timeout + 1);
                el.addEventListener(event, onEnd);
            }

            var transformRE = /\b(transform|all)(,|$)/;

            function getTransitionInfo (el, expectedType) {
                var styles = window.getComputedStyle(el);
                // JSDOM may return undefined for transition properties
                var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');
                var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');
                var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
                var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');
                var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');
                var animationTimeout = getTimeout(animationDelays, animationDurations);

                var type;
                var timeout = 0;
                var propCount = 0;
                /* istanbul ignore if */
                if (expectedType === TRANSITION) {
                    if (transitionTimeout > 0) {
                        type = TRANSITION;
                        timeout = transitionTimeout;
                        propCount = transitionDurations.length;
                    }
                } else if (expectedType === ANIMATION) {
                    if (animationTimeout > 0) {
                        type = ANIMATION;
                        timeout = animationTimeout;
                        propCount = animationDurations.length;
                    }
                } else {
                    timeout = Math.max(transitionTimeout, animationTimeout);
                    type = timeout > 0
                        ? transitionTimeout > animationTimeout
                            ? TRANSITION
                            : ANIMATION
                        : null;
                    propCount = type
                        ? type === TRANSITION
                            ? transitionDurations.length
                            : animationDurations.length
                        : 0;
                }
                var hasTransform =
                    type === TRANSITION &&
                    transformRE.test(styles[transitionProp + 'Property']);
                return {
                    type: type,
                    timeout: timeout,
                    propCount: propCount,
                    hasTransform: hasTransform
                }
            }

            function getTimeout (delays, durations) {
                /* istanbul ignore next */
                while (delays.length < durations.length) {
                    delays = delays.concat(delays);
                }

                return Math.max.apply(null, durations.map(function (d, i) {
                    return toMs(d) + toMs(delays[i])
                }))
            }

// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
// in a locale-dependent way, using a comma instead of a dot.
// If comma is not replaced with a dot, the input will be rounded down (i.e. acting
// as a floor function) causing unexpected behaviors
            function toMs (s) {
                return Number(s.slice(0, -1).replace(',', '.')) * 1000
            }

            /*  */

            function enter (vnode, toggleDisplay) {
                var el = vnode.elm;

                // call leave callback now
                if (isDef(el._leaveCb)) {
                    el._leaveCb.cancelled = true;
                    el._leaveCb();
                }

                var data = resolveTransition(vnode.data.transition);
                if (isUndef(data)) {
                    return
                }

                /* istanbul ignore if */
                if (isDef(el._enterCb) || el.nodeType !== 1) {
                    return
                }

                var css = data.css;
                var type = data.type;
                var enterClass = data.enterClass;
                var enterToClass = data.enterToClass;
                var enterActiveClass = data.enterActiveClass;
                var appearClass = data.appearClass;
                var appearToClass = data.appearToClass;
                var appearActiveClass = data.appearActiveClass;
                var beforeEnter = data.beforeEnter;
                var enter = data.enter;
                var afterEnter = data.afterEnter;
                var enterCancelled = data.enterCancelled;
                var beforeAppear = data.beforeAppear;
                var appear = data.appear;
                var afterAppear = data.afterAppear;
                var appearCancelled = data.appearCancelled;
                var duration = data.duration;

                // activeInstance will always be the <transition> component managing this
                // transition. One edge case to check is when the <transition> is placed
                // as the root node of a child component. In that case we need to check
                // <transition>'s parent for appear check.
                var context = activeInstance;
                var transitionNode = activeInstance.$vnode;
                while (transitionNode && transitionNode.parent) {
                    context = transitionNode.context;
                    transitionNode = transitionNode.parent;
                }

                var isAppear = !context._isMounted || !vnode.isRootInsert;

                if (isAppear && !appear && appear !== '') {
                    return
                }

                var startClass = isAppear && appearClass
                    ? appearClass
                    : enterClass;
                var activeClass = isAppear && appearActiveClass
                    ? appearActiveClass
                    : enterActiveClass;
                var toClass = isAppear && appearToClass
                    ? appearToClass
                    : enterToClass;

                var beforeEnterHook = isAppear
                    ? (beforeAppear || beforeEnter)
                    : beforeEnter;
                var enterHook = isAppear
                    ? (typeof appear === 'function' ? appear : enter)
                    : enter;
                var afterEnterHook = isAppear
                    ? (afterAppear || afterEnter)
                    : afterEnter;
                var enterCancelledHook = isAppear
                    ? (appearCancelled || enterCancelled)
                    : enterCancelled;

                var explicitEnterDuration = toNumber(
                    isObject(duration)
                        ? duration.enter
                        : duration
                );

                if ( true && explicitEnterDuration != null) {
                    checkDuration(explicitEnterDuration, 'enter', vnode);
                }

                var expectsCSS = css !== false && !isIE9;
                var userWantsControl = getHookArgumentsLength(enterHook);

                var cb = el._enterCb = once(function () {
                    if (expectsCSS) {
                        removeTransitionClass(el, toClass);
                        removeTransitionClass(el, activeClass);
                    }
                    if (cb.cancelled) {
                        if (expectsCSS) {
                            removeTransitionClass(el, startClass);
                        }
                        enterCancelledHook && enterCancelledHook(el);
                    } else {
                        afterEnterHook && afterEnterHook(el);
                    }
                    el._enterCb = null;
                });

                if (!vnode.data.show) {
                    // remove pending leave element on enter by injecting an insert hook
                    mergeVNodeHook(vnode, 'insert', function () {
                        var parent = el.parentNode;
                        var pendingNode = parent && parent._pending && parent._pending[vnode.key];
                        if (pendingNode &&
                            pendingNode.tag === vnode.tag &&
                            pendingNode.elm._leaveCb
                        ) {
                            pendingNode.elm._leaveCb();
                        }
                        enterHook && enterHook(el, cb);
                    });
                }

                // start enter transition
                beforeEnterHook && beforeEnterHook(el);
                if (expectsCSS) {
                    addTransitionClass(el, startClass);
                    addTransitionClass(el, activeClass);
                    nextFrame(function () {
                        removeTransitionClass(el, startClass);
                        if (!cb.cancelled) {
                            addTransitionClass(el, toClass);
                            if (!userWantsControl) {
                                if (isValidDuration(explicitEnterDuration)) {
                                    setTimeout(cb, explicitEnterDuration);
                                } else {
                                    whenTransitionEnds(el, type, cb);
                                }
                            }
                        }
                    });
                }

                if (vnode.data.show) {
                    toggleDisplay && toggleDisplay();
                    enterHook && enterHook(el, cb);
                }

                if (!expectsCSS && !userWantsControl) {
                    cb();
                }
            }

            function leave (vnode, rm) {
                var el = vnode.elm;

                // call enter callback now
                if (isDef(el._enterCb)) {
                    el._enterCb.cancelled = true;
                    el._enterCb();
                }

                var data = resolveTransition(vnode.data.transition);
                if (isUndef(data) || el.nodeType !== 1) {
                    return rm()
                }

                /* istanbul ignore if */
                if (isDef(el._leaveCb)) {
                    return
                }

                var css = data.css;
                var type = data.type;
                var leaveClass = data.leaveClass;
                var leaveToClass = data.leaveToClass;
                var leaveActiveClass = data.leaveActiveClass;
                var beforeLeave = data.beforeLeave;
                var leave = data.leave;
                var afterLeave = data.afterLeave;
                var leaveCancelled = data.leaveCancelled;
                var delayLeave = data.delayLeave;
                var duration = data.duration;

                var expectsCSS = css !== false && !isIE9;
                var userWantsControl = getHookArgumentsLength(leave);

                var explicitLeaveDuration = toNumber(
                    isObject(duration)
                        ? duration.leave
                        : duration
                );

                if ( true && isDef(explicitLeaveDuration)) {
                    checkDuration(explicitLeaveDuration, 'leave', vnode);
                }

                var cb = el._leaveCb = once(function () {
                    if (el.parentNode && el.parentNode._pending) {
                        el.parentNode._pending[vnode.key] = null;
                    }
                    if (expectsCSS) {
                        removeTransitionClass(el, leaveToClass);
                        removeTransitionClass(el, leaveActiveClass);
                    }
                    if (cb.cancelled) {
                        if (expectsCSS) {
                            removeTransitionClass(el, leaveClass);
                        }
                        leaveCancelled && leaveCancelled(el);
                    } else {
                        rm();
                        afterLeave && afterLeave(el);
                    }
                    el._leaveCb = null;
                });

                if (delayLeave) {
                    delayLeave(performLeave);
                } else {
                    performLeave();
                }

                function performLeave () {
                    // the delayed leave may have already been cancelled
                    if (cb.cancelled) {
                        return
                    }
                    // record leaving element
                    if (!vnode.data.show && el.parentNode) {
                        (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
                    }
                    beforeLeave && beforeLeave(el);
                    if (expectsCSS) {
                        addTransitionClass(el, leaveClass);
                        addTransitionClass(el, leaveActiveClass);
                        nextFrame(function () {
                            removeTransitionClass(el, leaveClass);
                            if (!cb.cancelled) {
                                addTransitionClass(el, leaveToClass);
                                if (!userWantsControl) {
                                    if (isValidDuration(explicitLeaveDuration)) {
                                        setTimeout(cb, explicitLeaveDuration);
                                    } else {
                                        whenTransitionEnds(el, type, cb);
                                    }
                                }
                            }
                        });
                    }
                    leave && leave(el, cb);
                    if (!expectsCSS && !userWantsControl) {
                        cb();
                    }
                }
            }

// only used in dev mode
            function checkDuration (val, name, vnode) {
                if (typeof val !== 'number') {
                    warn(
                        "<transition> explicit " + name + " duration is not a valid number - " +
                        "got " + (JSON.stringify(val)) + ".",
                        vnode.context
                    );
                } else if (isNaN(val)) {
                    warn(
                        "<transition> explicit " + name + " duration is NaN - " +
                        'the duration expression might be incorrect.',
                        vnode.context
                    );
                }
            }

            function isValidDuration (val) {
                return typeof val === 'number' && !isNaN(val)
            }

            /**
             * Normalize a transition hook's argument length. The hook may be:
             * - a merged hook (invoker) with the original in .fns
             * - a wrapped component method (check ._length)
             * - a plain function (.length)
             */
            function getHookArgumentsLength (fn) {
                if (isUndef(fn)) {
                    return false
                }
                var invokerFns = fn.fns;
                if (isDef(invokerFns)) {
                    // invoker
                    return getHookArgumentsLength(
                        Array.isArray(invokerFns)
                            ? invokerFns[0]
                            : invokerFns
                    )
                } else {
                    return (fn._length || fn.length) > 1
                }
            }

            function _enter (_, vnode) {
                if (vnode.data.show !== true) {
                    enter(vnode);
                }
            }

            var transition = inBrowser ? {
                create: _enter,
                activate: _enter,
                remove: function remove$$1 (vnode, rm) {
                    /* istanbul ignore else */
                    if (vnode.data.show !== true) {
                        leave(vnode, rm);
                    } else {
                        rm();
                    }
                }
            } : {};

            var platformModules = [
                attrs,
                klass,
                events,
                domProps,
                style,
                transition
            ];

            /*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
            var modules = platformModules.concat(baseModules);

            var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

            /**
             * Not type checking this file because flow doesn't like attaching
             * properties to Elements.
             */

            /* istanbul ignore if */
            if (isIE9) {
                // http://www.matts411.com/post/internet-explorer-9-oninput/
                document.addEventListener('selectionchange', function () {
                    var el = document.activeElement;
                    if (el && el.vmodel) {
                        trigger(el, 'input');
                    }
                });
            }

            var directive = {
                inserted: function inserted (el, binding, vnode, oldVnode) {
                    if (vnode.tag === 'select') {
                        // #6903
                        if (oldVnode.elm && !oldVnode.elm._vOptions) {
                            mergeVNodeHook(vnode, 'postpatch', function () {
                                directive.componentUpdated(el, binding, vnode);
                            });
                        } else {
                            setSelected(el, binding, vnode.context);
                        }
                        el._vOptions = [].map.call(el.options, getValue);
                    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
                        el._vModifiers = binding.modifiers;
                        if (!binding.modifiers.lazy) {
                            el.addEventListener('compositionstart', onCompositionStart);
                            el.addEventListener('compositionend', onCompositionEnd);
                            // Safari < 10.2 & UIWebView doesn't fire compositionend when
                            // switching focus before confirming composition choice
                            // this also fixes the issue where some browsers e.g. iOS Chrome
                            // fires "change" instead of "input" on autocomplete.
                            el.addEventListener('change', onCompositionEnd);
                            /* istanbul ignore if */
                            if (isIE9) {
                                el.vmodel = true;
                            }
                        }
                    }
                },

                componentUpdated: function componentUpdated (el, binding, vnode) {
                    if (vnode.tag === 'select') {
                        setSelected(el, binding, vnode.context);
                        // in case the options rendered by v-for have changed,
                        // it's possible that the value is out-of-sync with the rendered options.
                        // detect such cases and filter out values that no longer has a matching
                        // option in the DOM.
                        var prevOptions = el._vOptions;
                        var curOptions = el._vOptions = [].map.call(el.options, getValue);
                        if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
                            // trigger change event if
                            // no matching option found for at least one value
                            var needReset = el.multiple
                                ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
                                : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
                            if (needReset) {
                                trigger(el, 'change');
                            }
                        }
                    }
                }
            };

            function setSelected (el, binding, vm) {
                actuallySetSelected(el, binding, vm);
                /* istanbul ignore if */
                if (isIE || isEdge) {
                    setTimeout(function () {
                        actuallySetSelected(el, binding, vm);
                    }, 0);
                }
            }

            function actuallySetSelected (el, binding, vm) {
                var value = binding.value;
                var isMultiple = el.multiple;
                if (isMultiple && !Array.isArray(value)) {
                    true && warn(
                        "<select multiple v-model=\"" + (binding.expression) + "\"> " +
                        "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
                        vm
                    );
                    return
                }
                var selected, option;
                for (var i = 0, l = el.options.length; i < l; i++) {
                    option = el.options[i];
                    if (isMultiple) {
                        selected = looseIndexOf(value, getValue(option)) > -1;
                        if (option.selected !== selected) {
                            option.selected = selected;
                        }
                    } else {
                        if (looseEqual(getValue(option), value)) {
                            if (el.selectedIndex !== i) {
                                el.selectedIndex = i;
                            }
                            return
                        }
                    }
                }
                if (!isMultiple) {
                    el.selectedIndex = -1;
                }
            }

            function hasNoMatchingOption (value, options) {
                return options.every(function (o) { return !looseEqual(o, value); })
            }

            function getValue (option) {
                return '_value' in option
                    ? option._value
                    : option.value
            }

            function onCompositionStart (e) {
                e.target.composing = true;
            }

            function onCompositionEnd (e) {
                // prevent triggering an input event for no reason
                if (!e.target.composing) { return }
                e.target.composing = false;
                trigger(e.target, 'input');
            }

            function trigger (el, type) {
                var e = document.createEvent('HTMLEvents');
                e.initEvent(type, true, true);
                el.dispatchEvent(e);
            }

            /*  */

// recursively search for possible transition defined inside the component root
            function locateNode (vnode) {
                return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
                    ? locateNode(vnode.componentInstance._vnode)
                    : vnode
            }

            var show = {
                bind: function bind (el, ref, vnode) {
                    var value = ref.value;

                    vnode = locateNode(vnode);
                    var transition$$1 = vnode.data && vnode.data.transition;
                    var originalDisplay = el.__vOriginalDisplay =
                        el.style.display === 'none' ? '' : el.style.display;
                    if (value && transition$$1) {
                        vnode.data.show = true;
                        enter(vnode, function () {
                            el.style.display = originalDisplay;
                        });
                    } else {
                        el.style.display = value ? originalDisplay : 'none';
                    }
                },

                update: function update (el, ref, vnode) {
                    var value = ref.value;
                    var oldValue = ref.oldValue;

                    /* istanbul ignore if */
                    if (!value === !oldValue) { return }
                    vnode = locateNode(vnode);
                    var transition$$1 = vnode.data && vnode.data.transition;
                    if (transition$$1) {
                        vnode.data.show = true;
                        if (value) {
                            enter(vnode, function () {
                                el.style.display = el.__vOriginalDisplay;
                            });
                        } else {
                            leave(vnode, function () {
                                el.style.display = 'none';
                            });
                        }
                    } else {
                        el.style.display = value ? el.__vOriginalDisplay : 'none';
                    }
                },

                unbind: function unbind (
                    el,
                    binding,
                    vnode,
                    oldVnode,
                    isDestroy
                ) {
                    if (!isDestroy) {
                        el.style.display = el.__vOriginalDisplay;
                    }
                }
            };

            var platformDirectives = {
                model: directive,
                show: show
            };

            /*  */

            var transitionProps = {
                name: String,
                appear: Boolean,
                css: Boolean,
                mode: String,
                type: String,
                enterClass: String,
                leaveClass: String,
                enterToClass: String,
                leaveToClass: String,
                enterActiveClass: String,
                leaveActiveClass: String,
                appearClass: String,
                appearActiveClass: String,
                appearToClass: String,
                duration: [Number, String, Object]
            };

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
            function getRealChild (vnode) {
                var compOptions = vnode && vnode.componentOptions;
                if (compOptions && compOptions.Ctor.options.abstract) {
                    return getRealChild(getFirstComponentChild(compOptions.children))
                } else {
                    return vnode
                }
            }

            function extractTransitionData (comp) {
                var data = {};
                var options = comp.$options;
                // props
                for (var key in options.propsData) {
                    data[key] = comp[key];
                }
                // events.
                // extract listeners and pass them directly to the transition methods
                var listeners = options._parentListeners;
                for (var key$1 in listeners) {
                    data[camelize(key$1)] = listeners[key$1];
                }
                return data
            }

            function placeholder (h, rawChild) {
                if (/\d-keep-alive$/.test(rawChild.tag)) {
                    return h('keep-alive', {
                        props: rawChild.componentOptions.propsData
                    })
                }
            }

            function hasParentTransition (vnode) {
                while ((vnode = vnode.parent)) {
                    if (vnode.data.transition) {
                        return true
                    }
                }
            }

            function isSameChild (child, oldChild) {
                return oldChild.key === child.key && oldChild.tag === child.tag
            }

            var isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };

            var isVShowDirective = function (d) { return d.name === 'show'; };

            var Transition = {
                name: 'transition',
                props: transitionProps,
                abstract: true,

                render: function render (h) {
                    var this$1 = this;

                    var children = this.$slots.default;
                    if (!children) {
                        return
                    }

                    // filter out text nodes (possible whitespaces)
                    children = children.filter(isNotTextNode);
                    /* istanbul ignore if */
                    if (!children.length) {
                        return
                    }

                    // warn multiple elements
                    if ( true && children.length > 1) {
                        warn(
                            '<transition> can only be used on a single element. Use ' +
                            '<transition-group> for lists.',
                            this.$parent
                        );
                    }

                    var mode = this.mode;

                    // warn invalid mode
                    if ( true &&
                        mode && mode !== 'in-out' && mode !== 'out-in'
                    ) {
                        warn(
                            'invalid <transition> mode: ' + mode,
                            this.$parent
                        );
                    }

                    var rawChild = children[0];

                    // if this is a component root node and the component's
                    // parent container node also has transition, skip.
                    if (hasParentTransition(this.$vnode)) {
                        return rawChild
                    }

                    // apply transition data to child
                    // use getRealChild() to ignore abstract components e.g. keep-alive
                    var child = getRealChild(rawChild);
                    /* istanbul ignore if */
                    if (!child) {
                        return rawChild
                    }

                    if (this._leaving) {
                        return placeholder(h, rawChild)
                    }

                    // ensure a key that is unique to the vnode type and to this transition
                    // component instance. This key will be used to remove pending leaving nodes
                    // during entering.
                    var id = "__transition-" + (this._uid) + "-";
                    child.key = child.key == null
                        ? child.isComment
                            ? id + 'comment'
                            : id + child.tag
                        : isPrimitive(child.key)
                            ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
                            : child.key;

                    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
                    var oldRawChild = this._vnode;
                    var oldChild = getRealChild(oldRawChild);

                    // mark v-show
                    // so that the transition module can hand over the control to the directive
                    if (child.data.directives && child.data.directives.some(isVShowDirective)) {
                        child.data.show = true;
                    }

                    if (
                        oldChild &&
                        oldChild.data &&
                        !isSameChild(child, oldChild) &&
                        !isAsyncPlaceholder(oldChild) &&
                        // #6687 component root is a comment node
                        !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
                    ) {
                        // replace old child transition data with fresh one
                        // important for dynamic transitions!
                        var oldData = oldChild.data.transition = extend({}, data);
                        // handle transition mode
                        if (mode === 'out-in') {
                            // return placeholder node and queue update when leave finishes
                            this._leaving = true;
                            mergeVNodeHook(oldData, 'afterLeave', function () {
                                this$1._leaving = false;
                                this$1.$forceUpdate();
                            });
                            return placeholder(h, rawChild)
                        } else if (mode === 'in-out') {
                            if (isAsyncPlaceholder(child)) {
                                return oldRawChild
                            }
                            var delayedLeave;
                            var performLeave = function () { delayedLeave(); };
                            mergeVNodeHook(data, 'afterEnter', performLeave);
                            mergeVNodeHook(data, 'enterCancelled', performLeave);
                            mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
                        }
                    }

                    return rawChild
                }
            };

            /*  */

            var props = extend({
                tag: String,
                moveClass: String
            }, transitionProps);

            delete props.mode;

            var TransitionGroup = {
                props: props,

                beforeMount: function beforeMount () {
                    var this$1 = this;

                    var update = this._update;
                    this._update = function (vnode, hydrating) {
                        var restoreActiveInstance = setActiveInstance(this$1);
                        // force removing pass
                        this$1.__patch__(
                            this$1._vnode,
                            this$1.kept,
                            false, // hydrating
                            true // removeOnly (!important, avoids unnecessary moves)
                        );
                        this$1._vnode = this$1.kept;
                        restoreActiveInstance();
                        update.call(this$1, vnode, hydrating);
                    };
                },

                render: function render (h) {
                    var tag = this.tag || this.$vnode.data.tag || 'span';
                    var map = Object.create(null);
                    var prevChildren = this.prevChildren = this.children;
                    var rawChildren = this.$slots.default || [];
                    var children = this.children = [];
                    var transitionData = extractTransitionData(this);

                    for (var i = 0; i < rawChildren.length; i++) {
                        var c = rawChildren[i];
                        if (c.tag) {
                            if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
                                children.push(c);
                                map[c.key] = c
                                ;(c.data || (c.data = {})).transition = transitionData;
                            } else if (true) {
                                var opts = c.componentOptions;
                                var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
                                warn(("<transition-group> children must be keyed: <" + name + ">"));
                            }
                        }
                    }

                    if (prevChildren) {
                        var kept = [];
                        var removed = [];
                        for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
                            var c$1 = prevChildren[i$1];
                            c$1.data.transition = transitionData;
                            c$1.data.pos = c$1.elm.getBoundingClientRect();
                            if (map[c$1.key]) {
                                kept.push(c$1);
                            } else {
                                removed.push(c$1);
                            }
                        }
                        this.kept = h(tag, null, kept);
                        this.removed = removed;
                    }

                    return h(tag, null, children)
                },

                updated: function updated () {
                    var children = this.prevChildren;
                    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
                    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
                        return
                    }

                    // we divide the work into three loops to avoid mixing DOM reads and writes
                    // in each iteration - which helps prevent layout thrashing.
                    children.forEach(callPendingCbs);
                    children.forEach(recordPosition);
                    children.forEach(applyTranslation);

                    // force reflow to put everything in position
                    // assign to this to avoid being removed in tree-shaking
                    // $flow-disable-line
                    this._reflow = document.body.offsetHeight;

                    children.forEach(function (c) {
                        if (c.data.moved) {
                            var el = c.elm;
                            var s = el.style;
                            addTransitionClass(el, moveClass);
                            s.transform = s.WebkitTransform = s.transitionDuration = '';
                            el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
                                if (e && e.target !== el) {
                                    return
                                }
                                if (!e || /transform$/.test(e.propertyName)) {
                                    el.removeEventListener(transitionEndEvent, cb);
                                    el._moveCb = null;
                                    removeTransitionClass(el, moveClass);
                                }
                            });
                        }
                    });
                },

                methods: {
                    hasMove: function hasMove (el, moveClass) {
                        /* istanbul ignore if */
                        if (!hasTransition) {
                            return false
                        }
                        /* istanbul ignore if */
                        if (this._hasMove) {
                            return this._hasMove
                        }
                        // Detect whether an element with the move class applied has
                        // CSS transitions. Since the element may be inside an entering
                        // transition at this very moment, we make a clone of it and remove
                        // all other transition classes applied to ensure only the move class
                        // is applied.
                        var clone = el.cloneNode();
                        if (el._transitionClasses) {
                            el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
                        }
                        addClass(clone, moveClass);
                        clone.style.display = 'none';
                        this.$el.appendChild(clone);
                        var info = getTransitionInfo(clone);
                        this.$el.removeChild(clone);
                        return (this._hasMove = info.hasTransform)
                    }
                }
            };

            function callPendingCbs (c) {
                /* istanbul ignore if */
                if (c.elm._moveCb) {
                    c.elm._moveCb();
                }
                /* istanbul ignore if */
                if (c.elm._enterCb) {
                    c.elm._enterCb();
                }
            }

            function recordPosition (c) {
                c.data.newPos = c.elm.getBoundingClientRect();
            }

            function applyTranslation (c) {
                var oldPos = c.data.pos;
                var newPos = c.data.newPos;
                var dx = oldPos.left - newPos.left;
                var dy = oldPos.top - newPos.top;
                if (dx || dy) {
                    c.data.moved = true;
                    var s = c.elm.style;
                    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
                    s.transitionDuration = '0s';
                }
            }

            var platformComponents = {
                Transition: Transition,
                TransitionGroup: TransitionGroup
            };

            /*  */

// install platform specific utils
            Vue.config.mustUseProp = mustUseProp;
            Vue.config.isReservedTag = isReservedTag;
            Vue.config.isReservedAttr = isReservedAttr;
            Vue.config.getTagNamespace = getTagNamespace;
            Vue.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
            extend(Vue.options.directives, platformDirectives);
            extend(Vue.options.components, platformComponents);

// install platform patch function
            Vue.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
            Vue.prototype.$mount = function (
                el,
                hydrating
            ) {
                el = el && inBrowser ? query(el) : undefined;
                return mountComponent(this, el, hydrating)
            };

// devtools global hook
            /* istanbul ignore next */
            if (inBrowser) {
                setTimeout(function () {
                    if (config.devtools) {
                        if (devtools) {
                            devtools.emit('init', Vue);
                        } else if (
                            true
                        ) {
                            console[console.info ? 'info' : 'log'](
                                'Download the Vue Devtools extension for a better development experience:\n' +
                                'https://github.com/vuejs/vue-devtools'
                            );
                        }
                    }
                    if ( true &&
                        config.productionTip !== false &&
                        typeof console !== 'undefined'
                    ) {
                        console[console.info ? 'info' : 'log'](
                            "You are running Vue in development mode.\n" +
                            "Make sure to turn on production mode when deploying for production.\n" +
                            "See more tips at https://vuejs.org/guide/deployment.html"
                        );
                    }
                }, 0);
            }

            /*  */

            /* harmony default export */ __webpack_exports__["default"] = (Vue);

            /* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../timers-browserify/main.js */ "./node_modules/timers-browserify/main.js").setImmediate))

        /***/ }),

    /***/ "./node_modules/webpack-dev-server/client/index.js?http://localhost:8080":
    /*!*********************************************************!*\
  !*** (webpack)-dev-server/client?http://localhost:8080 ***!
  \*********************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */(function(__resourceQuery) {
            /* global __resourceQuery WorkerGlobalScope self */

            /* eslint prefer-destructuring: off */

            var querystring = __webpack_require__(/*! querystring */ "./node_modules/querystring-es3/index.js");

            var url = __webpack_require__(/*! url */ "./node_modules/url/url.js");

            var stripAnsi = __webpack_require__(/*! strip-ansi */ "./node_modules/strip-ansi/index.js");

            var log = __webpack_require__(/*! loglevel */ "./node_modules/loglevel/lib/loglevel.js").getLogger('webpack-dev-server');

            var socket = __webpack_require__(/*! ./socket */ "./node_modules/webpack-dev-server/client/socket.js");

            var overlay = __webpack_require__(/*! ./overlay */ "./node_modules/webpack-dev-server/client/overlay.js");

            function getCurrentScriptSource() {
                // `document.currentScript` is the most accurate way to find the current script,
                // but is not supported in all browsers.
                if (document.currentScript) {
                    return document.currentScript.getAttribute('src');
                } // Fall back to getting all scripts in the document.


                var scriptElements = document.scripts || [];
                var currentScript = scriptElements[scriptElements.length - 1];

                if (currentScript) {
                    return currentScript.getAttribute('src');
                } // Fail as there was no script to use.


                throw new Error('[WDS] Failed to get current script source.');
            }

            var urlParts;
            var hotReload = true;

            if (typeof window !== 'undefined') {
                var qs = window.location.search.toLowerCase();
                hotReload = qs.indexOf('hotreload=false') === -1;
            }

            if (true) {
                // If this bundle is inlined, use the resource query to get the correct url.
                urlParts = url.parse(__resourceQuery.substr(1));
            } else { var scriptHost; }

            if (!urlParts.port || urlParts.port === '0') {
                urlParts.port = self.location.port;
            }

            var _hot = false;
            var initial = true;
            var currentHash = '';
            var useWarningOverlay = false;
            var useErrorOverlay = false;
            var useProgress = false;
            var INFO = 'info';
            var WARNING = 'warning';
            var ERROR = 'error';
            var NONE = 'none'; // Set the default log level

            log.setDefaultLevel(INFO); // Send messages to the outside, so plugins can consume it.

            function sendMsg(type, data) {
                if (typeof self !== 'undefined' && (typeof WorkerGlobalScope === 'undefined' || !(self instanceof WorkerGlobalScope))) {
                    self.postMessage({
                        type: "webpack".concat(type),
                        data: data
                    }, '*');
                }
            }

            var onSocketMsg = {
                hot: function hot() {
                    _hot = true;
                    log.info('[WDS] Hot Module Replacement enabled.');
                },
                invalid: function invalid() {
                    log.info('[WDS] App updated. Recompiling...'); // fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.

                    if (useWarningOverlay || useErrorOverlay) overlay.clear();
                    sendMsg('Invalid');
                },
                hash: function hash(_hash) {
                    currentHash = _hash;
                },
                'still-ok': function stillOk() {
                    log.info('[WDS] Nothing changed.');
                    if (useWarningOverlay || useErrorOverlay) overlay.clear();
                    sendMsg('StillOk');
                },
                'log-level': function logLevel(level) {
                    var hotCtx = __webpack_require__("./node_modules/webpack/hot sync ^\\.\\/log$");

                    if (hotCtx.keys().indexOf('./log') !== -1) {
                        hotCtx('./log').setLogLevel(level);
                    }

                    switch (level) {
                        case INFO:
                        case ERROR:
                            log.setLevel(level);
                            break;

                        case WARNING:
                            // loglevel's warning name is different from webpack's
                            log.setLevel('warn');
                            break;

                        case NONE:
                            log.disableAll();
                            break;

                        default:
                            log.error("[WDS] Unknown clientLogLevel '".concat(level, "'"));
                    }
                },
                overlay: function overlay(value) {
                    if (typeof document !== 'undefined') {
                        if (typeof value === 'boolean') {
                            useWarningOverlay = false;
                            useErrorOverlay = value;
                        } else if (value) {
                            useWarningOverlay = value.warnings;
                            useErrorOverlay = value.errors;
                        }
                    }
                },
                progress: function progress(_progress) {
                    if (typeof document !== 'undefined') {
                        useProgress = _progress;
                    }
                },
                'progress-update': function progressUpdate(data) {
                    if (useProgress) log.info("[WDS] ".concat(data.percent, "% - ").concat(data.msg, "."));
                    sendMsg('Progress', data);
                },
                ok: function ok() {
                    sendMsg('Ok');
                    if (useWarningOverlay || useErrorOverlay) overlay.clear();
                    if (initial) return initial = false; // eslint-disable-line no-return-assign

                    reloadApp();
                },
                'content-changed': function contentChanged() {
                    log.info('[WDS] Content base changed. Reloading...');
                    self.location.reload();
                },
                warnings: function warnings(_warnings) {
                    log.warn('[WDS] Warnings while compiling.');

                    var strippedWarnings = _warnings.map(function (warning) {
                        return stripAnsi(warning);
                    });

                    sendMsg('Warnings', strippedWarnings);

                    for (var i = 0; i < strippedWarnings.length; i++) {
                        log.warn(strippedWarnings[i]);
                    }

                    if (useWarningOverlay) overlay.showMessage(_warnings);
                    if (initial) return initial = false; // eslint-disable-line no-return-assign

                    reloadApp();
                },
                errors: function errors(_errors) {
                    log.error('[WDS] Errors while compiling. Reload prevented.');

                    var strippedErrors = _errors.map(function (error) {
                        return stripAnsi(error);
                    });

                    sendMsg('Errors', strippedErrors);

                    for (var i = 0; i < strippedErrors.length; i++) {
                        log.error(strippedErrors[i]);
                    }

                    if (useErrorOverlay) overlay.showMessage(_errors);
                    initial = false;
                },
                error: function error(_error) {
                    log.error(_error);
                },
                close: function close() {
                    log.error('[WDS] Disconnected!');
                    sendMsg('Close');
                }
            };
            var hostname = urlParts.hostname;
            var protocol = urlParts.protocol; // check ipv4 and ipv6 `all hostname`

            if (hostname === '0.0.0.0' || hostname === '::') {
                // why do we need this check?
                // hostname n/a for file protocol (example, when using electron, ionic)
                // see: https://github.com/webpack/webpack-dev-server/pull/384
                // eslint-disable-next-line no-bitwise
                if (self.location.hostname && !!~self.location.protocol.indexOf('http')) {
                    hostname = self.location.hostname;
                }
            } // `hostname` can be empty when the script path is relative. In that case, specifying
// a protocol would result in an invalid URL.
// When https is used in the app, secure websockets are always necessary
// because the browser doesn't accept non-secure websockets.


            if (hostname && (self.location.protocol === 'https:' || urlParts.hostname === '0.0.0.0')) {
                protocol = self.location.protocol;
            }

            var socketUrl = url.format({
                protocol: protocol,
                auth: urlParts.auth,
                hostname: hostname,
                port: urlParts.port,
                // If sockPath is provided it'll be passed in via the __resourceQuery as a
                // query param so it has to be parsed out of the querystring in order for the
                // client to open the socket to the correct location.
                pathname: urlParts.path == null || urlParts.path === '/' ? '/sockjs-node' : querystring.parse(urlParts.path).sockPath || urlParts.path
            });
            socket(socketUrl, onSocketMsg);
            var isUnloading = false;
            self.addEventListener('beforeunload', function () {
                isUnloading = true;
            });

            function reloadApp() {
                if (isUnloading || !hotReload) {
                    return;
                }

                if (_hot) {
                    log.info('[WDS] App hot update...'); // eslint-disable-next-line global-require

                    var hotEmitter = __webpack_require__(/*! webpack/hot/emitter */ "./node_modules/webpack/hot/emitter.js");

                    hotEmitter.emit('webpackHotUpdate', currentHash);

                    if (typeof self !== 'undefined' && self.window) {
                        // broadcast update to window
                        self.postMessage("webpackHotUpdate".concat(currentHash), '*');
                    }
                } else {
                    var rootWindow = self; // use parent window for reload (in case we're in an iframe with no valid src)

                    var intervalId = self.setInterval(function () {
                        if (rootWindow.location.protocol !== 'about:') {
                            // reload immediately if protocol is valid
                            applyReload(rootWindow, intervalId);
                        } else {
                            rootWindow = rootWindow.parent;

                            if (rootWindow.parent === rootWindow) {
                                // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways
                                applyReload(rootWindow, intervalId);
                            }
                        }
                    });
                }

                function applyReload(rootWindow, intervalId) {
                    clearInterval(intervalId);
                    log.info('[WDS] App updated. Reloading...');
                    rootWindow.location.reload();
                }
            }
            /* WEBPACK VAR INJECTION */}.call(this, "?http://localhost:8080"))

        /***/ }),

    /***/ "./node_modules/webpack-dev-server/client/overlay.js":
    /*!**********************************************!*\
  !*** (webpack)-dev-server/client/overlay.js ***!
  \**********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";
        // The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)
// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).

        var ansiHTML = __webpack_require__(/*! ansi-html */ "./node_modules/ansi-html/index.js");

        var Entities = __webpack_require__(/*! html-entities */ "./node_modules/html-entities/index.js").AllHtmlEntities;

        var entities = new Entities();
        var colors = {
            reset: ['transparent', 'transparent'],
            black: '181818',
            red: 'E36049',
            green: 'B3CB74',
            yellow: 'FFD080',
            blue: '7CAFC2',
            magenta: '7FACCA',
            cyan: 'C3C2EF',
            lightgrey: 'EBE7E3',
            darkgrey: '6D7891'
        };
        ansiHTML.setColors(colors);

        function createOverlayIframe(onIframeLoad) {
            var iframe = document.createElement('iframe');
            iframe.id = 'webpack-dev-server-client-overlay';
            iframe.src = 'about:blank';
            iframe.style.position = 'fixed';
            iframe.style.left = 0;
            iframe.style.top = 0;
            iframe.style.right = 0;
            iframe.style.bottom = 0;
            iframe.style.width = '100vw';
            iframe.style.height = '100vh';
            iframe.style.border = 'none';
            iframe.style.zIndex = 9999999999;
            iframe.onload = onIframeLoad;
            return iframe;
        }

        function addOverlayDivTo(iframe) {
            var div = iframe.contentDocument.createElement('div');
            div.id = 'webpack-dev-server-client-overlay-div';
            div.style.position = 'fixed';
            div.style.boxSizing = 'border-box';
            div.style.left = 0;
            div.style.top = 0;
            div.style.right = 0;
            div.style.bottom = 0;
            div.style.width = '100vw';
            div.style.height = '100vh';
            div.style.backgroundColor = 'rgba(0, 0, 0, 0.85)';
            div.style.color = '#E8E8E8';
            div.style.fontFamily = 'Menlo, Consolas, monospace';
            div.style.fontSize = 'large';
            div.style.padding = '2rem';
            div.style.lineHeight = '1.2';
            div.style.whiteSpace = 'pre-wrap';
            div.style.overflow = 'auto';
            iframe.contentDocument.body.appendChild(div);
            return div;
        }

        var overlayIframe = null;
        var overlayDiv = null;
        var lastOnOverlayDivReady = null;

        function ensureOverlayDivExists(onOverlayDivReady) {
            if (overlayDiv) {
                // Everything is ready, call the callback right away.
                onOverlayDivReady(overlayDiv);
                return;
            } // Creating an iframe may be asynchronous so we'll schedule the callback.
            // In case of multiple calls, last callback wins.


            lastOnOverlayDivReady = onOverlayDivReady;

            if (overlayIframe) {
                // We're already creating it.
                return;
            } // Create iframe and, when it is ready, a div inside it.


            overlayIframe = createOverlayIframe(function () {
                overlayDiv = addOverlayDivTo(overlayIframe); // Now we can talk!

                lastOnOverlayDivReady(overlayDiv);
            }); // Zalgo alert: onIframeLoad() will be called either synchronously
            // or asynchronously depending on the browser.
            // We delay adding it so `overlayIframe` is set when `onIframeLoad` fires.

            document.body.appendChild(overlayIframe);
        }

        function showMessageOverlay(message) {
            ensureOverlayDivExists(function (div) {
                // Make it look similar to our terminal.
                div.innerHTML = "<span style=\"color: #".concat(colors.red, "\">Failed to compile.</span><br><br>").concat(ansiHTML(entities.encode(message)));
            });
        }

        function destroyErrorOverlay() {
            if (!overlayDiv) {
                // It is not there in the first place.
                return;
            } // Clean up and reset internal state.


            document.body.removeChild(overlayIframe);
            overlayDiv = null;
            overlayIframe = null;
            lastOnOverlayDivReady = null;
        } // Successful compilation.


        exports.clear = function handleSuccess() {
            destroyErrorOverlay();
        }; // Compilation with errors (e.g. syntax error or missing modules).


        exports.showMessage = function handleMessage(messages) {
            showMessageOverlay(messages[0]);
        };

        /***/ }),

    /***/ "./node_modules/webpack-dev-server/client/socket.js":
    /*!*********************************************!*\
  !*** (webpack)-dev-server/client/socket.js ***!
  \*********************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        "use strict";


        var SockJS = __webpack_require__(/*! sockjs-client/dist/sockjs */ "./node_modules/sockjs-client/dist/sockjs.js");

        var retries = 0;
        var sock = null;

        var socket = function initSocket(url, handlers) {
            sock = new SockJS(url);

            sock.onopen = function onopen() {
                retries = 0;
            };

            sock.onclose = function onclose() {
                if (retries === 0) {
                    handlers.close();
                } // Try to reconnect.


                sock = null; // After 10 retries stop trying, to prevent logspam.

                if (retries <= 10) {
                    // Exponentially increase timeout to reconnect.
                    // Respectfully copied from the package `got`.
                    // eslint-disable-next-line no-mixed-operators, no-restricted-properties
                    var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;
                    retries += 1;
                    setTimeout(function () {
                        socket(url, handlers);
                    }, retryInMs);
                }
            };

            sock.onmessage = function onmessage(e) {
                // This assumes that all data sent via the websocket is JSON.
                var msg = JSON.parse(e.data);

                if (handlers[msg.type]) {
                    handlers[msg.type](msg.data);
                }
            };
        };

        module.exports = socket;

        /***/ }),

    /***/ "./node_modules/webpack/buildin/global.js":
    /*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        var g;

// This works in non-strict mode
        g = (function() {
            return this;
        })();

        try {
            // This works if eval is allowed (see CSP)
            g = g || new Function("return this")();
        } catch (e) {
            // This works if the window reference is available
            if (typeof window === "object") g = window;
        }

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

        module.exports = g;


        /***/ }),

    /***/ "./node_modules/webpack/buildin/module.js":
    /*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        module.exports = function(module) {
            if (!module.webpackPolyfill) {
                module.deprecate = function() {};
                module.paths = [];
                // module.parent = undefined by default
                if (!module.children) module.children = [];
                Object.defineProperty(module, "loaded", {
                    enumerable: true,
                    get: function() {
                        return module.l;
                    }
                });
                Object.defineProperty(module, "id", {
                    enumerable: true,
                    get: function() {
                        return module.i;
                    }
                });
                module.webpackPolyfill = 1;
            }
            return module;
        };


        /***/ }),

    /***/ "./node_modules/webpack/hot sync ^\\.\\/log$":
    /*!*************************************************!*\
  !*** (webpack)/hot sync nonrecursive ^\.\/log$ ***!
  \*************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var map = {
            "./log": "./node_modules/webpack/hot/log.js"
        };


        function webpackContext(req) {
            var id = webpackContextResolve(req);
            return __webpack_require__(id);
        }
        function webpackContextResolve(req) {
            if(!__webpack_require__.o(map, req)) {
                var e = new Error("Cannot find module '" + req + "'");
                e.code = 'MODULE_NOT_FOUND';
                throw e;
            }
            return map[req];
        }
        webpackContext.keys = function webpackContextKeys() {
            return Object.keys(map);
        };
        webpackContext.resolve = webpackContextResolve;
        module.exports = webpackContext;
        webpackContext.id = "./node_modules/webpack/hot sync ^\\.\\/log$";

        /***/ }),

    /***/ "./node_modules/webpack/hot/dev-server.js":
    /*!***********************************!*\
  !*** (webpack)/hot/dev-server.js ***!
  \***********************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        /*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
        /*globals window __webpack_hash__ */
        if (true) {
            var lastHash;
            var upToDate = function upToDate() {
                return lastHash.indexOf(__webpack_require__.h()) >= 0;
            };
            var log = __webpack_require__(/*! ./log */ "./node_modules/webpack/hot/log.js");
            var check = function check() {
                module.hot
                    .check(true)
                    .then(function(updatedModules) {
                        if (!updatedModules) {
                            log("warning", "[HMR] Cannot find update. Need to do a full reload!");
                            log(
                                "warning",
                                "[HMR] (Probably because of restarting the webpack-dev-server)"
                            );
                            window.location.reload();
                            return;
                        }

                        if (!upToDate()) {
                            check();
                        }

                        __webpack_require__(/*! ./log-apply-result */ "./node_modules/webpack/hot/log-apply-result.js")(updatedModules, updatedModules);

                        if (upToDate()) {
                            log("info", "[HMR] App is up to date.");
                        }
                    })
                    .catch(function(err) {
                        var status = module.hot.status();
                        if (["abort", "fail"].indexOf(status) >= 0) {
                            log(
                                "warning",
                                "[HMR] Cannot apply update. Need to do a full reload!"
                            );
                            log("warning", "[HMR] " + (err.stack || err.message));
                            window.location.reload();
                        } else {
                            log("warning", "[HMR] Update failed: " + (err.stack || err.message));
                        }
                    });
            };
            var hotEmitter = __webpack_require__(/*! ./emitter */ "./node_modules/webpack/hot/emitter.js");
            hotEmitter.on("webpackHotUpdate", function(currentHash) {
                lastHash = currentHash;
                if (!upToDate() && module.hot.status() === "idle") {
                    log("info", "[HMR] Checking for updates on the server...");
                    check();
                }
            });
            log("info", "[HMR] Waiting for update signal from WDS...");
        } else {}


        /***/ }),

    /***/ "./node_modules/webpack/hot/emitter.js":
    /*!********************************!*\
  !*** (webpack)/hot/emitter.js ***!
  \********************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        var EventEmitter = __webpack_require__(/*! events */ "./node_modules/events/events.js");
        module.exports = new EventEmitter();


        /***/ }),

    /***/ "./node_modules/webpack/hot/log-apply-result.js":
    /*!*****************************************!*\
  !*** (webpack)/hot/log-apply-result.js ***!
  \*****************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        /*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
        module.exports = function(updatedModules, renewedModules) {
            var unacceptedModules = updatedModules.filter(function(moduleId) {
                return renewedModules && renewedModules.indexOf(moduleId) < 0;
            });
            var log = __webpack_require__(/*! ./log */ "./node_modules/webpack/hot/log.js");

            if (unacceptedModules.length > 0) {
                log(
                    "warning",
                    "[HMR] The following modules couldn't be hot updated: (They would need a full reload!)"
                );
                unacceptedModules.forEach(function(moduleId) {
                    log("warning", "[HMR]  - " + moduleId);
                });
            }

            if (!renewedModules || renewedModules.length === 0) {
                log("info", "[HMR] Nothing hot updated.");
            } else {
                log("info", "[HMR] Updated modules:");
                renewedModules.forEach(function(moduleId) {
                    if (typeof moduleId === "string" && moduleId.indexOf("!") !== -1) {
                        var parts = moduleId.split("!");
                        log.groupCollapsed("info", "[HMR]  - " + parts.pop());
                        log("info", "[HMR]  - " + moduleId);
                        log.groupEnd("info");
                    } else {
                        log("info", "[HMR]  - " + moduleId);
                    }
                });
                var numberIds = renewedModules.every(function(moduleId) {
                    return typeof moduleId === "number";
                });
                if (numberIds)
                    log(
                        "info",
                        "[HMR] Consider using the NamedModulesPlugin for module names."
                    );
            }
        };


        /***/ }),

    /***/ "./node_modules/webpack/hot/log.js":
    /*!****************************!*\
  !*** (webpack)/hot/log.js ***!
  \****************************/
    /*! no static exports found */
    /***/ (function(module, exports) {

        var logLevel = "info";

        function dummy() {}

        function shouldLog(level) {
            var shouldLog =
                (logLevel === "info" && level === "info") ||
                (["info", "warning"].indexOf(logLevel) >= 0 && level === "warning") ||
                (["info", "warning", "error"].indexOf(logLevel) >= 0 && level === "error");
            return shouldLog;
        }

        function logGroup(logFn) {
            return function(level, msg) {
                if (shouldLog(level)) {
                    logFn(msg);
                }
            };
        }

        module.exports = function(level, msg) {
            if (shouldLog(level)) {
                if (level === "info") {
                    console.log(msg);
                } else if (level === "warning") {
                    console.warn(msg);
                } else if (level === "error") {
                    console.error(msg);
                }
            }
        };

        /* eslint-disable node/no-unsupported-features/node-builtins */
        var group = console.group || dummy;
        var groupCollapsed = console.groupCollapsed || dummy;
        var groupEnd = console.groupEnd || dummy;
        /* eslint-enable node/no-unsupported-features/node-builtins */

        module.exports.group = logGroup(group);

        module.exports.groupCollapsed = logGroup(groupCollapsed);

        module.exports.groupEnd = logGroup(groupEnd);

        module.exports.setLogLevel = function(level) {
            logLevel = level;
        };


        /***/ }),

    /***/ "./src/fonts/bebasneuebold.ttf":
    /*!*************************************!*\
  !*** ./src/fonts/bebasneuebold.ttf ***!
  \*************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneueboldf9ac6aa4b2131d508222210d17472c7c.ttf";

        /***/ }),

    /***/ "./src/fonts/bebasneuebold.woff":
    /*!**************************************!*\
  !*** ./src/fonts/bebasneuebold.woff ***!
  \**************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneuebold4fe547e590fd5bd21c8a532fe81990f9.woff";

        /***/ }),

    /***/ "./src/fonts/bebasneuebold.woff2":
    /*!***************************************!*\
  !*** ./src/fonts/bebasneuebold.woff2 ***!
  \***************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneuebold504fc5bac38e58baef29b83cbd57f126.woff2";

        /***/ }),

    /***/ "./src/fonts/bebasneuebook.ttf":
    /*!*************************************!*\
  !*** ./src/fonts/bebasneuebook.ttf ***!
  \*************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneuebook682d7d56abc15c568f25d0bcb2656c9d.ttf";

        /***/ }),

    /***/ "./src/fonts/bebasneuebook.woff":
    /*!**************************************!*\
  !*** ./src/fonts/bebasneuebook.woff ***!
  \**************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneuebook5323deef1c0595240ad371633a5f19d9.woff";

        /***/ }),

    /***/ "./src/fonts/bebasneuebook.woff2":
    /*!***************************************!*\
  !*** ./src/fonts/bebasneuebook.woff2 ***!
  \***************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneuebookd06936a0e4feb6da22401a268a797ae2.woff2";

        /***/ }),

    /***/ "./src/fonts/bebasneuelight.ttf":
    /*!**************************************!*\
  !*** ./src/fonts/bebasneuelight.ttf ***!
  \**************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneuelight014d547be3305d8ccbcaaf005fd83cb3.ttf";

        /***/ }),

    /***/ "./src/fonts/bebasneuelight.woff":
    /*!***************************************!*\
  !*** ./src/fonts/bebasneuelight.woff ***!
  \***************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneuelight25a6fa9accbc19c97cbb82462e984a16.woff";

        /***/ }),

    /***/ "./src/fonts/bebasneuelight.woff2":
    /*!****************************************!*\
  !*** ./src/fonts/bebasneuelight.woff2 ***!
  \****************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneuelight0cea2c75567b725beaa1dfa878b234c2.woff2";

        /***/ }),

    /***/ "./src/fonts/bebasneueregular.ttf":
    /*!****************************************!*\
  !*** ./src/fonts/bebasneueregular.ttf ***!
  \****************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneueregular1e49b741ab3430b2adb941ae55a99ef0.ttf";

        /***/ }),

    /***/ "./src/fonts/bebasneueregular.woff":
    /*!*****************************************!*\
  !*** ./src/fonts/bebasneueregular.woff ***!
  \*****************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneueregular3216eb8b241526bd0e409cf060a8fa03.woff";

        /***/ }),

    /***/ "./src/fonts/bebasneueregular.woff2":
    /*!******************************************!*\
  !*** ./src/fonts/bebasneueregular.woff2 ***!
  \******************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneueregulara7c6c96bd21227e0ade223071d0ae01c.woff2";

        /***/ }),

    /***/ "./src/fonts/bebasneuethin.ttf":
    /*!*************************************!*\
  !*** ./src/fonts/bebasneuethin.ttf ***!
  \*************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneuethin9d0490db71b2adb8ab2be48d0ff2f6a3.ttf";

        /***/ }),

    /***/ "./src/fonts/bebasneuethin.woff":
    /*!**************************************!*\
  !*** ./src/fonts/bebasneuethin.woff ***!
  \**************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneuethincf9534e0d7c1bf692f304452d8ce9681.woff";

        /***/ }),

    /***/ "./src/fonts/bebasneuethin.woff2":
    /*!***************************************!*\
  !*** ./src/fonts/bebasneuethin.woff2 ***!
  \***************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/bebasneuethin3b2b64d335b4d1a70abbd29e8c83927a.woff2";

        /***/ }),

    /***/ "./src/fonts/opensans.ttf":
    /*!********************************!*\
  !*** ./src/fonts/opensans.ttf ***!
  \********************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/opensansd2a705b59e370eaa5d145962f3b1ade1.ttf";

        /***/ }),

    /***/ "./src/fonts/opensans.woff":
    /*!*********************************!*\
  !*** ./src/fonts/opensans.woff ***!
  \*********************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/opensans811c8baeca3bb3329488f729979c1fbc.woff";

        /***/ }),

    /***/ "./src/fonts/opensans.woff2":
    /*!**********************************!*\
  !*** ./src/fonts/opensans.woff2 ***!
  \**********************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/opensans48aa7ad98beedc63d82925f45fd8e72c.woff2";

        /***/ }),

    /***/ "./src/fonts/opensansbold.ttf":
    /*!************************************!*\
  !*** ./src/fonts/opensansbold.ttf ***!
  \************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/opensansboldb87efff09ad1fd0e8da7f17ce94c4a83.ttf";

        /***/ }),

    /***/ "./src/fonts/opensansbold.woff":
    /*!*************************************!*\
  !*** ./src/fonts/opensansbold.woff ***!
  \*************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/opensansbold6f05808b4f6a11d3feb1716291c7c038.woff";

        /***/ }),

    /***/ "./src/fonts/opensansbold.woff2":
    /*!**************************************!*\
  !*** ./src/fonts/opensansbold.woff2 ***!
  \**************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/opensansbold313824e85557a721d326424b6eb63fec.woff2";

        /***/ }),

    /***/ "./src/fonts/opensansitalic.ttf":
    /*!**************************************!*\
  !*** ./src/fonts/opensansitalic.ttf ***!
  \**************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/opensansitalicbf2f6b57cd6438b1e1ca22dd53c319c0.ttf";

        /***/ }),

    /***/ "./src/fonts/opensansitalic.woff":
    /*!***************************************!*\
  !*** ./src/fonts/opensansitalic.woff ***!
  \***************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/opensansitalic576f55c34a35e2d1e8d46dc916dd53de.woff";

        /***/ }),

    /***/ "./src/fonts/opensansitalic.woff2":
    /*!****************************************!*\
  !*** ./src/fonts/opensansitalic.woff2 ***!
  \****************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "fonts/opensansitalicfbf7f082bb8abfeef11c89c77452f796.woff2";

        /***/ }),

    /***/ "./src/img/arr-right.png":
    /*!*******************************!*\
  !*** ./src/img/arr-right.png ***!
  \*******************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/arr-right.png";

        /***/ }),

    /***/ "./src/img/aside.png":
    /*!***************************!*\
  !*** ./src/img/aside.png ***!
  \***************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/aside.png";

        /***/ }),

    /***/ "./src/img/bg/bg.png":
    /*!***************************!*\
  !*** ./src/img/bg/bg.png ***!
  \***************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/bg.png";

        /***/ }),

    /***/ "./src/img/bg/branch-locator.jpg":
    /*!***************************************!*\
  !*** ./src/img/bg/branch-locator.jpg ***!
  \***************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/branch-locator.jpg";

        /***/ }),

    /***/ "./src/img/bg/hexagons-left.png":
    /*!**************************************!*\
  !*** ./src/img/bg/hexagons-left.png ***!
  \**************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/hexagons-left.png";

        /***/ }),

    /***/ "./src/img/bg/quote-mark-dk.png":
    /*!**************************************!*\
  !*** ./src/img/bg/quote-mark-dk.png ***!
  \**************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/quote-mark-dk.png";

        /***/ }),

    /***/ "./src/img/bg/search-close.png":
    /*!*************************************!*\
  !*** ./src/img/bg/search-close.png ***!
  \*************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/search-close.png";

        /***/ }),

    /***/ "./src/img/bg/search-dark.png":
    /*!************************************!*\
  !*** ./src/img/bg/search-dark.png ***!
  \************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/search-dark.png";

        /***/ }),

    /***/ "./src/img/bg/subnav-arrow.png":
    /*!*************************************!*\
  !*** ./src/img/bg/subnav-arrow.png ***!
  \*************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/subnav-arrow.png";

        /***/ }),

    /***/ "./src/img/btn-bg.png":
    /*!****************************!*\
  !*** ./src/img/btn-bg.png ***!
  \****************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/btn-bg.png";

        /***/ }),

    /***/ "./src/img/carousel-left.png":
    /*!***********************************!*\
  !*** ./src/img/carousel-left.png ***!
  \***********************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/carousel-left.png";

        /***/ }),

    /***/ "./src/img/carousel-right.png":
    /*!************************************!*\
  !*** ./src/img/carousel-right.png ***!
  \************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/carousel-right.png";

        /***/ }),

    /***/ "./src/img/email-svg.png":
    /*!*******************************!*\
  !*** ./src/img/email-svg.png ***!
  \*******************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/email-svg.png";

        /***/ }),

    /***/ "./src/img/facebook-svg.png":
    /*!**********************************!*\
  !*** ./src/img/facebook-svg.png ***!
  \**********************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/facebook-svg.png";

        /***/ }),

    /***/ "./src/img/locations.png":
    /*!*******************************!*\
  !*** ./src/img/locations.png ***!
  \*******************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/locations.png";

        /***/ }),

    /***/ "./src/img/mob-arrow.png":
    /*!*******************************!*\
  !*** ./src/img/mob-arrow.png ***!
  \*******************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/mob-arrow.png";

        /***/ }),

    /***/ "./src/img/phone.png":
    /*!***************************!*\
  !*** ./src/img/phone.png ***!
  \***************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/phone.png";

        /***/ }),

    /***/ "./src/img/pinterest-svg.png":
    /*!***********************************!*\
  !*** ./src/img/pinterest-svg.png ***!
  \***********************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/pinterest-svg.png";

        /***/ }),

    /***/ "./src/img/science.jpg":
    /*!*****************************!*\
  !*** ./src/img/science.jpg ***!
  \*****************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/science.jpg";

        /***/ }),

    /***/ "./src/img/search.png":
    /*!****************************!*\
  !*** ./src/img/search.png ***!
  \****************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/search.png";

        /***/ }),

    /***/ "./src/img/students.png":
    /*!******************************!*\
  !*** ./src/img/students.png ***!
  \******************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/students.png";

        /***/ }),

    /***/ "./src/img/truck.jpg":
    /*!***************************!*\
  !*** ./src/img/truck.jpg ***!
  \***************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/truck.jpg";

        /***/ }),

    /***/ "./src/img/twitter-svg.png":
    /*!*********************************!*\
  !*** ./src/img/twitter-svg.png ***!
  \*********************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/twitter-svg.png";

        /***/ }),

    /***/ "./src/img/youtube.png":
    /*!*****************************!*\
  !*** ./src/img/youtube.png ***!
  \*****************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "images/youtube.png";

        /***/ }),

    /***/ "./src/js/index.js":
    /*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
    /*! no exports provided */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var babel_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! babel-polyfill */ "./node_modules/babel-polyfill/lib/index.js");
        /* harmony import */ var babel_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(babel_polyfill__WEBPACK_IMPORTED_MODULE_0__);
        /* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
        /* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
        /* harmony import */ var _less_style_less__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../less/style.less */ "./src/less/style.less");
        /* harmony import */ var _less_style_less__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_less_style_less__WEBPACK_IMPORTED_MODULE_2__);
        /* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm.js");
        /* harmony import */ var _vue_common_PestsCarousel_vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../vue/common/PestsCarousel.vue */ "./src/vue/common/PestsCarousel.vue");
        /* harmony import */ var _vue_common_SelectLinks_vue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../vue/common/SelectLinks.vue */ "./src/vue/common/SelectLinks.vue");
        /* harmony import */ var _vue_common_Select_vue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../vue/common/Select.vue */ "./src/vue/common/Select.vue");
        /* harmony import */ var _vue_common_Zip_vue__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../vue/common/Zip.vue */ "./src/vue/common/Zip.vue");
        /* harmony import */ var _objects_regions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../objects/regions */ "./src/objects/regions.js");









        window.regions = _objects_regions__WEBPACK_IMPORTED_MODULE_8__["default"];
        var debugIn = "<div class=\"debug-in\">\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>";
        jquery__WEBPACK_IMPORTED_MODULE_1___default()('.din').css('position', 'relative').prepend(debugIn); //TPL

        jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).on('click', 'label[for="tt"]', function () {
            jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).find('body').toggleClass('tpl');
        }); // ZIP

        jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).on('input', '.region-search', function () {
            var nest = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).parents('.communication-callback_col');
            var res = '';

            if (event.target.value.length > 1) {
                for (var k in _objects_regions__WEBPACK_IMPORTED_MODULE_8__["default"]) {
                    var s = _objects_regions__WEBPACK_IMPORTED_MODULE_8__["default"][k].name.toLowerCase();
                    var i = event.target.value.toLowerCase();

                    if (s.indexOf(i) >= 0) {
                        res += "<li><a rel=\"" + _objects_regions__WEBPACK_IMPORTED_MODULE_8__["default"][k].code + "\" href=\"javascript:\">" + _objects_regions__WEBPACK_IMPORTED_MODULE_8__["default"][k].name + "</a></li>";
                    }
                }
            }

            console.log(res);

            if (res.length > 0) {
                jquery__WEBPACK_IMPORTED_MODULE_1___default()(nest).find('.regions-list').show();
                jquery__WEBPACK_IMPORTED_MODULE_1___default()(nest).find('.regions-list').html(res);
            } else {
                jquery__WEBPACK_IMPORTED_MODULE_1___default()(nest).find('.regions-list').hide();
            }
        });
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).scroll(function () {
            var s = jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).scrollTop();

            if (jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).scrollTop() > 20) {
                jquery__WEBPACK_IMPORTED_MODULE_1___default()('.header').addClass('scroll');
            } else {
                jquery__WEBPACK_IMPORTED_MODULE_1___default()('.header').removeClass('scroll');
            }

            if (jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).scrollTop() > 140) {
                jquery__WEBPACK_IMPORTED_MODULE_1___default()('.pest-menu-callback').addClass('scrolled');
            } else {
                jquery__WEBPACK_IMPORTED_MODULE_1___default()('.pest-menu-callback').removeClass('scrolled');
            }
        });
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).on('click', '.regions-list a', function () {
            var nest = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).parents('.communication-callback_col');
            var btn = jquery__WEBPACK_IMPORTED_MODULE_1___default()(nest).find('.region-sbt');
            console.log(jquery__WEBPACK_IMPORTED_MODULE_1___default()(nest));
            jquery__WEBPACK_IMPORTED_MODULE_1___default()(nest).find('.region-search').val(jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).text());
            jquery__WEBPACK_IMPORTED_MODULE_1___default()(nest).find('.regions-list').hide();
            jquery__WEBPACK_IMPORTED_MODULE_1___default()(nest).find('.region-sbt').addClass('active');
        });

        function supportsImports() {
            return 'import' in document.createElement('link');
        }

        if (supportsImports()) {
            console.log('Good to go!!!');
        } else {
            console.log('Use other libraries/require systems to load files.');
        }

        jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).on('change', '#regionsSwitcher', function () {
            jquery__WEBPACK_IMPORTED_MODULE_1___default()('#mobileSearchSwitcher').prop('checked', false);
        });
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).on('change', '#mobileSearchSwitcher', function () {
            jquery__WEBPACK_IMPORTED_MODULE_1___default()('#regionsSwitcher').prop('checked', false);
        });
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).on('click', '.root', function (e) {
            jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).find('.root').removeClass('active');
            jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).addClass('active'); // e.stopPropagation();
            // e.stopImmediatePropagation()
        });
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).on('click', '.root.active', function (e) {
            jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).find('.root').removeClass('active'); // e.stopPropagation();
            // e.stopImmediatePropagation()
        });
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).on('click', '.root.active *', function (e) {
            e.stopPropagation();
            e.stopImmediatePropagation();
        });
        vue__WEBPACK_IMPORTED_MODULE_3__["default"].directive('click-outside', {
            bind: function bind() {
                var _this = this;

                this.event = function (event) {
                    return _this.vm.$emit(_this.expression, event);
                };

                this.el.addEventListener('click', this.stopProp);
                document.body.addEventListener('click', this.event);
            },
            unbind: function unbind() {
                this.el.removeEventListener('click', this.stopProp);
                document.body.removeEventListener('click', this.event);
            },
            stopProp: function stopProp(event) {
                event.stopPropagation();
            }
        });

        if (jquery__WEBPACK_IMPORTED_MODULE_1___default()('#pests_slider').length) {
            var pests_slider = new vue__WEBPACK_IMPORTED_MODULE_3__["default"]({
                el: '#pests_slider',
                render: function render(h) {
                    return h(_vue_common_PestsCarousel_vue__WEBPACK_IMPORTED_MODULE_4__["default"]);
                }
            });
        }

        if (jquery__WEBPACK_IMPORTED_MODULE_1___default()('.select-links').length) {
            var select_links = new vue__WEBPACK_IMPORTED_MODULE_3__["default"]({
                el: '.select-links',
                render: function render(h) {
                    return h(_vue_common_SelectLinks_vue__WEBPACK_IMPORTED_MODULE_5__["default"]);
                }
            });
        }

        if (jquery__WEBPACK_IMPORTED_MODULE_1___default()('.select').length) {
            var select = new vue__WEBPACK_IMPORTED_MODULE_3__["default"]({
                el: '.select',
                render: function render(h) {
                    return h(_vue_common_Select_vue__WEBPACK_IMPORTED_MODULE_6__["default"]);
                }
            });
        }

        if (jquery__WEBPACK_IMPORTED_MODULE_1___default()('[rel="region"]').length) {
            var zip = new vue__WEBPACK_IMPORTED_MODULE_3__["default"]({
                el: '[rel="region"]',
                render: function render(h) {
                    return h(_vue_common_Zip_vue__WEBPACK_IMPORTED_MODULE_7__["default"]);
                }
            });
        }

        /***/ }),

    /***/ "./src/less/style.less":
    /*!*****************************!*\
  !*** ./src/less/style.less ***!
  \*****************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {


        var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less */ "./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/less/style.less");

        if(typeof content === 'string') content = [[module.i, content, '']];

        var transform;
        var insertInto;



        var options = {"hmr":true}

        options.transform = transform
        options.insertInto = undefined;

        var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

        if(content.locals) module.exports = content.locals;

        if(true) {
            module.hot.accept(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less */ "./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/less/style.less", function() {
                var newContent = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less */ "./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/less/style.less");

                if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];

                var locals = (function(a, b) {
                    var key, idx = 0;

                    for(key in a) {
                        if(!b || a[key] !== b[key]) return false;
                        idx++;
                    }

                    for(key in b) idx--;

                    return idx === 0;
                }(content.locals, newContent.locals));

                if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

                update(newContent);
            });

            module.hot.dispose(function() { update(); });
        }

        /***/ }),

    /***/ "./src/objects/regions.js":
    /*!********************************!*\
  !*** ./src/objects/regions.js ***!
  \********************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */ __webpack_exports__["default"] = ([{
            "code": 1,
            "name": "Республика Адыгея (Адыгея)"
        }, {
            "code": 2,
            "name": "Республика Башкортостан"
        }, {
            "code": 3,
            "name": "Республика Бурятия"
        }, {
            "code": 4,
            "name": "Республика Алтай"
        }, {
            "code": 5,
            "name": "Республика Дагестан"
        }, {
            "code": 6,
            "name": "Республика Ингушетия"
        }, {
            "code": 7,
            "name": "Кабардино-Балкарская Республика"
        }, {
            "code": 8,
            "name": "Республика Калмыкия"
        }, {
            "code": 9,
            "name": "Карачаево-Черкесская Республика"
        }, {
            "code": 10,
            "name": "Республика Карелия"
        }, {
            "code": 11,
            "name": "Республика Коми"
        }, {
            "code": 12,
            "name": "Республика Марий Эл"
        }, {
            "code": 13,
            "name": "Республика Мордовия"
        }, {
            "code": 14,
            "name": "Республика Саха (Якутия)"
        }, {
            "code": 15,
            "name": "Республика Северная Осетия - Алания"
        }, {
            "code": 16,
            "name": "Республика Татарстан (Татарстан)"
        }, {
            "code": 17,
            "name": "Республика Тыва"
        }, {
            "code": 18,
            "name": "Удмуртская Республика"
        }, {
            "code": 19,
            "name": "Республика Хакасия"
        }, {
            "code": 20,
            "name": "Чеченская Республика"
        }, {
            "code": 21,
            "name": "Чувашская Республика - Чувашия"
        }, {
            "code": 22,
            "name": "Алтайский край"
        }, {
            "code": 23,
            "name": "Краснодарский край"
        }, {
            "code": 24,
            "name": "Красноярский край"
        }]);

        /***/ }),

    /***/ "./src/vue/common/PestsCarousel.vue":
    /*!******************************************!*\
  !*** ./src/vue/common/PestsCarousel.vue ***!
  \******************************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PestsCarousel_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./PestsCarousel.vue */ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/PestsCarousel.vue");
        /* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_template_compiler_index_id_data_v_3813a3ca_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PestsCarousel_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/template-compiler/index?{"id":"data-v-3813a3ca","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./PestsCarousel.vue */ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-3813a3ca\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/PestsCarousel.vue");
        /* harmony import */ var _node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/component-normalizer */ "./node_modules/vue-loader/lib/runtime/component-normalizer.js");
        var disposed = false
        /* script */


        /* template */

        /* template functional */
        var __vue_template_functional__ = false
        /* styles */
        var __vue_styles__ = null
        /* scopeId */
        var __vue_scopeId__ = null
        /* moduleIdentifier (server only) */
        var __vue_module_identifier__ = null

        var Component = Object(_node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__["default"])(
            _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_PestsCarousel_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
            _node_modules_vue_loader_lib_template_compiler_index_id_data_v_3813a3ca_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PestsCarousel_vue__WEBPACK_IMPORTED_MODULE_1__["render"],
            _node_modules_vue_loader_lib_template_compiler_index_id_data_v_3813a3ca_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_PestsCarousel_vue__WEBPACK_IMPORTED_MODULE_1__["staticRenderFns"],
            __vue_template_functional__,
            __vue_styles__,
            __vue_scopeId__,
            __vue_module_identifier__
        )
        Component.options.__file = "src/vue/common/PestsCarousel.vue"

        /* hot reload */
        if (true) {(function () {
            var hotAPI = __webpack_require__(/*! vue-hot-reload-api */ "./node_modules/vue-hot-reload-api/dist/index.js")
            hotAPI.install(__webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm.js"), false)
            if (!hotAPI.compatible) return
            module.hot.accept()
            if (!module.hot.data) {
                hotAPI.createRecord("data-v-3813a3ca", Component.options)
            } else {
                hotAPI.reload("data-v-3813a3ca", Component.options)
            }
            module.hot.dispose(function (data) {
                disposed = true
            })
        })()}

        /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


        /***/ }),

    /***/ "./src/vue/common/Select.vue":
    /*!***********************************!*\
  !*** ./src/vue/common/Select.vue ***!
  \***********************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Select_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Select.vue */ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/Select.vue");
        /* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_template_compiler_index_id_data_v_70b73224_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Select_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/template-compiler/index?{"id":"data-v-70b73224","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Select.vue */ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-70b73224\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/Select.vue");
        /* harmony import */ var _node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/component-normalizer */ "./node_modules/vue-loader/lib/runtime/component-normalizer.js");
        var disposed = false
        /* script */


        /* template */

        /* template functional */
        var __vue_template_functional__ = false
        /* styles */
        var __vue_styles__ = null
        /* scopeId */
        var __vue_scopeId__ = null
        /* moduleIdentifier (server only) */
        var __vue_module_identifier__ = null

        var Component = Object(_node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__["default"])(
            _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Select_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
            _node_modules_vue_loader_lib_template_compiler_index_id_data_v_70b73224_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Select_vue__WEBPACK_IMPORTED_MODULE_1__["render"],
            _node_modules_vue_loader_lib_template_compiler_index_id_data_v_70b73224_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Select_vue__WEBPACK_IMPORTED_MODULE_1__["staticRenderFns"],
            __vue_template_functional__,
            __vue_styles__,
            __vue_scopeId__,
            __vue_module_identifier__
        )
        Component.options.__file = "src/vue/common/Select.vue"

        /* hot reload */
        if (true) {(function () {
            var hotAPI = __webpack_require__(/*! vue-hot-reload-api */ "./node_modules/vue-hot-reload-api/dist/index.js")
            hotAPI.install(__webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm.js"), false)
            if (!hotAPI.compatible) return
            module.hot.accept()
            if (!module.hot.data) {
                hotAPI.createRecord("data-v-70b73224", Component.options)
            } else {
                hotAPI.reload("data-v-70b73224", Component.options)
            }
            module.hot.dispose(function (data) {
                disposed = true
            })
        })()}

        /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


        /***/ }),

    /***/ "./src/vue/common/SelectLinks.vue":
    /*!****************************************!*\
  !*** ./src/vue/common/SelectLinks.vue ***!
  \****************************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SelectLinks_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SelectLinks.vue */ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/SelectLinks.vue");
        /* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_template_compiler_index_id_data_v_8981a1ca_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SelectLinks_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/template-compiler/index?{"id":"data-v-8981a1ca","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SelectLinks.vue */ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-8981a1ca\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/SelectLinks.vue");
        /* harmony import */ var _node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/component-normalizer */ "./node_modules/vue-loader/lib/runtime/component-normalizer.js");
        var disposed = false
        /* script */


        /* template */

        /* template functional */
        var __vue_template_functional__ = false
        /* styles */
        var __vue_styles__ = null
        /* scopeId */
        var __vue_scopeId__ = null
        /* moduleIdentifier (server only) */
        var __vue_module_identifier__ = null

        var Component = Object(_node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__["default"])(
            _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SelectLinks_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
            _node_modules_vue_loader_lib_template_compiler_index_id_data_v_8981a1ca_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SelectLinks_vue__WEBPACK_IMPORTED_MODULE_1__["render"],
            _node_modules_vue_loader_lib_template_compiler_index_id_data_v_8981a1ca_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SelectLinks_vue__WEBPACK_IMPORTED_MODULE_1__["staticRenderFns"],
            __vue_template_functional__,
            __vue_styles__,
            __vue_scopeId__,
            __vue_module_identifier__
        )
        Component.options.__file = "src/vue/common/SelectLinks.vue"

        /* hot reload */
        if (true) {(function () {
            var hotAPI = __webpack_require__(/*! vue-hot-reload-api */ "./node_modules/vue-hot-reload-api/dist/index.js")
            hotAPI.install(__webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm.js"), false)
            if (!hotAPI.compatible) return
            module.hot.accept()
            if (!module.hot.data) {
                hotAPI.createRecord("data-v-8981a1ca", Component.options)
            } else {
                hotAPI.reload("data-v-8981a1ca", Component.options)
            }
            module.hot.dispose(function (data) {
                disposed = true
            })
        })()}

        /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


        /***/ }),

    /***/ "./src/vue/common/Zip.vue":
    /*!********************************!*\
  !*** ./src/vue/common/Zip.vue ***!
  \********************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Zip_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Zip.vue */ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/vue/common/Zip.vue");
        /* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_template_compiler_index_id_data_v_3d517bc2_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Zip_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/template-compiler/index?{"id":"data-v-3d517bc2","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Zip.vue */ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-3d517bc2\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/vue/common/Zip.vue");
        /* harmony import */ var _node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/component-normalizer */ "./node_modules/vue-loader/lib/runtime/component-normalizer.js");
        var disposed = false
        /* script */


        /* template */

        /* template functional */
        var __vue_template_functional__ = false
        /* styles */
        var __vue_styles__ = null
        /* scopeId */
        var __vue_scopeId__ = null
        /* moduleIdentifier (server only) */
        var __vue_module_identifier__ = null

        var Component = Object(_node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__["default"])(
            _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Zip_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
            _node_modules_vue_loader_lib_template_compiler_index_id_data_v_3d517bc2_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Zip_vue__WEBPACK_IMPORTED_MODULE_1__["render"],
            _node_modules_vue_loader_lib_template_compiler_index_id_data_v_3d517bc2_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Zip_vue__WEBPACK_IMPORTED_MODULE_1__["staticRenderFns"],
            __vue_template_functional__,
            __vue_styles__,
            __vue_scopeId__,
            __vue_module_identifier__
        )
        Component.options.__file = "src/vue/common/Zip.vue"

        /* hot reload */
        if (true) {(function () {
            var hotAPI = __webpack_require__(/*! vue-hot-reload-api */ "./node_modules/vue-hot-reload-api/dist/index.js")
            hotAPI.install(__webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm.js"), false)
            if (!hotAPI.compatible) return
            module.hot.accept()
            if (!module.hot.data) {
                hotAPI.createRecord("data-v-3d517bc2", Component.options)
            } else {
                hotAPI.reload("data-v-3d517bc2", Component.options)
            }
            module.hot.dispose(function (data) {
                disposed = true
            })
        })()}

        /* harmony default export */ __webpack_exports__["default"] = (Component.exports);


        /***/ }),

    /***/ "./src/vue/common/pestsSlider.js":
    /*!***************************************!*\
  !*** ./src/vue/common/pestsSlider.js ***!
  \***************************************/
    /*! exports provided: default */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */ __webpack_exports__["default"] = ([{
            img: 'bed-bugs.jpg',
            name: 'Bed Bugs',
            desc: 'Genus <em>Cimex</em>',
            url: 'javascript:'
        }, {
            img: 'cockroaches.jpg',
            name: 'cockroaches',
            desc: 'Order Blattaria',
            url: 'javascript:'
        }, {
            img: 'termites.jpg',
            name: 'termites',
            desc: 'Order Isoptera',
            url: 'javascript:'
        }, {
            img: 'ants.jpg',
            name: 'ants',
            desc: 'Family Formicidae',
            url: 'javascript:'
        }, {
            img: 'rodents.jpg',
            name: 'rodents',
            desc: 'Order Rodentia',
            url: 'javascript:'
        }, {
            img: 'flies.jpg',
            name: 'flies',
            desc: 'Order Diptera',
            url: 'javascript:'
        }, {
            img: 'mosquitos.jpg',
            name: 'mosquitos',
            desc: 'Family Culicdae',
            url: 'javascript:'
        }, {
            img: 'fleas.jpg',
            name: 'fleas',
            desc: 'Order Siphonaptera',
            url: 'javascript:'
        }, {
            img: 'spiders.jpg',
            name: 'spiders',
            desc: 'Order Araneae',
            url: 'javascript:'
        }, {
            img: 'ticks.jpg',
            name: 'ticks',
            desc: 'Order Acari',
            url: 'javascript:'
        }, {
            img: 'beetles.jpg',
            name: 'beetles',
            desc: 'Order Coleoptera',
            url: 'javascript:'
        }, {
            img: 'gnat.jpg',
            name: 'gnats',
            desc: 'Class Diptera',
            url: 'javascript:'
        }, {
            img: 'silver-fish.jpg',
            name: 'silverfish',
            desc: 'Order Thysanura',
            url: 'javascript:'
        }, {
            img: 'earwig.jpg',
            name: 'earwig',
            desc: 'Order Dermaptera',
            url: 'javascript:'
        }, {
            img: 'stinging-pests.jpg',
            name: 'stinging pests',
            desc: '',
            url: 'javascript:'
        }, {
            img: 'stink-bugs.jpg',
            name: 'stink bugs',
            desc: 'Order Hemipetera',
            url: 'javascript:'
        }, {
            img: 'millipedes.jpg',
            name: 'millipedes',
            desc: 'Class Diplopoda',
            url: 'javascript:'
        }, {
            img: 'weevils.jpg',
            name: 'weevils',
            desc: 'Order Coleoptera',
            url: 'javascript:'
        }, {
            img: 'fruitfly.jpg',
            name: 'fruit flies',
            desc: 'Order Diptera',
            url: 'javascript:'
        }, {
            img: 'centipede.jpg',
            name: 'centipede',
            desc: 'Class Chilopoda',
            url: 'javascript:'
        }, {
            img: 'box-elder.jpg',
            name: 'box elder',
            desc: 'Boisea trivittata',
            url: 'javascript:'
        }, {
            img: 'mite.jpg',
            name: 'mites',
            desc: 'Class Arachnida',
            url: 'javascript:'
        }, {
            img: 'right-arrow.png',
            name: 'Other Pests',
            desc: '',
            url: 'javascript:'
        }]);

        /***/ }),

    /***/ 0:
    /*!*************************************************************************************************************!*\
  !*** multi (webpack)-dev-server/client?http://localhost:8080 (webpack)/hot/dev-server.js ./src/js/index.js ***!
  \*************************************************************************************************************/
    /*! no static exports found */
    /***/ (function(module, exports, __webpack_require__) {

        __webpack_require__(/*! /home/uretral/_deployment/_MSE/ses-team/node_modules/webpack-dev-server/client/index.js?http://localhost:8080 */"./node_modules/webpack-dev-server/client/index.js?http://localhost:8080");
        __webpack_require__(/*! /home/uretral/_deployment/_MSE/ses-team/node_modules/webpack/hot/dev-server.js */"./node_modules/webpack/hot/dev-server.js");
        module.exports = __webpack_require__(/*! ./src/js/index.js */"./src/js/index.js");


        /***/ })

    /******/ });
//# sourceMappingURL=main.js.map
